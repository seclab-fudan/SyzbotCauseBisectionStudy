ci starts bisection 2022-10-28 05:29:06.898290072 +0000 UTC m=+107376.912833058
bisecting cause commit starting from 88619e77b33d5718fae3c13d29f94b2646facfcd
building syzkaller on 2159e4d29f58ffa1107fc2213dbc87185ff4498f
ensuring issue is reproducible on original commit 88619e77b33d5718fae3c13d29f94b2646facfcd

testing commit 88619e77b33d5718fae3c13d29f94b2646facfcd gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: c43526b0560f041eb544d4d084c2be2976e763a725fff02af895e70f3758aa93
all runs: crashed: KASAN: use-after-free Read in task_work_run
testing release v6.0
testing commit 4fe89d07dcc2804c8b562f6c7896a45643d34b2f gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: fe24ad7917449ae89c29a7c15a18b23aa9960dd3a5fc5abb14a2545b86092000
all runs: OK
# git bisect start 88619e77b33d5718fae3c13d29f94b2646facfcd 4fe89d07dcc2804c8b562f6c7896a45643d34b2f
Bisecting: 6418 revisions left to test after this (roughly 13 steps)
[76e45035348c247a70ed50eb29a9906657e4444f] Merge tag 'for-6.1-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/kdave/linux

testing commit 76e45035348c247a70ed50eb29a9906657e4444f gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 836076817438cfb07cd205c56224904a0d366bd9a96c3feffd98649c52703c8e
all runs: OK
# git bisect good 76e45035348c247a70ed50eb29a9906657e4444f
Bisecting: 3207 revisions left to test after this (roughly 12 steps)
[52abb27abfff8c5ddf44eef4d759f3d1e9f166c5] Merge tag 'slab-for-6.1-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/vbabka/slab

testing commit 52abb27abfff8c5ddf44eef4d759f3d1e9f166c5 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 610e0679cb99980048a0fffcbca49cef2499f9bfd0bd37c510cd4857549459b8
all runs: OK
# git bisect good 52abb27abfff8c5ddf44eef4d759f3d1e9f166c5
Bisecting: 1671 revisions left to test after this (roughly 11 steps)
[be8ddea9e75e65b05837f6d51dc5774b866d0bcf] vdpa/ifcvf: add reviewer

testing commit be8ddea9e75e65b05837f6d51dc5774b866d0bcf gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 32a50162b071d2e2b04e7673a48ab0ca68b947c6a240bb9423aa567dd50bf68b
all runs: boot failed: WARNING in cpumask_next_wrap
# git bisect skip be8ddea9e75e65b05837f6d51dc5774b866d0bcf
Bisecting: 1671 revisions left to test after this (roughly 11 steps)
[76d777ae045e345ccfbf2d7c873674de09a8a041] dt-bindings: PCI: qcom: Add SC8280XP to binding

testing commit 76d777ae045e345ccfbf2d7c873674de09a8a041 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 45f43c98d259652d4230c045d8030793d968860403b64282c25f079ee426bb72
run #0: boot failed: WARNING in corrupted
run #1: boot failed: BUG: unable to handle kernel paging request in kernel_execve
run #2: boot failed: kernel BUG in __phys_addr
run #3: boot failed: general protection fault in driver_register
run #4: boot failed: general protection fault in alloc_netdev_mqs
run #5: boot failed: kernel BUG in __phys_addr
run #6: boot failed: general protection fault in driver_register
run #7: boot failed: BUG: unable to handle kernel paging request in copy_namespaces
run #8: boot failed: BUG: unable to handle kernel paging request in copy_namespaces
run #9: boot failed: general protection fault in driver_register
# git bisect skip 76d777ae045e345ccfbf2d7c873674de09a8a041
Bisecting: 1671 revisions left to test after this (roughly 11 steps)
[e762a998e71cc579487cf478d0a3b56634189ffa] perf vendor events: Update silvermont cpuids

testing commit e762a998e71cc579487cf478d0a3b56634189ffa gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 5d8c7f5c293c4411024e3a160563bf5f4a76302a906727885d11ea9ae694ca15
all runs: boot failed: WARNING in netlink_ack
# git bisect skip e762a998e71cc579487cf478d0a3b56634189ffa
Bisecting: 1671 revisions left to test after this (roughly 11 steps)
[7033b937e21b12629d920e7864c20c46bc4ccf39] crypto: lib - create utils module and move __crypto_memneq into it

testing commit 7033b937e21b12629d920e7864c20c46bc4ccf39 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 0f986b4e84ec676ee3bc25e935997f6335c0466e50d1a022d3de0351cb029df4
run #0: boot failed: general protection fault in alloc_bprm
run #1: boot failed: BUG: unable to handle kernel paging request in insert_header
run #2: boot failed: kernel BUG in __phys_addr
run #3: boot failed: general protection fault in driver_register
run #4: boot failed: general protection fault in copy_process
run #5: boot failed: general protection fault in driver_register
run #6: boot failed: general protection fault in netdev_queue_update_kobjects
run #7: boot failed: general protection fault in rcu_core
run #8: boot failed: general protection fault in driver_register
run #9: boot failed: BUG: unable to handle kernel paging request in kernel_execve
# git bisect skip 7033b937e21b12629d920e7864c20c46bc4ccf39
Bisecting: 1671 revisions left to test after this (roughly 11 steps)
[cdf072acb5baa18e5b05bdf3f13d6481f62396fc] Merge tag 'trace-v6.1' of git://git.kernel.org/pub/scm/linux/kernel/git/trace/linux-trace

testing commit cdf072acb5baa18e5b05bdf3f13d6481f62396fc gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 19aee4996821dbcc2710ae4e2674c668bd1bc5110c6cf8c5266aa17b23d4508a
run #0: crashed: SYZFATAL: executor failed NUM times: executor NUM: failed to write control pipe: write |NUM: broken pipe
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
reproducer seems to be flaky
# git bisect bad cdf072acb5baa18e5b05bdf3f13d6481f62396fc
Bisecting: 96 revisions left to test after this (roughly 6 steps)
[4de65c5830233e7a4adf2e679510089ec4e210c7] Merge tag 'livepatching-for-6.1' of git://git.kernel.org/pub/scm/linux/kernel/git/livepatching/livepatching

testing commit 4de65c5830233e7a4adf2e679510089ec4e210c7 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 732c26e752f9785742119e5264033e536f7ffe1d63bb3223643e5d3aa3f8d3ec
run #0: basic kernel testing failed: BUG: program execution failed: executor NUM: failed to write control pipe: write |NUM: broken pipe
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect good 4de65c5830233e7a4adf2e679510089ec4e210c7
Bisecting: 50 revisions left to test after this (roughly 6 steps)
[47cc75aa92837a9d3f15157d6272ff285585d75d] module: tracking: Keep a record of tainted unloaded modules only

testing commit 47cc75aa92837a9d3f15157d6272ff285585d75d gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 2559cf7149214c17657b8ce450da663ee6bd0f4ffddd4a95ce4a5abe9202781a
all runs: OK
# git bisect good 47cc75aa92837a9d3f15157d6272ff285585d75d
Bisecting: 25 revisions left to test after this (roughly 5 steps)
[7e9fbbb1b776d8d7969551565bc246f74ec53b27] ring-buffer: Add ring_buffer_wake_waiters()

testing commit 7e9fbbb1b776d8d7969551565bc246f74ec53b27 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: d9179af5d0bfcd7d081bc035b4ad254f8113868cd02c6184cea51666e9ca7de7
all runs: OK
# git bisect good 7e9fbbb1b776d8d7969551565bc246f74ec53b27
Bisecting: 12 revisions left to test after this (roughly 4 steps)
[ed87277f122674a943239c6e60d352c8d56deb50] tracing: Remove unused variable 'dups'

testing commit ed87277f122674a943239c6e60d352c8d56deb50 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 53e2291e1fe39e8f35a1453b4e5312f15b840a5fdb0f20ef450a133aa960eab7
run #0: basic kernel testing failed: BUG: program execution failed: executor NUM: exit status NUM
run #1: basic kernel testing failed: BUG: program execution failed: executor NUM: exit status NUM
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect good ed87277f122674a943239c6e60d352c8d56deb50
Bisecting: 6 revisions left to test after this (roughly 3 steps)
[4f881a696484a7d31a4d1b12547615b1a3ee5771] ftrace: Create separate entry in MAINTAINERS for function hooks

testing commit 4f881a696484a7d31a4d1b12547615b1a3ee5771 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 864da62625dde1a13e39f0dcb2591dc36229ccd8ea8a6b233f22d1c4037cc062
all runs: OK
# git bisect good 4f881a696484a7d31a4d1b12547615b1a3ee5771
Bisecting: 2 revisions left to test after this (roughly 2 steps)
[b13bc7cbb931727b1b0a63594cd734bfd979e985] kernel/sysctl.c: move sysctl_vals and sysctl_long_vals to sysctl.c

testing commit b13bc7cbb931727b1b0a63594cd734bfd979e985 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 8b3542f91a3b5483edaf2922fff92a98fe20cf2fa39f88eef9d6259ad4ac729c
all runs: OK
# git bisect good b13bc7cbb931727b1b0a63594cd734bfd979e985
Bisecting: 1 revision left to test after this (roughly 1 step)
[c06a17fe056b84f5784b2f13753870eb65edc9ed] kernel/sysctl-test: use SYSCTL_{ZERO/ONE_HUNDRED} instead of i_{zero/one_hundred}

testing commit c06a17fe056b84f5784b2f13753870eb65edc9ed gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: b8afc0d3b29ff95d3c71a5c458ff335d1f22e373cb83b196b9ea77eb2b86423d
all runs: OK
# git bisect good c06a17fe056b84f5784b2f13753870eb65edc9ed
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[dc55342867c9cf2295f4330420461361a9c8117d] Merge tag 'sysctl-6.1-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/mcgrof/linux

testing commit dc55342867c9cf2295f4330420461361a9c8117d gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 5d49865e8ee86a31b92ab3a654663cdddeacc23d6712f2062f10e859612565af
run #0: basic kernel testing failed: BUG: program execution failed: executor NUM: failed to write control pipe: write |NUM: broken pipe
run #1: basic kernel testing failed: BUG: program execution failed: executor NUM: failed to write control pipe: write |NUM: broken pipe
run #2: basic kernel testing failed: BUG: program execution failed: executor NUM: exit status NUM
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect good dc55342867c9cf2295f4330420461361a9c8117d
cdf072acb5baa18e5b05bdf3f13d6481f62396fc is the first bad commit
commit cdf072acb5baa18e5b05bdf3f13d6481f62396fc
Merge: dc55342867c9 4f881a696484
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Oct 10 12:20:55 2022 -0700

    Merge tag 'trace-v6.1' of git://git.kernel.org/pub/scm/linux/kernel/git/trace/linux-trace
    
    Pull tracing updates from Steven Rostedt:
     "Major changes:
    
       - Changed location of tracing repo from personal git repo to:
         git://git.kernel.org/pub/scm/linux/kernel/git/trace/linux-trace.git
    
       - Added Masami Hiramatsu as co-maintainer
    
       - Updated MAINTAINERS file to separate out FTRACE as it is more than
         just TRACING.
    
      Minor changes:
    
       - Added Mark Rutland as FTRACE reviewer
    
       - Updated user_events to make it on its way to remove the BROKEN tag.
         The changes should now be acceptable but will run it through a
         cycle and hopefully we can remove the BROKEN tag next release.
    
       - Added filtering to eprobes
    
       - Added a delta time to the benchmark trace event
    
       - Have the histogram and filter callbacks called via a switch
         statement instead of indirect functions. This speeds it up to avoid
         retpolines.
    
       - Add a way to wake up ring buffer waiters waiting for the ring
         buffer to fill up to its watermark.
    
       - New ioctl() on the trace_pipe_raw file to wake up ring buffer
         waiters.
    
       - Wake up waiters when the ring buffer is disabled. A reader may
         block when the ring buffer is disabled, but if it was blocked when
         the ring buffer is disabled it should then wake up.
    
      Fixes:
    
       - Allow splice to read partially read ring buffer pages. This fixes
         splice never moving forward.
    
       - Fix inverted compare that made the "shortest" ring buffer wait
         queue actually the longest.
    
       - Fix a race in the ring buffer between resetting a page when a
         writer goes to another page, and the reader.
    
       - Fix ftrace accounting bug when function hooks are added at boot up
         before the weak functions are set to "disabled".
    
       - Fix bug that freed a user allocated snapshot buffer when enabling a
         tracer.
    
       - Fix possible recursive locks in osnoise tracer
    
       - Fix recursive locking direct functions
    
       - Other minor clean ups and fixes"
    
    * tag 'trace-v6.1' of git://git.kernel.org/pub/scm/linux/kernel/git/trace/linux-trace: (44 commits)
      ftrace: Create separate entry in MAINTAINERS for function hooks
      tracing: Update MAINTAINERS to reflect new tracing git repo
      tracing: Do not free snapshot if tracer is on cmdline
      ftrace: Still disable enabled records marked as disabled
      tracing/user_events: Move pages/locks into groups to prepare for namespaces
      tracing: Add Masami Hiramatsu as co-maintainer
      tracing: Remove unused variable 'dups'
      MAINTAINERS: add myself as a tracing reviewer
      ring-buffer: Fix race between reset page and reading page
      tracing/user_events: Update ABI documentation to align to bits vs bytes
      tracing/user_events: Use bits vs bytes for enabled status page data
      tracing/user_events: Use refcount instead of atomic for ref tracking
      tracing/user_events: Ensure user provided strings are safely formatted
      tracing/user_events: Use WRITE instead of READ for io vector import
      tracing/user_events: Use NULL for strstr checks
      tracing: Fix spelling mistake "preapre" -> "prepare"
      tracing: Wake up waiters when tracing is disabled
      tracing: Add ioctl() to force ring buffer waiters to wake up
      tracing: Wake up ring buffer waiters on closing of the file
      ring-buffer: Add ring_buffer_wake_waiters()
      ...

 Documentation/trace/user_events.rst                |  86 +++-
 MAINTAINERS                                        |  26 +-
 arch/x86/include/asm/ftrace.h                      |   1 -
 arch/x86/include/asm/kprobes.h                     |   2 -
 arch/x86/kernel/kprobes/core.c                     |   2 -
 include/linux/ftrace.h                             |  41 --
 include/linux/ring_buffer.h                        |   2 +-
 include/linux/sched.h                              |   3 -
 include/linux/trace_events.h                       |   1 +
 include/linux/user_events.h                        |  15 +-
 kernel/trace/ftrace.c                              |  34 +-
 kernel/trace/kprobe_event_gen_test.c               |  49 +-
 kernel/trace/ring_buffer.c                         |  87 +++-
 kernel/trace/rv/monitors/wip/wip.c                 |   8 +-
 kernel/trace/rv/monitors/wwnr/wwnr.c               |   8 +-
 kernel/trace/trace.c                               |  78 ++-
 kernel/trace/trace.h                               |  13 -
 kernel/trace/trace_benchmark.c                     |   2 +-
 kernel/trace/trace_benchmark.h                     |   8 +-
 kernel/trace/trace_eprobe.c                        | 107 +++-
 kernel/trace/trace_events_filter.c                 | 239 ++++++---
 kernel/trace/trace_events_hist.c                   | 246 ++++++---
 kernel/trace/trace_events_user.c                   | 568 +++++++++++++++------
 kernel/trace/trace_osnoise.c                       |   3 +-
 kernel/trace/trace_probe.h                         |   3 +-
 kernel/trace/tracing_map.c                         |   5 +-
 kernel/tracepoint.c                                |  14 +-
 samples/user_events/example.c                      |  25 +-
 .../test.d/dynevent/eprobes_syntax_errors.tc       |  27 +
 tools/testing/selftests/user_events/ftrace_test.c  |  47 +-
 tools/testing/selftests/user_events/perf_test.c    |  11 +-
 .../dot2/dot2k_templates/main_global.c             |   8 +-
 .../dot2/dot2k_templates/main_per_cpu.c            |   8 +-
 .../dot2/dot2k_templates/main_per_task.c           |   8 +-
 34 files changed, 1299 insertions(+), 486 deletions(-)
 create mode 100644 tools/testing/selftests/ftrace/test.d/dynevent/eprobes_syntax_errors.tc

Reproducer flagged being flaky
revisions tested: 17, total time: 5h7m46.670270244s (build: 2h0m27.814043604s, test: 3h3m19.266065236s)
first bad commit: cdf072acb5baa18e5b05bdf3f13d6481f62396fc Merge tag 'trace-v6.1' of git://git.kernel.org/pub/scm/linux/kernel/git/trace/linux-trace
recipients (to): ["torvalds@linux-foundation.org"]
recipients (cc): []
crash: SYZFATAL: executor failed NUM times: executor NUM: failed to write control pipe: write |NUM: broken pipe
2022/10/28 07:55:56 SYZFATAL: executor failed 11 times: executor 0: failed to write control pipe: write |1: broken pipe
SYZFAIL: wrong response packet
 (errno 16: Device or resource busy)
loop exited with status 67

