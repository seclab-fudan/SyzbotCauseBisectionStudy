bisecting cause commit starting from e28c0d7c92c89016c12a677616668957351e7542
building syzkaller on 1bf9a662c66aa432ff2fe3bf2562578cef626c09
testing commit e28c0d7c92c89016c12a677616668957351e7542 with gcc (GCC) 8.1.0
kernel signature: d19d86bb63dfa61bb33a3bb2b80d0809fca79ef19a0b342746826ac3f707a58b
run #0: basic kernel testing failed: BUG: sleeping function called from invalid context in sta_info_move_state
run #1: crashed: BUG: unable to handle kernel NULL pointer dereference in ioctl_standard_call
run #2: crashed: BUG: unable to handle kernel NULL pointer dereference in ioctl_standard_call
run #3: crashed: BUG: unable to handle kernel NULL pointer dereference in ioctl_standard_call
run #4: crashed: BUG: unable to handle kernel NULL pointer dereference in ioctl_standard_call
run #5: crashed: BUG: unable to handle kernel NULL pointer dereference in ioctl_standard_call
run #6: crashed: BUG: unable to handle kernel NULL pointer dereference in ioctl_standard_call
run #7: crashed: BUG: unable to handle kernel NULL pointer dereference in ioctl_standard_call
run #8: crashed: BUG: unable to handle kernel NULL pointer dereference in ioctl_standard_call
run #9: crashed: BUG: unable to handle kernel NULL pointer dereference in ioctl_standard_call
testing release v5.9
testing commit bbf5c979011a099af5dc76498918ed7df445635b with gcc (GCC) 8.1.0
kernel signature: 5a15b1edcab1ab4abcb6aabaa9d641ef3b5e60fe3c01f52595240031165d717c
all runs: crashed: BUG: unable to handle kernel NULL pointer dereference in ioctl_standard_call
testing release v5.8
testing commit bcf876870b95592b52519ed4aafcf9d95999bc9c with gcc (GCC) 8.1.0
kernel signature: bae2ce506f54fac96f1afec55283e2f16a62f308eb975d094348b4597b09ef9b
all runs: crashed: BUG: unable to handle kernel NULL pointer dereference in ioctl_standard_call
testing release v5.7
testing commit 3d77e6a8804abcc0504c904bd6e5cdf3a5cf8162 with gcc (GCC) 8.1.0
kernel signature: 00f0b5c8f93a12659f677004946c1c266732a5e250206f93eb26cf3ef58b865b
all runs: crashed: general protection fault in call_commit_handler
testing release v5.6
testing commit 7111951b8d4973bda27ff663f2cf18b663d15b48 with gcc (GCC) 8.1.0
kernel signature: 7740b04c5f3b6e72141154567cf183bdc1abcab03bf0cfd4ccbd885d0138749d
all runs: crashed: general protection fault in call_commit_handler
testing release v5.5
testing commit d5226fa6dbae0569ee43ecfc08bdcd6770fc4755 with gcc (GCC) 8.1.0
kernel signature: 246fee441638f70c686aa820c9bcd8cc16579852600f249ce6525b58238f5108
all runs: crashed: general protection fault in call_commit_handler
testing release v5.4
testing commit 219d54332a09e8d8741c1e1982f5eae56099de85 with gcc (GCC) 8.1.0
kernel signature: 73e5b177f4c8fa8a6cdb5f9ba269fd9b793437b472882429ef47bc0d45e241f2
all runs: crashed: general protection fault in call_commit_handler
testing release v5.3
testing commit 4d856f72c10ecb060868ed10ff1b1453943fc6c8 with gcc (GCC) 8.1.0
kernel signature: a52d5d6fa6c782b368b631f03faa22d2599400fa7324f5576ccab81158a0a7bd
all runs: crashed: general protection fault in call_commit_handler
testing release v5.2
testing commit 0ecfebd2b52404ae0c54a878c872bb93363ada36 with gcc (GCC) 8.1.0
kernel signature: cfadcca7d2a22317ceb5b4777663f4858775bcfaf3202c3e13f550810f024271
all runs: crashed: general protection fault in ioctl_standard_call
testing release v5.1
testing commit e93c9c99a629c61837d5a7fc2120cd2b6c70dbdd with gcc (GCC) 8.1.0
kernel signature: 3c4899296ed646272ce87aa3663f79b2c03a215a65899d8010e2900ec9c73504
all runs: crashed: general protection fault in ioctl_standard_call
testing release v5.0
testing commit 1c163f4c7b3f621efff9b28a47abb36f7378d783 with gcc (GCC) 8.1.0
kernel signature: 8be2039e352f67e2628aef0b85d7203a2e18915b6a55bd447f67f67261711932
all runs: crashed: general protection fault in ioctl_standard_call
testing release v4.20
testing commit 8fe28cb58bcb235034b64cbbb7550a8a43fd88be with gcc (GCC) 8.1.0
kernel signature: 06be07a7cb8d88b536fad805c1fca144e72eed07326baca367bfaf4a12bd0d0e
run #0: crashed: general protection fault in ioctl_standard_call
run #1: crashed: general protection fault in ioctl_standard_call
run #2: crashed: general protection fault in ioctl_standard_call
run #3: crashed: general protection fault in ioctl_standard_call
run #4: crashed: general protection fault in ioctl_standard_call
run #5: crashed: general protection fault in ioctl_standard_call
run #6: crashed: general protection fault in ioctl_standard_call
run #7: crashed: general protection fault in corrupted
run #8: crashed: general protection fault in ioctl_standard_call
run #9: crashed: general protection fault in ioctl_standard_call
testing release v4.19
testing commit 84df9525b0c27f3ebc2ebb1864fa62a97fdedb7d with gcc (GCC) 8.1.0
kernel signature: ecd008556efb0d9ebf5ef354e5cf4422d8d966180e587bf114e4940c7df9b97f
all runs: crashed: general protection fault in ioctl_standard_call
testing release v4.18
testing commit 94710cac0ef4ee177a63b5227664b38c95bbf703 with gcc (GCC) 8.1.0
kernel signature: 1d7a9288b6d25f83e0fc0d419edd6b6a63a665eb81861c409031abff8e19d845
all runs: crashed: general protection fault in ioctl_standard_call
testing release v4.17
testing commit 29dcea88779c856c7dc92040a0c01233263101d4 with gcc (GCC) 8.1.0
kernel signature: 0d6b7e6fc836143c72a45370da2fcf57b3eeaf2873bdf258d7f0d35fdb5945fc
all runs: crashed: general protection fault in ioctl_standard_call
testing release v4.16
testing commit 0adb32858b0bddf4ada5f364a84ed60b196dbcda with gcc (GCC) 8.1.0
kernel signature: 1b7f9d55fad349339336218c3cbca6409550ead8d89a97aea18b24055efd218a
all runs: crashed: general protection fault in ioctl_standard_call
testing release v4.15
testing commit d8a5b80568a9cb66810e75b182018e9edb68e8ff with gcc (GCC) 8.1.0
kernel signature: 47ca6d10e6f5e80c75a8409609b20896626d88d86eb1e2990733e33573a1cb9f
all runs: basic kernel testing failed: WARNING in check_flush_dependency
testing release v4.14
testing commit bebc6082da0a9f5d47a1ea2edc099bf671058bd4 with gcc (GCC) 8.1.0
kernel signature: 1d823f9fba3c1e8376ff31f21d2194aba669c780a73b29aa132cefc8916437c1
all runs: crashed: general protection fault in ioctl_standard_call
testing release v4.13
testing commit 569dbb88e80deb68974ef6fdd6a13edb9d686261 with gcc (GCC) 8.1.0
kernel signature: fcd028a4a6e7d9d74eed633d7dd06b1d721d97425f3f51669b799d2798ac30f9
all runs: crashed: general protection fault in ioctl_standard_call
testing release v4.12
testing commit 6f7da290413ba713f0cdd9ff1a2a9bb129ef4f6c with gcc (GCC) 8.1.0
kernel signature: abf3473c7b0e8b265ce7c17ec657867e87dff0e9824e9cdb8deceffec8e93323
all runs: basic kernel testing failed: BUG: sleeping function called from invalid context in tap_get_minor
testing release v4.11
testing commit a351e9b9fc24e982ec2f0e76379a49826036da12 with gcc (GCC) 7.3.0
kernel signature: 5d99c52427eda825bfdb666b5580bb0939e7845716859f48b10a963e80f27b6b
all runs: basic kernel testing failed: BUG: sleeping function called from invalid context in tap_get_minor
testing release v4.10
testing commit c470abd4fde40ea6a0846a2beab642a578c0b8cd with gcc (GCC) 5.5.0
kernel signature: ec2dda92aa74b5f3e56b447edeaa34b49627dfc1221167a816d41c22772c29c3
all runs: crashed: general protection fault in call_commit_handler
testing release v4.9
testing commit 69973b830859bc6529a7a0468ba0d80ee5117826 with gcc (GCC) 5.5.0
kernel signature: 761b11c7511014e11c60d41d7d303230946ed9de3ef63c367c62367ab9ed68c5
all runs: crashed: general protection fault in call_commit_handler
testing release v4.8
testing commit c8d2bc9bc39ebea8437fd974fdbc21847bb897a3 with gcc (GCC) 5.5.0
kernel signature: 98a5047bb15c42db1c91279cca024aa2865eb647aaf52a002c9b387d7462c05e
all runs: crashed: general protection fault in call_commit_handler
testing release v4.7
testing commit 523d939ef98fd712632d93a5a2b588e477a7565e with gcc (GCC) 5.5.0
kernel signature: 3655540d7fb6acef06d0ccaf0d0e57665e24ab4ec04746cd1181ce3388df8992
run #0: basic kernel testing failed: BUG: program execution failed: executor 0: failed to write control pipe: write |1: broken pipe
run #1: basic kernel testing failed: BUG: program execution failed: executor 0: failed to write control pipe: write |1: broken pipe
run #2: basic kernel testing failed: BUG: program execution failed: executor 0: failed to write control pipe: write |1: broken pipe
run #3: basic kernel testing failed: BUG: program execution failed: executor 0: failed to write control pipe: write |1: broken pipe
run #4: basic kernel testing failed: BUG: program execution failed: executor 0: exit status 67
run #5: basic kernel testing failed: BUG: program execution failed: executor 0: exit status 67
run #6: basic kernel testing failed: BUG: program execution failed: executor 0: failed to write control pipe: write |1: broken pipe
run #7: basic kernel testing failed: BUG: program execution failed: executor 0: failed to write control pipe: write |1: broken pipe
run #8: basic kernel testing failed: BUG: program execution failed: executor 0: failed to write control pipe: write |1: broken pipe
run #9: basic kernel testing failed: BUG: program execution failed: executor 0: failed to write control pipe: write |1: broken pipe
testing release v4.6
testing commit 2dcd0af568b0cf583645c8a317dd12e344b1c72a with gcc (GCC) 5.5.0
kernel signature: b8693b893aeeeaf20791f6c122b90cad585392a61bb19520ba08a3ea48ef7ab3
run #0: basic kernel testing failed: BUG: program execution failed: executor 0: failed to write control pipe: write |1: broken pipe
run #1: basic kernel testing failed: BUG: program execution failed: executor 0: failed to write control pipe: write |1: broken pipe
run #2: basic kernel testing failed: BUG: program execution failed: executor 0: failed to write control pipe: write |1: broken pipe
run #3: basic kernel testing failed: BUG: program execution failed: executor 0: failed to write control pipe: write |1: broken pipe
run #4: basic kernel testing failed: BUG: program execution failed: executor 0: failed to write control pipe: write |1: broken pipe
run #5: basic kernel testing failed: BUG: program execution failed: executor 0: failed to write control pipe: write |1: broken pipe
run #6: basic kernel testing failed: BUG: program execution failed: executor 0: failed to write control pipe: write |1: broken pipe
run #7: basic kernel testing failed: BUG: program execution failed: executor 0: failed to write control pipe: write |1: broken pipe
run #8: basic kernel testing failed: BUG: program execution failed: executor 0: failed to write control pipe: write |1: broken pipe
run #9: basic kernel testing failed: BUG: program execution failed: executor 0: exit status 67
revisions tested: 26, total time: 3h18m47.345900626s (build: 2h3m38.654522047s, test: 1h11m8.576245406s)
the crash already happened on the oldest tested release
commit msg: Linux 4.8
crash: general protection fault in call_commit_handler
IPv6: ADDRCONF(NETDEV_UP): veth1_to_batadv: link is not ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_to_batadv: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth1_to_batadv: link becomes ready
kasan: CONFIG_KASAN_INLINE enabled
kasan: GPF could be caused by NULL-ptr deref or user memory access
general protection fault: 0000 [#1] PREEMPT SMP KASAN
Modules linked in:
CPU: 0 PID: 9638 Comm: syz-executor.3 Not tainted 4.8.0-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
task: ffff88011eb1b000 task.stack: ffff88012ece0000
RIP: 0010:[<ffffffff862b0480>]  [<ffffffff862b0480>] call_commit_handler.part.4+0x40/0xa0 net/wireless/wext-core.c:901
RSP: 0018:ffff88012ece7b20  EFLAGS: 00010246
RAX: dffffc0000000000 RBX: ffff8801336c8000 RCX: 0000000000000000
RDX: 0000000000000000 RSI: ffff88011eb1b810 RDI: ffff8801336c8200
RBP: ffff88012ece7b30 R08: 0000000000000006 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000
R13: 0000000000008b04 R14: ffff88012ece7d10 R15: ffff8801336c8000
FS:  00007fd28f0cf700(0000) GS:ffff88013bc00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 000055fba67c9108 CR3: 0000000134e97000 CR4: 00000000001406f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Stack:
 0000000000000004 ffffffff87565bf0 ffff88012ece7b78 ffffffff862b0609
 ffff88012ece7c00 ffff8801ffffff8d 0000000000008b04 ffffffff875653e0
 ffffffff862b2460 ffff88012ece7d00 ffff88012ece7c00 ffff88012ece7bc8
Call Trace:
 [<ffffffff862b0609>] call_commit_handler net/wireless/wext-core.c:900 [inline]
 [<ffffffff862b0609>] ioctl_standard_call+0x129/0x190 net/wireless/wext-core.c:1034
 [<ffffffff862b02d9>] wireless_process_ioctl+0x369/0x4d0 net/wireless/wext-core.c:956
 [<ffffffff862b0d9b>] wext_ioctl_dispatch net/wireless/wext-core.c:992 [inline]
 [<ffffffff862b0d9b>] wext_handle_ioctl+0xab/0x140 net/wireless/wext-core.c:1048
 [<ffffffff854f1d2b>] dev_ioctl+0x66b/0xcd0 net/core/dev_ioctl.c:564
 [<ffffffff8542c7d1>] sock_ioctl+0x1c1/0x390 net/socket.c:899
 [<ffffffff817b50ef>] vfs_ioctl fs/ioctl.c:43 [inline]
 [<ffffffff817b50ef>] do_vfs_ioctl+0x17f/0xf30 fs/ioctl.c:679
 [<ffffffff817b5f14>] SYSC_ioctl fs/ioctl.c:694 [inline]
 [<ffffffff817b5f14>] SyS_ioctl+0x74/0x80 fs/ioctl.c:685
 [<ffffffff8675c240>] entry_SYSCALL_64_fastpath+0x23/0xc1
Code: 81 c7 00 02 00 00 48 89 fa 48 c1 ea 03 80 3c 02 00 75 55 4c 8b a3 00 02 00 00 48 b8 00 00 00 00 00 fc ff df 4c 89 e2 48 c1 ea 03 <80> 3c 02 00 75 48 48 b8 00 00 00 00 00 fc ff df 4d 8b 24 24 4c 
RIP  [<ffffffff862b0480>] call_commit_handler.part.4+0x40/0xa0 net/wireless/wext-core.c:901
 RSP <ffff88012ece7b20>
---[ end trace b16892b1726598ef ]---

