bisecting cause commit starting from 30bb5572ce7a8710fa9ea720b6ecb382791c9800
building syzkaller on 35f53e457420e79fa28e3260cdbbf9f37b9f97e4
testing commit 30bb5572ce7a8710fa9ea720b6ecb382791c9800 with gcc (GCC) 8.1.0
kernel signature: a440914567b5e5ddf8d1ebcd9157f8bc53187d8ae59555f98ea049081c8ad275
run #0: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #1: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #2: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #3: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #4: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #5: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #6: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #7: crashed: KASAN: use-after-free Write in tcindex_set_parms
run #8: crashed: KASAN: use-after-free Write in tcindex_set_parms
run #9: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
testing release v5.5
testing commit d5226fa6dbae0569ee43ecfc08bdcd6770fc4755 with gcc (GCC) 8.1.0
kernel signature: 568c7134b294e522aaf5e69b7c5be9aaa89175cf769909109ccec9f7f4a27ec9
all runs: OK
# git bisect start 30bb5572ce7a8710fa9ea720b6ecb382791c9800 d5226fa6dbae0569ee43ecfc08bdcd6770fc4755
Bisecting: 7349 revisions left to test after this (roughly 13 steps)
[4cadc60d6bcfee9c626d4b55e9dc1475d21ad3bb] Merge tag 'for-v5.6' of git://git.kernel.org/pub/scm/linux/kernel/git/sre/linux-power-supply
testing commit 4cadc60d6bcfee9c626d4b55e9dc1475d21ad3bb with gcc (GCC) 8.1.0
kernel signature: c4858700f1da5d37e9234ec3e5dd518d805e486f3dc8d2d104bd681f85eb4246
all runs: OK
# git bisect good 4cadc60d6bcfee9c626d4b55e9dc1475d21ad3bb
Bisecting: 3707 revisions left to test after this (roughly 12 steps)
[153b5c566d30fb984827acb12fd93c3aa6c147d3] Merge tag 'microblaze-v5.6-rc1' of git://git.monstr.eu/linux-2.6-microblaze
testing commit 153b5c566d30fb984827acb12fd93c3aa6c147d3 with gcc (GCC) 8.1.0
kernel signature: fae19925963ed73811d97fbad33f2bafcb7df64929f38c5ee2b99bc3b2ff9be2
all runs: OK
# git bisect good 153b5c566d30fb984827acb12fd93c3aa6c147d3
Bisecting: 1890 revisions left to test after this (roughly 11 steps)
[1afa9c3b7c9bdcb562e2afe9f58cc99d0b071cdc] Merge tag 'armsoc-dt' of git://git.kernel.org/pub/scm/linux/kernel/git/soc/soc
testing commit 1afa9c3b7c9bdcb562e2afe9f58cc99d0b071cdc with gcc (GCC) 8.1.0
kernel signature: 647bc50de7fefb64874adef7d180a50a680f76d75e5f678a65be99c64affb98a
run #0: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #1: crashed: general protection fault in tcf_action_destroy
run #2: crashed: KASAN: slab-out-of-bounds Write in tcindex_set_parms
run #3: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #4: crashed: KASAN: slab-out-of-bounds Write in tcindex_set_parms
run #5: crashed: KASAN: use-after-free Write in tcindex_set_parms
run #6: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #7: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #8: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #9: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
# git bisect bad 1afa9c3b7c9bdcb562e2afe9f58cc99d0b071cdc
Bisecting: 921 revisions left to test after this (roughly 10 steps)
[41dcd67e88688afbeb3b2bd23960eed5daec74e7] Merge tag 'docs-5.6-2' of git://git.lwn.net/linux
testing commit 41dcd67e88688afbeb3b2bd23960eed5daec74e7 with gcc (GCC) 8.1.0
kernel signature: dee2a38e3a92f6bf5eabef9bd9c1b67ba30bffe7be692fcc6e0d6ca63130d5e2
run #0: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #1: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #2: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #3: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #4: crashed: general protection fault in tcf_action_destroy
run #5: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #6: crashed: WARNING in kfree
run #7: crashed: general protection fault in tcf_action_destroy
run #8: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #9: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
# git bisect bad 41dcd67e88688afbeb3b2bd23960eed5daec74e7
Bisecting: 481 revisions left to test after this (roughly 9 steps)
[c1ef57a3a3f5e69e98baf89055b423da62791c13] Merge tag 'io_uring-5.6-2020-02-05' of git://git.kernel.dk/linux-block
testing commit c1ef57a3a3f5e69e98baf89055b423da62791c13 with gcc (GCC) 8.1.0
kernel signature: 9a71a5e0d8576f191da26040d6ba55f4ed5dcd44a8388b1cd79c4855916c01c2
run #0: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #1: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #2: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #3: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #4: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #5: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #6: crashed: general protection fault in tcf_action_destroy
run #7: crashed: KASAN: use-after-free Write in tcindex_set_parms
run #8: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #9: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
# git bisect bad c1ef57a3a3f5e69e98baf89055b423da62791c13
Bisecting: 206 revisions left to test after this (roughly 8 steps)
[72f582ff8569900ccc4439b26bbe5e2fff509f08] Merge branch 'work.recursive_removal' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs
testing commit 72f582ff8569900ccc4439b26bbe5e2fff509f08 with gcc (GCC) 8.1.0
kernel signature: 68c1b63843424a8a036756c7af8988dab386f3cc6649b2e23782442d1e3b885f
run #0: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #1: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #2: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #3: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #4: crashed: KASAN: use-after-free Write in tcindex_set_parms
run #5: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #6: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #7: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #8: crashed: KASAN: use-after-free Write in tcindex_set_parms
run #9: crashed: KASAN: use-after-free Write in tcindex_set_parms
# git bisect bad 72f582ff8569900ccc4439b26bbe5e2fff509f08
Bisecting: 102 revisions left to test after this (roughly 7 steps)
[94dd54c51a410b9ffa6356c3ed2ab0317f998ded] powerpc/32s: Avoid crossing page boundary while changing SRR0/1.
testing commit 94dd54c51a410b9ffa6356c3ed2ab0317f998ded with gcc (GCC) 8.1.0
kernel signature: 198f2e05a3855c3b027517bca13eb3004a9eef90074136b52988dd2465bfab46
all runs: OK
# git bisect good 94dd54c51a410b9ffa6356c3ed2ab0317f998ded
Bisecting: 51 revisions left to test after this (roughly 6 steps)
[0d0d9a388a858e271bb70e71e99e7fe2a6fd6f64] l2tp: Allow duplicate session creation with UDP
testing commit 0d0d9a388a858e271bb70e71e99e7fe2a6fd6f64 with gcc (GCC) 8.1.0
kernel signature: bcef6c370a69874ebd274875efb48236243638c97688612d0f993cc91944d1d9
run #0: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #1: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #2: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #3: crashed: KASAN: slab-out-of-bounds Write in tcindex_filter_result_init
run #4: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #5: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #6: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #7: crashed: KASAN: use-after-free Write in tcindex_set_parms
run #8: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
run #9: crashed: KASAN: use-after-free Write in tcindex_set_parms
# git bisect bad 0d0d9a388a858e271bb70e71e99e7fe2a6fd6f64
Bisecting: 26 revisions left to test after this (roughly 5 steps)
[83d0585f91da441a0b11bc5ff93f4cda56de6703] Merge branch 'Fix-reconnection-latency-caused-by-FIN-ACK-handling-race'
testing commit 83d0585f91da441a0b11bc5ff93f4cda56de6703 with gcc (GCC) 8.1.0
kernel signature: c39447c0000d210d0533045afc7dd1e408f02a783108dc22a8d85a80c9443d33
all runs: OK
# git bisect good 83d0585f91da441a0b11bc5ff93f4cda56de6703
Bisecting: 13 revisions left to test after this (roughly 4 steps)
[6ab63366e1ec4ec1900f253aa64727b4b5f4ee73] netdevsim: disable devlink reload when resources are being used
testing commit 6ab63366e1ec4ec1900f253aa64727b4b5f4ee73 with gcc (GCC) 8.1.0
kernel signature: bcb2ef7c818dd3ff92d6aa40a97e16f1e656f1b57d9be0d1d39670953e4a3beb
all runs: OK
# git bisect good 6ab63366e1ec4ec1900f253aa64727b4b5f4ee73
Bisecting: 6 revisions left to test after this (roughly 3 steps)
[2b5b8251bc9fe2f9118411f037862ee17cf81e97] net: hsr: fix possible NULL deref in hsr_handle_frame()
testing commit 2b5b8251bc9fe2f9118411f037862ee17cf81e97 with gcc (GCC) 8.1.0
kernel signature: 6e75dbda43c764d590fe2508b2bfa3ff671fc45aadd43c6544ff9bbbcd676111
all runs: OK
# git bisect good 2b5b8251bc9fe2f9118411f037862ee17cf81e97
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[9afe2322cb90a8fbc27e32bfc691100c653cab2a] Merge branch 'unbreak-basic-and-bpf-tdc-testcases'
testing commit 9afe2322cb90a8fbc27e32bfc691100c653cab2a with gcc (GCC) 8.1.0
kernel signature: 9e5c7b5cc53f1898a3f1cbf581c8d0ae40f5232c52595b2d9f10bffb00f2d046
all runs: OK
# git bisect good 9afe2322cb90a8fbc27e32bfc691100c653cab2a
Bisecting: 1 revision left to test after this (roughly 1 step)
[599be01ee567b61f4471ee8078870847d0a11e8e] net_sched: fix an OOB access in cls_tcindex
testing commit 599be01ee567b61f4471ee8078870847d0a11e8e with gcc (GCC) 8.1.0
kernel signature: 318b1c5c31e5d522a8eb707626f222c851390504182c57d07d4be231e74fa079
all runs: crashed: KASAN: slab-out-of-bounds Read in tcindex_set_parms
# git bisect bad 599be01ee567b61f4471ee8078870847d0a11e8e
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[83b43045308ea0600099830292955f18818f8d5e] qed: Remove set but not used variable 'p_link'
testing commit 83b43045308ea0600099830292955f18818f8d5e with gcc (GCC) 8.1.0
kernel signature: a62c8f316d37a2f1cbf8e3ea74b941613f29ca3ddcaa7ee490b8d864c0840334
all runs: OK
# git bisect good 83b43045308ea0600099830292955f18818f8d5e
599be01ee567b61f4471ee8078870847d0a11e8e is the first bad commit
commit 599be01ee567b61f4471ee8078870847d0a11e8e
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Sun Feb 2 21:14:35 2020 -0800

    net_sched: fix an OOB access in cls_tcindex
    
    As Eric noticed, tcindex_alloc_perfect_hash() uses cp->hash
    to compute the size of memory allocation, but cp->hash is
    set again after the allocation, this caused an out-of-bound
    access.
    
    So we have to move all cp->hash initialization and computation
    before the memory allocation. Move cp->mask and cp->shift together
    as cp->hash may need them for computation too.
    
    Reported-and-tested-by: syzbot+35d4dea36c387813ed31@syzkaller.appspotmail.com
    Fixes: 331b72922c5f ("net: sched: RCU cls_tcindex")
    Cc: Eric Dumazet <eric.dumazet@gmail.com>
    Cc: John Fastabend <john.fastabend@gmail.com>
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Cc: Jiri Pirko <jiri@resnulli.us>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/sched/cls_tcindex.c | 40 ++++++++++++++++++++--------------------
 1 file changed, 20 insertions(+), 20 deletions(-)
culprit signature: 318b1c5c31e5d522a8eb707626f222c851390504182c57d07d4be231e74fa079
parent  signature: a62c8f316d37a2f1cbf8e3ea74b941613f29ca3ddcaa7ee490b8d864c0840334
revisions tested: 16, total time: 3h54m40.714218812s (build: 1h50m36.07301645s, test: 2h2m57.938627182s)
first bad commit: 599be01ee567b61f4471ee8078870847d0a11e8e net_sched: fix an OOB access in cls_tcindex
cc: ["davem@davemloft.net" "syzbot+35d4dea36c387813ed31@syzkaller.appspotmail.com" "xiyou.wangcong@gmail.com"]
crash: KASAN: slab-out-of-bounds Read in tcindex_set_parms
==================================================================
BUG: KASAN: slab-out-of-bounds in tcindex_set_parms+0x155c/0x1b90 net/sched/cls_tcindex.c:361
Read of size 16 at addr ffff888097fb9da8 by task syz-executor.3/8409

CPU: 1 PID: 8409 Comm: syz-executor.3 Not tainted 5.5.0-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Call Trace:
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x128/0x182 lib/dump_stack.c:118
 print_address_description.constprop.8.cold.10+0x9/0x317 mm/kasan/report.c:374
 __kasan_report.cold.11+0x1c/0x34 mm/kasan/report.c:506
 kasan_report+0xe/0x20 mm/kasan/common.c:639
 tcindex_set_parms+0x155c/0x1b90 net/sched/cls_tcindex.c:361
 tcindex_change+0x1c2/0x280 net/sched/cls_tcindex.c:519
 tc_new_tfilter+0xffa/0x1da0 net/sched/cls_api.c:2103
 rtnetlink_rcv_msg+0x60c/0x8c0 net/core/rtnetlink.c:5429
 netlink_rcv_skb+0x119/0x340 net/netlink/af_netlink.c:2477
 netlink_unicast_kernel net/netlink/af_netlink.c:1302 [inline]
 netlink_unicast+0x434/0x630 net/netlink/af_netlink.c:1328
 netlink_sendmsg+0x714/0xc60 net/netlink/af_netlink.c:1917
 sock_sendmsg_nosec net/socket.c:652 [inline]
 sock_sendmsg+0xac/0xe0 net/socket.c:672
 ____sys_sendmsg+0x54e/0x750 net/socket.c:2343
 ___sys_sendmsg+0xe4/0x160 net/socket.c:2397
 __sys_sendmsg+0xce/0x170 net/socket.c:2430
 do_syscall_32_irqs_on arch/x86/entry/common.c:337 [inline]
 do_fast_syscall_32+0x231/0xb27 arch/x86/entry/common.c:408
 entry_SYSENTER_compat+0x70/0x7f arch/x86/entry/entry_64_compat.S:139

Allocated by task 8409:
 save_stack+0x19/0x80 mm/kasan/common.c:72
 set_track mm/kasan/common.c:80 [inline]
 __kasan_kmalloc.constprop.17+0xc1/0xd0 mm/kasan/common.c:513
 __do_kmalloc mm/slab.c:3656 [inline]
 __kmalloc+0x164/0x7b0 mm/slab.c:3665
 kmalloc_array include/linux/slab.h:598 [inline]
 kcalloc include/linux/slab.h:609 [inline]
 tcindex_alloc_perfect_hash+0x4f/0x2f0 net/sched/cls_tcindex.c:281
 tcindex_set_parms+0x5e9/0x1b90 net/sched/cls_tcindex.c:358
 tcindex_change+0x1c2/0x280 net/sched/cls_tcindex.c:519
 tc_new_tfilter+0xffa/0x1da0 net/sched/cls_api.c:2103
 rtnetlink_rcv_msg+0x60c/0x8c0 net/core/rtnetlink.c:5429
 netlink_rcv_skb+0x119/0x340 net/netlink/af_netlink.c:2477
 netlink_unicast_kernel net/netlink/af_netlink.c:1302 [inline]
 netlink_unicast+0x434/0x630 net/netlink/af_netlink.c:1328
 netlink_sendmsg+0x714/0xc60 net/netlink/af_netlink.c:1917
 sock_sendmsg_nosec net/socket.c:652 [inline]
 sock_sendmsg+0xac/0xe0 net/socket.c:672
 ____sys_sendmsg+0x54e/0x750 net/socket.c:2343
 ___sys_sendmsg+0xe4/0x160 net/socket.c:2397
 __sys_sendmsg+0xce/0x170 net/socket.c:2430
 do_syscall_32_irqs_on arch/x86/entry/common.c:337 [inline]
 do_fast_syscall_32+0x231/0xb27 arch/x86/entry/common.c:408
 entry_SYSENTER_compat+0x70/0x7f arch/x86/entry/entry_64_compat.S:139

Freed by task 0:
(stack is not available)

The buggy address belongs to the object at ffff888097fb9d00
 which belongs to the cache kmalloc-192 of size 192
The buggy address is located 168 bytes inside of
 192-byte region [ffff888097fb9d00, ffff888097fb9dc0)
The buggy address belongs to the page:
page:ffffea00025fee40 refcount:1 mapcount:0 mapping:ffff8880aa400000 index:0x0
raw: 00fffe0000000200 ffffea00024e4888 ffff8880aa401148 ffff8880aa400000
raw: 0000000000000000 ffff888097fb9000 0000000100000010 0000000000000000
page dumped because: kasan: bad access detected

Memory state around the buggy address:
 ffff888097fb9c80: 00 fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
 ffff888097fb9d00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
>ffff888097fb9d80: 00 fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
                                  ^
 ffff888097fb9e00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 ffff888097fb9e80: 00 fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
==================================================================

