bisecting cause commit starting from f40ddce88593482919761f74910f42f4b84c004b
building syzkaller on 98682e5e2aefc9aad61354f4f3ac93be96002a2a
testing commit f40ddce88593482919761f74910f42f4b84c004b with gcc (GCC) 10.2.1 20210217
kernel signature: 401ae697250340a8f19fafbe34755b1004207c8f3a328d8b50087c42f968b433
all runs: crashed: WARNING: ODEBUG bug in slave_kobj_release
testing release v5.10
testing commit 2c85ebc57b3e1817b6ce1a6b703928e113a90442 with gcc (GCC) 10.2.1 20210217
kernel signature: ab71b74ae43b8e01293cb6979afead33d9008edddcb466f6d56f0f23bb6fe207
all runs: crashed: WARNING: ODEBUG bug in slave_kobj_release
testing release v5.9
testing commit bbf5c979011a099af5dc76498918ed7df445635b with gcc (GCC) 10.2.1 20210217
kernel signature: a101d649bf0962eb896349f53f42525108b593f186d2cd8f9a781778a3990b4a
all runs: OK
# git bisect start 2c85ebc57b3e1817b6ce1a6b703928e113a90442 bbf5c979011a099af5dc76498918ed7df445635b
Bisecting: 9594 revisions left to test after this (roughly 13 steps)
[4d0e9df5e43dba52d38b251e3b909df8fa1110be] lib, uaccess: add failure injection to usercopy functions

testing commit 4d0e9df5e43dba52d38b251e3b909df8fa1110be with gcc (GCC) 10.2.1 20210217
kernel signature: 3bfe40c57e0d8bb0c5c302283b12c5ddd94f0c5ecac93d15831afaa8fe460a80
all runs: OK
# git bisect good 4d0e9df5e43dba52d38b251e3b909df8fa1110be
Bisecting: 4874 revisions left to test after this (roughly 12 steps)
[6694875ef8045cdb1e6712ee9b68fe08763507d8] ext4: indicate that fast_commit is available via /sys/fs/ext4/feature/...

testing commit 6694875ef8045cdb1e6712ee9b68fe08763507d8 with gcc (GCC) 10.2.1 20210217
kernel signature: b718cfa980c9351648cca76bade9c8edd86a1cd3338d2391497d6c2b95104d58
all runs: OK
# git bisect good 6694875ef8045cdb1e6712ee9b68fe08763507d8
Bisecting: 2439 revisions left to test after this (roughly 11 steps)
[cf9446cc8e6d85355642209538dde619f53770dc] Merge tag 'io_uring-5.10-2020-10-30' of git://git.kernel.dk/linux-block

testing commit cf9446cc8e6d85355642209538dde619f53770dc with gcc (GCC) 10.2.1 20210217
kernel signature: 338198eb0896fb1c531fadea955343723c4f1903ad2b5ae66c8ab955dd9222c1
all runs: OK
# git bisect good cf9446cc8e6d85355642209538dde619f53770dc
Bisecting: 1221 revisions left to test after this (roughly 10 steps)
[3be28e93cd88fbcbe97cabcbe92b1ccc9f830450] Merge tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rdma/rdma

testing commit 3be28e93cd88fbcbe97cabcbe92b1ccc9f830450 with gcc (GCC) 10.2.1 20210217
kernel signature: 2569b76139942b82c26fac35d6c23b3b0903680c29ef14fa65f4f559be4bdfc1
run #0: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #1: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #2: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #3: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #4: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 3be28e93cd88fbcbe97cabcbe92b1ccc9f830450
Bisecting: 609 revisions left to test after this (roughly 9 steps)
[15a9844458cf3a7afcd720eca81ecb3a16213cb4] Merge tag 'irq-urgent-2020-11-08' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip

testing commit 15a9844458cf3a7afcd720eca81ecb3a16213cb4 with gcc (GCC) 10.2.1 20210217
kernel signature: b432e26e8dff821668f001234adcbf2574079b828572c13313954a36ef42ef66
run #0: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #1: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #2: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #3: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #4: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 15a9844458cf3a7afcd720eca81ecb3a16213cb4
Bisecting: 303 revisions left to test after this (roughly 8 steps)
[6f3f374ac05d05cfa63d04f4479ead7e3cb6d087] Merge tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rdma/rdma

testing commit 6f3f374ac05d05cfa63d04f4479ead7e3cb6d087 with gcc (GCC) 10.2.1 20210217
kernel signature: 614cdee3fd429bc1138363985baf03a8d9344181bfaaab18ad81fdc817400d6c
all runs: OK
# git bisect good 6f3f374ac05d05cfa63d04f4479ead7e3cb6d087
Bisecting: 180 revisions left to test after this (roughly 7 steps)
[28ced768a4262bc81c61c8244e0e57048afc18d1] Merge tag 'tpmdd-next-v5.10-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/jarkko/linux-tpmdd

testing commit 28ced768a4262bc81c61c8244e0e57048afc18d1 with gcc (GCC) 10.2.1 20210217
kernel signature: bc2fea642d99c19c528c487103f79312ad685b7162b4f1b82fcbe673984255ca
run #0: basic kernel testing failed: BUG: sleeping function called from invalid context in sta_info_move_state
run #1: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #2: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #3: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #4: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
reproducer seems to be flaky
# git bisect bad 28ced768a4262bc81c61c8244e0e57048afc18d1
Bisecting: 61 revisions left to test after this (roughly 6 steps)
[ab07ff1c92fa60f29438e655a1b4abab860ed0b6] can: flexcan: flexcan_remove(): disable wakeup completely

testing commit ab07ff1c92fa60f29438e655a1b4abab860ed0b6 with gcc (GCC) 10.2.1 20210217
kernel signature: 979f562eb9c58d3ed0f2d9f98658e46c174c42304b1f1175609e63aa9f9f00ec
run #0: basic kernel testing failed: BUG: sleeping function called from invalid context in sta_info_move_state
run #1: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #2: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad ab07ff1c92fa60f29438e655a1b4abab860ed0b6
Bisecting: 30 revisions left to test after this (roughly 5 steps)
[0a26ba0603d637eb6673a2ea79808cc73909ef3a] net: ethernet: ti: cpsw: disable PTPv1 hw timestamping advertisement

testing commit 0a26ba0603d637eb6673a2ea79808cc73909ef3a with gcc (GCC) 10.2.1 20210217
kernel signature: 7e1205df16087e26dbf92c8666be0ced1579b1870cba02acba5e27049c565ee9
run #0: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #1: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #2: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #3: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 0a26ba0603d637eb6673a2ea79808cc73909ef3a
Bisecting: 17 revisions left to test after this (roughly 4 steps)
[20149e9eb68c003eaa09e7c9a49023df40779552] ip_tunnel: fix over-mtu packet send fail without TUNNEL_DONT_FRAGMENT flags

testing commit 20149e9eb68c003eaa09e7c9a49023df40779552 with gcc (GCC) 10.2.1 20210217
kernel signature: 8090b3f06cc8ee1a0153b2d6b89379feaa3c15a2cc16782d9ad8cffebd9fb826
all runs: OK
# git bisect good 20149e9eb68c003eaa09e7c9a49023df40779552
Bisecting: 10 revisions left to test after this (roughly 3 steps)
[c2f46814521113f6699a74e0a0424cbc5b305479] mac80211: don't require VHT elements for HE on 2.4 GHz

testing commit c2f46814521113f6699a74e0a0424cbc5b305479 with gcc (GCC) 10.2.1 20210217
kernel signature: 2db48f28a847166e621f93b53eb0b0023a91ab6f700dfd06007b6cd95f0cb165
run #0: basic kernel testing failed: BUG: sleeping function called from invalid context in sta_info_move_state
run #1: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #2: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad c2f46814521113f6699a74e0a0424cbc5b305479
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[9bdaf3b91efd229dd272b228e13df10310c80d19] cfg80211: initialize wdev data earlier

testing commit 9bdaf3b91efd229dd272b228e13df10310c80d19 with gcc (GCC) 10.2.1 20210217
kernel signature: a0bd8b0d0771a45ea926c4e85e584b27b8fe8dad60f74b771407d55b6ca4e2c5
all runs: OK
# git bisect good 9bdaf3b91efd229dd272b228e13df10310c80d19
Bisecting: 1 revision left to test after this (roughly 1 step)
[b1e8eb11fb9cf666d8ae36bbcf533233a504c921] mac80211: fix kernel-doc markups

testing commit b1e8eb11fb9cf666d8ae36bbcf533233a504c921 with gcc (GCC) 10.2.1 20210217
kernel signature: 4c0844fad4977f63ea4ba3cfe77f48ca711373fc47597d3434ebe7b145ead977
run #0: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #1: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #2: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #3: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #4: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #5: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad b1e8eb11fb9cf666d8ae36bbcf533233a504c921
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[dcd479e10a0510522a5d88b29b8f79ea3467d501] mac80211: always wind down STA state

testing commit dcd479e10a0510522a5d88b29b8f79ea3467d501 with gcc (GCC) 10.2.1 20210217
kernel signature: 12e5e8a257ea4beba5df4b7178391d631bfd4b8687b4d3776f410de03058d9bf
run #0: basic kernel testing failed: BUG: sleeping function called from invalid context in sta_info_move_state
run #1: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #2: crashed: BUG: sleeping function called from invalid context in sta_info_move_state
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad dcd479e10a0510522a5d88b29b8f79ea3467d501
dcd479e10a0510522a5d88b29b8f79ea3467d501 is the first bad commit
commit dcd479e10a0510522a5d88b29b8f79ea3467d501
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Oct 9 14:17:11 2020 +0200

    mac80211: always wind down STA state
    
    When (for example) an IBSS station is pre-moved to AUTHORIZED
    before it's inserted, and then the insertion fails, we don't
    clean up the fast RX/TX states that might already have been
    created, since we don't go through all the state transitions
    again on the way down.
    
    Do that, if it hasn't been done already, when the station is
    freed. I considered only freeing the fast TX/RX state there,
    but we might add more state so it's more robust to wind down
    the state properly.
    
    Note that we warn if the station was ever inserted, it should
    have been properly cleaned up in that case, and the driver
    will probably not like things happening out of order.
    
    Reported-by: syzbot+2e293dbd67de2836ba42@syzkaller.appspotmail.com
    Link: https://lore.kernel.org/r/20201009141710.7223b322a955.I95bd08b9ad0e039c034927cce0b75beea38e059b@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>

 net/mac80211/sta_info.c | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

culprit signature: 12e5e8a257ea4beba5df4b7178391d631bfd4b8687b4d3776f410de03058d9bf
parent  signature: a0bd8b0d0771a45ea926c4e85e584b27b8fe8dad60f74b771407d55b6ca4e2c5
Reproducer flagged being flaky
revisions tested: 17, total time: 4h25m15.882378339s (build: 1h55m51.399546282s, test: 2h23m41.673728282s)
first bad commit: dcd479e10a0510522a5d88b29b8f79ea3467d501 mac80211: always wind down STA state
recipients (to): ["davem@davemloft.net" "johannes.berg@intel.com" "johannes@sipsolutions.net" "kuba@kernel.org" "linux-wireless@vger.kernel.org" "netdev@vger.kernel.org"]
recipients (cc): ["linux-kernel@vger.kernel.org"]
crash: BUG: sleeping function called from invalid context in sta_info_move_state
BUG: sleeping function called from invalid context at net/mac80211/sta_info.c:1962
in_atomic(): 0, irqs_disabled(): 0, non_block: 0, pid: 8, name: kworker/u4:0
INFO: lockdep is turned off.
Preemption disabled at:
[<ffffffff8854351f>] __mutex_lock_common kernel/locking/mutex.c:955 [inline]
[<ffffffff8854351f>] __mutex_lock+0x10f/0x1210 kernel/locking/mutex.c:1103
CPU: 1 PID: 8 Comm: kworker/u4:0 Not tainted 5.10.0-rc1-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Workqueue: phy12 ieee80211_iface_work
Call Trace:
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x9a/0xcc lib/dump_stack.c:118
 ___might_sleep.cold+0x65/0x79 kernel/sched/core.c:7298
 sta_info_move_state+0x2b/0x9d0 net/mac80211/sta_info.c:1962
 sta_info_free+0x5c/0x340 net/mac80211/sta_info.c:274
 sta_info_insert_rcu+0x2a5/0x2700 net/mac80211/sta_info.c:738
 ieee80211_ibss_finish_sta+0x1af/0x2d0 net/mac80211/ibss.c:592
 ieee80211_ibss_work+0x265/0xcc0 net/mac80211/ibss.c:1700
 process_one_work+0x75b/0x1230 kernel/workqueue.c:2272
 worker_thread+0x598/0xf80 kernel/workqueue.c:2418
 kthread+0x36d/0x450 kernel/kthread.c:292
 ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:296

