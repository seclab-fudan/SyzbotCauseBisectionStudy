ci starts bisection 2022-12-20 13:27:04.129612253 +0000 UTC m=+14735.962216943
bisecting cause commit starting from a962b54e162c2977ff37905726cab29728380835
building syzkaller on feb5635181eb12a6e3516172a3f5af06a3bc93e1
ensuring issue is reproducible on original commit a962b54e162c2977ff37905726cab29728380835

testing commit a962b54e162c2977ff37905726cab29728380835 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 8bd6ead0ef31d355364d2192a7035884a97c96720aa2e13e5d8a6bbba3961cbd
run #0: crashed: INFO: rcu detected stall in corrupted
run #1: crashed: INFO: rcu detected stall in corrupted
run #2: crashed: INFO: rcu detected stall in corrupted
run #3: crashed: INFO: rcu detected stall in corrupted
run #4: crashed: INFO: rcu detected stall in corrupted
run #5: crashed: INFO: rcu detected stall in corrupted
run #6: crashed: INFO: rcu detected stall in corrupted
run #7: crashed: INFO: rcu detected stall in corrupted
run #8: crashed: INFO: rcu detected stall in corrupted
run #9: crashed: BUG: unable to handle kernel paging request in inode_wait_for_writeback
run #10: crashed: BUG: unable to handle kernel paging request in ntfs_fill_super
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
testing release v5.19
testing commit 3d7cb6b04c3f3115719235cc6866b10326de34cd gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 21272f4bf2f488a121a4a0facbbfde1c2459fefd69c749bbe98f1015260fbff6
run #0: crashed: kernel panic: stack is corrupted in __lock_acquire
run #1: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
reproducer seems to be flaky
testing release v5.18
testing commit 4b0986a3613c92f4ec1bdc7f60ec66fea135991f gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 3bf61b38ba465a8d60bb8e3ad6202a55764a874b37a95dd4f394c9002caad6d4
all runs: OK
# git bisect start 3d7cb6b04c3f3115719235cc6866b10326de34cd 4b0986a3613c92f4ec1bdc7f60ec66fea135991f
Bisecting: 8493 revisions left to test after this (roughly 13 steps)
[c011dd537ffe47462051930413fed07dbdc80313] Merge tag 'arm-soc-5.19' of git://git.kernel.org/pub/scm/linux/kernel/git/soc/soc

testing commit c011dd537ffe47462051930413fed07dbdc80313 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: eca450e0193cdb82d85da58b79c06b252b70215b10f2b475d8ed09d121512aeb
run #0: crashed: kernel panic: stack is corrupted in __lock_acquire
run #1: crashed: kernel panic: stack is corrupted in __lock_acquire
run #2: crashed: kernel panic: stack is corrupted in __lock_acquire
run #3: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #4: crashed: BUG: spinlock bad magic in writeback_single_inode
run #5: crashed: kernel panic: stack is corrupted in __lock_acquire
run #6: crashed: kernel panic: stack is corrupted in __lock_acquire
run #7: crashed: kernel panic: stack is corrupted in __lock_acquire
run #8: crashed: BUG: spinlock bad magic in writeback_single_inode
run #9: crashed: kernel panic: stack is corrupted in __lock_acquire
run #10: crashed: kernel panic: stack is corrupted in __lock_acquire
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad c011dd537ffe47462051930413fed07dbdc80313
Bisecting: 2961 revisions left to test after this (roughly 12 steps)
[7e062cda7d90543ac8c7700fc7c5527d0c0f22ad] Merge tag 'net-next-5.19' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net-next

testing commit 7e062cda7d90543ac8c7700fc7c5527d0c0f22ad gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 1e1bca8d4000d198f27d88256e57bc72bcbc2cd2f024651f12de2a8bf9b15ad3
run #0: crashed: kernel panic: stack is corrupted in __lock_acquire
run #1: crashed: BUG: spinlock bad magic in writeback_single_inode
run #2: crashed: kernel panic: stack is corrupted in __lock_acquire
run #3: crashed: kernel panic: stack is corrupted in __lock_acquire
run #4: crashed: kernel panic: stack is corrupted in __lock_acquire
run #5: crashed: BUG: spinlock bad magic in writeback_single_inode
run #6: crashed: BUG: spinlock bad magic in writeback_single_inode
run #7: crashed: kernel panic: stack is corrupted in __lock_acquire
run #8: crashed: kernel panic: stack is corrupted in __lock_acquire
run #9: crashed: BUG: spinlock bad magic in writeback_single_inode
run #10: crashed: BUG: spinlock bad magic in writeback_single_inode
run #11: crashed: BUG: spinlock bad magic in writeback_single_inode
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad 7e062cda7d90543ac8c7700fc7c5527d0c0f22ad
Bisecting: 2538 revisions left to test after this (roughly 11 steps)
[3842007b1a33589d57f67eac479b132b77767514] Merge tag 'zonefs-5.19-rc1-fix' of git://git.kernel.org/pub/scm/linux/kernel/git/dlemoal/zonefs

testing commit 3842007b1a33589d57f67eac479b132b77767514 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 99d7e3a57dc0239b94c396b5e452641fccda4a2dbbe59fc4deed8050305dd8d6
all runs: OK
# git bisect good 3842007b1a33589d57f67eac479b132b77767514
Bisecting: 1271 revisions left to test after this (roughly 10 steps)
[53a332f222c015cb82349fd4f6b58cb14f574e8d] Merge branch 'net-phy-add-comments-for-lan8742-phy-support'

testing commit 53a332f222c015cb82349fd4f6b58cb14f574e8d gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 1615da91d628a98777fc5d4e9abc9679777b3e9077e101bdacc266cf5b7d1faf
run #0: crashed: WARNING: bad unlock balance in corrupted
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad 53a332f222c015cb82349fd4f6b58cb14f574e8d
Bisecting: 591 revisions left to test after this (roughly 9 steps)
[50c6afabfd2ae91a4ff0e2feb14fe702b0688ec5] Merge https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next

testing commit 50c6afabfd2ae91a4ff0e2feb14fe702b0688ec5 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 450f57e19a73c2a0dddf32b65b0037f4b4f158bacad555e4bb524b424b5c15ca
run #0: crashed: WARNING: bad unlock balance in corrupted
run #1: crashed: WARNING: bad unlock balance in corrupted
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad 50c6afabfd2ae91a4ff0e2feb14fe702b0688ec5
Bisecting: 337 revisions left to test after this (roughly 8 steps)
[7d9dbdfbfdc5e52131bea94a7318ee35b15a5f19] net: ipv6: add skb drop reasons to TLV parse

testing commit 7d9dbdfbfdc5e52131bea94a7318ee35b15a5f19 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 203bcfcecb83e67cae3e9bb574495d06503e8a2e122aa9f455abdd93dfb23b6d
run #0: crashed: WARNING: bad unlock balance in corrupted
run #1: crashed: WARNING: bad unlock balance in corrupted
run #2: crashed: WARNING: bad unlock balance in corrupted
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad 7d9dbdfbfdc5e52131bea94a7318ee35b15a5f19
Bisecting: 168 revisions left to test after this (roughly 7 steps)
[37943f047bfb88ba4dfc7a522563f57c86d088a0] tls: rx: simplify async wait

testing commit 37943f047bfb88ba4dfc7a522563f57c86d088a0 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 2ecac52320cd9d55914cdb13fc35b2b77ec64a0525d0d4ffe7b898463a9131de
all runs: OK
# git bisect good 37943f047bfb88ba4dfc7a522563f57c86d088a0
Bisecting: 84 revisions left to test after this (roughly 6 steps)
[1a915b234291d66a19f7b74dea89ef7cb4077d4e] Merge branch 'net-bridge-add-support-for-host-l2-mdb-entries'

testing commit 1a915b234291d66a19f7b74dea89ef7cb4077d4e gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 357c4b5502eeb9e6399f0448e653554b91bbee0841731da31497cb3af5819423
run #0: crashed: WARNING: bad unlock balance in corrupted
run #1: crashed: WARNING: bad unlock balance in corrupted
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad 1a915b234291d66a19f7b74dea89ef7cb4077d4e
Bisecting: 41 revisions left to test after this (roughly 5 steps)
[046eabbf1991c65d50d1d842f1a3011b53ca9b0a] mlxsw: Use dscp_t in struct mlxsw_sp_fib4_entry

testing commit 046eabbf1991c65d50d1d842f1a3011b53ca9b0a gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 5724bcfd26fed86b1741c6ad209119c7c4ac2ba5d85f48c0d64d54ee0e74f992
run #0: crashed: WARNING: bad unlock balance in corrupted
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad 046eabbf1991c65d50d1d842f1a3011b53ca9b0a
Bisecting: 25 revisions left to test after this (roughly 4 steps)
[a21437d2b4855980a15cc9e5dc230f95c7563772] bnx2x: Fix spelling mistake "regiser" -> "register"

testing commit a21437d2b4855980a15cc9e5dc230f95c7563772 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: d37a893b4877c9d4403fa2fda41aa1166ef678d688727307af4cfd0b2df3a575
run #0: crashed: WARNING: bad unlock balance in corrupted
run #1: crashed: WARNING: bad unlock balance in corrupted
run #2: crashed: WARNING: bad unlock balance in corrupted
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad a21437d2b4855980a15cc9e5dc230f95c7563772
Bisecting: 7 revisions left to test after this (roughly 3 steps)
[516a2f1f6f3ce1a87931579cc21de6e7e33440bd] Merge branch 'tls-rx-refactoring-part-2'

testing commit 516a2f1f6f3ce1a87931579cc21de6e7e33440bd gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: fa710abee4d43d45364f6c8390538454fcf3a278fe7b7fe48c69dbcb825233d7
run #0: crashed: BUG: unable to handle kernel paging request in lock_is_held_type
run #1: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad 516a2f1f6f3ce1a87931579cc21de6e7e33440bd
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[ba13609df18dabf1d892a247201bd3fe38012ff9] tls: rx: pull most of zc check out of the loop

testing commit ba13609df18dabf1d892a247201bd3fe38012ff9 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: fa9e979bcbabe5db8b6577a3c462f9549765be0f5e4cad4a40de93319f574962
run #0: crashed: BUG: sleeping function called from invalid context in write_inode_now
run #1: crashed: WARNING: bad unlock balance in corrupted
run #2: crashed: WARNING: bad unlock balance in corrupted
run #3: crashed: WARNING: bad unlock balance in corrupted
run #4: crashed: WARNING: bad unlock balance in corrupted
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad ba13609df18dabf1d892a247201bd3fe38012ff9
Bisecting: 1 revision left to test after this (roughly 1 step)
[fc8da80f990696a50ea76628daca6e63331b18b7] tls: rx: don't handle async in tls_sw_advance_skb()

testing commit fc8da80f990696a50ea76628daca6e63331b18b7 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 0e483b49c7952082193af42db4dead45f6e36470bb1f7db934411c76bd4cc210
run #0: crashed: WARNING: bad unlock balance in corrupted
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad fc8da80f990696a50ea76628daca6e63331b18b7
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[06554f4ffc2595ae52ee80aec4a13bd77d22bed7] tls: rx: factor out writing ContentType to cmsg

testing commit 06554f4ffc2595ae52ee80aec4a13bd77d22bed7 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 9632e527803e265eb6de62aadf4232ff9bdc8a24f9c6f6358fcbe0c72117eaf9
run #0: crashed: BUG: sleeping function called from invalid context in write_inode_now
run #1: crashed: WARNING: bad unlock balance in corrupted
run #2: crashed: BUG: unable to handle kernel NULL pointer dereference in ntfs_fill_super
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad 06554f4ffc2595ae52ee80aec4a13bd77d22bed7
06554f4ffc2595ae52ee80aec4a13bd77d22bed7 is the first bad commit
commit 06554f4ffc2595ae52ee80aec4a13bd77d22bed7
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Fri Apr 8 11:31:28 2022 -0700

    tls: rx: factor out writing ContentType to cmsg
    
    cmsg can be filled in during rx_list processing or normal
    receive. Consolidate the code.
    
    We don't need to keep the boolean to track if the cmsg was
    created. 0 is an invalid content type.
    
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/tls/tls_sw.c | 91 ++++++++++++++++++++++----------------------------------
 1 file changed, 36 insertions(+), 55 deletions(-)

culprit signature: 9632e527803e265eb6de62aadf4232ff9bdc8a24f9c6f6358fcbe0c72117eaf9
parent  signature: 2ecac52320cd9d55914cdb13fc35b2b77ec64a0525d0d4ffe7b898463a9131de
Reproducer flagged being flaky
revisions tested: 17, total time: 5h18m23.848987426s (build: 1h58m38.329411565s, test: 3h17m16.270949077s)
first bad commit: 06554f4ffc2595ae52ee80aec4a13bd77d22bed7 tls: rx: factor out writing ContentType to cmsg
recipients (to): ["borisp@nvidia.com" "daniel@iogearbox.net" "davem@davemloft.net" "davem@davemloft.net" "edumazet@google.com" "john.fastabend@gmail.com" "kuba@kernel.org" "kuba@kernel.org" "netdev@vger.kernel.org" "pabeni@redhat.com"]
recipients (cc): ["linux-kernel@vger.kernel.org"]
crash: BUG: unable to handle kernel NULL pointer dereference in ntfs_fill_super
BUG: kernel NULL pointer dereference, address: 000000000000005c
#PF: supervisor write access in kernel mode
#PF: error_code(0x0002) - not-present page
PGD 16455067 P4D 16455067 PUD 74e0e067 PMD 0 
Oops: 0002 [#1] PREEMPT SMP KASAN
CPU: 1 PID: 17150 Comm: syz-executor133 Not tainted 5.18.0-rc1-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/26/2022
RIP: 0010:rcu_rnp_online_cpus kernel/rcu/tree.c:222 [inline]
RIP: 0010:rcu_rdp_cpu_online kernel/rcu/tree.c:232 [inline]
RIP: 0010:rcu_lockdep_current_cpu_online kernel/rcu/tree.c:1193 [inline]
RIP: 0010:rcu_lockdep_current_cpu_online+0xc4/0x140 kernel/rcu/tree.c:1177
Code: df 48 89 fa 48 c1 ea 03 80 3c 02 00 75 72 48 b8 00 00 00 00 00 fc ff df 48 8b 5b 18 48 8d 7b 70 48 89 fa 48 c1 ea 03 80 3c 02 <00> 75 5a 48 8b 53 70 b8 01 00 00 00 48 85 d5 74 0c 65 ff 0d f4 3e
RSP: 0018:ffffc9000af9fa30 EFLAGS: 00010246
RAX: dffffc0000000000 RBX: ffffffff8af81b00 RCX: ffffffff81556178
RDX: 1ffffffff15f036e RSI: ffffffff894348a0 RDI: ffffffff8af81b70
RBP: 0000000000000002 R08: 0000000000000000 R09: ffffffff8cc78557
R10: fffffbfff198f0aa R11: 0000000000000001 R12: 0000000000000001
R13: 0000000000000000 R14: ffff888064dd9910 R15: 0000000000000000
FS:  000055555696f300(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 000000000000005c CR3: 00000000234a1000 CR4: 0000000000350ee0
Call Trace:
 <TASK>
 rcu_read_lock_held_common kernel/rcu/update.c:112 [inline]
 rcu_read_lock_held_common kernel/rcu/update.c:102 [inline]
 rcu_read_lock_sched_held+0x25/0x70 kernel/rcu/update.c:123
 trace_lock_acquire include/trace/events/lock.h:13 [inline]
 lock_acquire+0x442/0x510 kernel/locking/lockdep.c:5612
 __raw_spin_lock include/linux/spinlock_api_smp.h:133 [inline]
 _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:154
 spin_lock include/linux/spinlock.h:349 [inline]
 iput_final fs/inode.c:1733 [inline]
 iput.part.0+0x36b/0x6a0 fs/inode.c:1770
 ntfs_fill_super+0x2414/0x3120 fs/ntfs3/super.c:1178
 get_tree_bdev+0x398/0x680 fs/super.c:1292
 vfs_get_tree+0x7f/0x2c0 fs/super.c:1497
 do_new_mount fs/namespace.c:3040 [inline]
 path_mount+0x7e8/0x1a40 fs/namespace.c:3370
 do_mount fs/namespace.c:3383 [inline]
 __do_sys_mount fs/namespace.c:3591 [inline]
 __se_sys_mount fs/namespace.c:3568 [inline]
 __x64_sys_mount+0x1f5/0x260 fs/namespace.c:3568
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x44/0xae
RIP: 0033:0x7f6d21d16e5a
Code: 48 c7 c2 c0 ff ff ff f7 d8 64 89 02 b8 ff ff ff ff eb d2 e8 c8 03 00 00 0f 1f 84 00 00 00 00 00 49 89 ca b8 a5 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007ffc796c9bf8 EFLAGS: 00000286 ORIG_RAX: 00000000000000a5
RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007f6d21d16e5a
RDX: 0000000020000000 RSI: 0000000020000100 RDI: 00007ffc796c9c10
RBP: 00007ffc796c9c10 R08: 00007ffc796c9c50 R09: 00007ffc796c9c50
R10: 0000000000000000 R11: 0000000000000286 R12: 0000000000000004
R13: 00007ffc796c9c50 R14: 000000000000010e R15: 0000000020001b50
 </TASK>
Modules linked in:
CR2: 000000000000005c
---[ end trace 0000000000000000 ]---
RIP: 0010:rcu_rnp_online_cpus kernel/rcu/tree.c:222 [inline]
RIP: 0010:rcu_rdp_cpu_online kernel/rcu/tree.c:232 [inline]
RIP: 0010:rcu_lockdep_current_cpu_online kernel/rcu/tree.c:1193 [inline]
RIP: 0010:rcu_lockdep_current_cpu_online+0xc4/0x140 kernel/rcu/tree.c:1177
Code: df 48 89 fa 48 c1 ea 03 80 3c 02 00 75 72 48 b8 00 00 00 00 00 fc ff df 48 8b 5b 18 48 8d 7b 70 48 89 fa 48 c1 ea 03 80 3c 02 <00> 75 5a 48 8b 53 70 b8 01 00 00 00 48 85 d5 74 0c 65 ff 0d f4 3e
RSP: 0018:ffffc9000af9fa30 EFLAGS: 00010246
RAX: dffffc0000000000 RBX: ffffffff8af81b00 RCX: ffffffff81556178
RDX: 1ffffffff15f036e RSI: ffffffff894348a0 RDI: ffffffff8af81b70
RBP: 0000000000000002 R08: 0000000000000000 R09: ffffffff8cc78557
R10: fffffbfff198f0aa R11: 0000000000000001 R12: 0000000000000001
R13: 0000000000000000 R14: ffff888064dd9910 R15: 0000000000000000
FS:  000055555696f300(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 000000000000005c CR3: 00000000234a1000 CR4: 0000000000350ee0

