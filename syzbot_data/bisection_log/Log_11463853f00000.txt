bisecting cause commit starting from 6d0c806803170f120f8cb97b321de7bd89d3a791
building syzkaller on 0d5abf15b74358009a02efb629f7bc7c84841a1f
testing commit 6d0c806803170f120f8cb97b321de7bd89d3a791
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 39e9f501c5accbe1fe9783a97bd5484d7e21c22864810607bb0d5a1628004ca4
all runs: crashed: KASAN: use-after-free Read in __vma_adjust
testing release v5.18
testing commit 4b0986a3613c92f4ec1bdc7f60ec66fea135991f
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 30e044dee9b490e6b24ad1fc58d4cc46795daba9e8de3b60839fc70e56078199
all runs: OK
# git bisect start 6d0c806803170f120f8cb97b321de7bd89d3a791 4b0986a3613c92f4ec1bdc7f60ec66fea135991f
Bisecting: 8633 revisions left to test after this (roughly 13 steps)
[c011dd537ffe47462051930413fed07dbdc80313] Merge tag 'arm-soc-5.19' of git://git.kernel.org/pub/scm/linux/kernel/git/soc/soc

testing commit c011dd537ffe47462051930413fed07dbdc80313
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: fcce87f354c9e21e3043c2c72aaaa2ec82e75a6b27a6056e5548a4d18f078710
all runs: OK
# git bisect good c011dd537ffe47462051930413fed07dbdc80313
Bisecting: 4315 revisions left to test after this (roughly 12 steps)
[09a018176ba246f00d6b6b526047d38dcd2955d3] Merge tag 'arm-late-5.19' of git://git.kernel.org/pub/scm/linux/kernel/git/soc/soc

testing commit 09a018176ba246f00d6b6b526047d38dcd2955d3
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: d0740d1facde3d3bbe19b050f65bba90883c5d772263022ba03c4a682d373947
all runs: OK
# git bisect good 09a018176ba246f00d6b6b526047d38dcd2955d3
Bisecting: 2157 revisions left to test after this (roughly 11 steps)
[418c23681c885acda426639ece844738df890002] Merge branch 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/tmlind/linux-omap.git

testing commit 418c23681c885acda426639ece844738df890002
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 22137fa7558df7dcde4c266b5c4914b2dba1e5ad3d1965e2431ba1a15f7b71e8
run #0: OK
run #1: boot failed: INFO: task hung in add_early_randomness
run #2: boot failed: INFO: task hung in add_early_randomness
run #3: boot failed: INFO: task hung in add_early_randomness
run #4: boot failed: INFO: task hung in add_early_randomness
run #5: boot failed: INFO: task hung in add_early_randomness
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect good 418c23681c885acda426639ece844738df890002
Bisecting: 1032 revisions left to test after this (roughly 10 steps)
[782e6d3d515ec3e2034c50c8c4a5fc54b264fbad] Merge branch 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git

testing commit 782e6d3d515ec3e2034c50c8c4a5fc54b264fbad
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 1755386e5d29fe85dd865300ad834f151e62eac86e6ce481f27326ddce672fd1
run #0: boot failed: INFO: task hung in add_early_randomness
run #1: boot failed: INFO: task hung in add_early_randomness
run #2: boot failed: INFO: task hung in add_early_randomness
run #3: boot failed: INFO: task hung in add_early_randomness
run #4: boot failed: INFO: task hung in add_early_randomness
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect good 782e6d3d515ec3e2034c50c8c4a5fc54b264fbad
Bisecting: 531 revisions left to test after this (roughly 9 steps)
[2c10926c279fdcfe3bce8e51d2584c6346400f4e] Merge branch 'extcon-next' of git://git.kernel.org/pub/scm/linux/kernel/git/chanwoo/extcon.git

testing commit 2c10926c279fdcfe3bce8e51d2584c6346400f4e
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: d0522aa3adee76222157eaec16effaed29f6fcf68367e4b7f8574c2305df8526
run #0: boot failed: INFO: task hung in add_early_randomness
run #1: boot failed: INFO: task hung in add_early_randomness
run #2: boot failed: INFO: task hung in add_early_randomness
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect good 2c10926c279fdcfe3bce8e51d2584c6346400f4e
Bisecting: 248 revisions left to test after this (roughly 8 steps)
[cdc1fcba15703cb3a94db855e84cf60ce4988953] Merge branch 'for-next' of git://git.infradead.org/users/willy/pagecache.git

testing commit cdc1fcba15703cb3a94db855e84cf60ce4988953
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: fd4cb065d5cdeddbf7beeaf5a9c4727eaf8edaa0a9007f2988c4afd5f5ea79d0
all runs: OK
# git bisect good cdc1fcba15703cb3a94db855e84cf60ce4988953
Bisecting: 124 revisions left to test after this (roughly 7 steps)
[95681385789f59153823ce0743dcfa907689d2a0] mm: rename kernel_init_free_pages to kernel_init_pages

testing commit 95681385789f59153823ce0743dcfa907689d2a0
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: a3c16fee66a4dbfd1e5a135ef0d71e52e19c793cbfe4973bf3fa80275f05b1ed
run #0: crashed: KASAN: use-after-free Read in __vma_adjust
run #1: crashed: KASAN: use-after-free Read in __vma_adjust
run #2: crashed: KASAN: use-after-free Read in __vma_adjust
run #3: crashed: KASAN: use-after-free Read in __vma_adjust
run #4: crashed: KASAN: use-after-free Read in __vma_adjust
run #5: crashed: KASAN: use-after-free Read in __vma_adjust
run #6: crashed: KASAN: use-after-free Read in __vma_adjust
run #7: boot failed: INFO: task hung in add_early_randomness
run #8: boot failed: INFO: task hung in add_early_randomness
run #9: boot failed: INFO: task hung in add_early_randomness
# git bisect bad 95681385789f59153823ce0743dcfa907689d2a0
Bisecting: 61 revisions left to test after this (roughly 6 steps)
[95ade9fe5e1fde72fbfd8c759e816809361de938] optee: remove vma linked list walk

testing commit 95ade9fe5e1fde72fbfd8c759e816809361de938
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 56cfdfe7fd57c342401c3dc826942813267aa55be25ea907bda522cfa7cbc022
run #0: crashed: KASAN: use-after-free Read in __vma_adjust
run #1: crashed: KASAN: use-after-free Read in __vma_adjust
run #2: crashed: KASAN: use-after-free Read in __vma_adjust
run #3: crashed: KASAN: use-after-free Read in __vma_adjust
run #4: crashed: KASAN: use-after-free Read in __vma_adjust
run #5: crashed: KASAN: use-after-free Read in __vma_adjust
run #6: crashed: KASAN: use-after-free Read in __vma_adjust
run #7: boot failed: INFO: task hung in add_early_randomness
run #8: boot failed: INFO: task hung in add_early_randomness
run #9: boot failed: INFO: task hung in add_early_randomness
# git bisect bad 95ade9fe5e1fde72fbfd8c759e816809361de938
Bisecting: 30 revisions left to test after this (roughly 5 steps)
[118ae90d565db6831d230b8ecad85fa13178e4c1] mm/mmap: use the maple tree for find_vma_prev() instead of the rbtree

testing commit 118ae90d565db6831d230b8ecad85fa13178e4c1
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 0818e61599846a362a4d3ae860db3d30d622a095f6253fa4455a5a127289c130
run #0: basic kernel testing failed: BUG: program execution failed: executor NUM: failed to write control pipe: write |NUM: broken pipe
run #1: crashed: KASAN: use-after-free Read in __vma_adjust
run #2: crashed: KASAN: use-after-free Read in __vma_adjust
run #3: crashed: KFENCE: use-after-free in __vma_adjust
run #4: crashed: KASAN: use-after-free Read in __vma_adjust
run #5: crashed: KASAN: use-after-free Read in __vma_adjust
run #6: crashed: KASAN: use-after-free Read in __vma_adjust
run #7: crashed: KASAN: use-after-free Read in __vma_adjust
run #8: boot failed: INFO: task hung in add_early_randomness
run #9: boot failed: INFO: task hung in add_early_randomness
# git bisect bad 118ae90d565db6831d230b8ecad85fa13178e4c1
Bisecting: 15 revisions left to test after this (roughly 4 steps)
[c61d7517a462c5ace8dc587e2d22a2b1c0a15984] maple_tree: fix potential out of range offset on mas_next()/mas_prev()

testing commit c61d7517a462c5ace8dc587e2d22a2b1c0a15984
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: dede004397a6ea16cbb3f6ec325242005de8e7b0463f21bafcd49ff015359c0c
run #0: boot failed: INFO: task hung in add_early_randomness
run #1: boot failed: INFO: task hung in add_early_randomness
run #2: boot failed: INFO: task hung in add_early_randomness
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect good c61d7517a462c5ace8dc587e2d22a2b1c0a15984
Bisecting: 7 revisions left to test after this (roughly 3 steps)
[a25986382a92b7f0759b5e4b54ee368cb42cee82] lib/test_maple_tree: add testing for maple tree

testing commit a25986382a92b7f0759b5e4b54ee368cb42cee82
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 7c6117cb906e707d551df81b2b0d663b1a2474372f30885ffd5a440b6d924fce
run #0: boot failed: INFO: task hung in add_early_randomness
run #1: boot failed: INFO: task hung in add_early_randomness
run #2: boot failed: INFO: task hung in add_early_randomness
run #3: boot failed: INFO: task hung in add_early_randomness
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect good a25986382a92b7f0759b5e4b54ee368cb42cee82
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[00937401b815f4d342c6c5c6fd57f8297603003f] mm/mmap: fix leak on expand_downwards() and expand_upwards()

testing commit 00937401b815f4d342c6c5c6fd57f8297603003f
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 3b7be4f314bbb9098018b40f3b340fb426e27b1fe7e6897c5fa8ecfc2b8102a1
run #0: crashed: KASAN: use-after-free Read in __vma_adjust
run #1: crashed: KASAN: use-after-free Read in __vma_adjust
run #2: crashed: KASAN: use-after-free Read in __vma_adjust
run #3: crashed: KASAN: use-after-free Read in __vma_adjust
run #4: crashed: KASAN: use-after-free Read in __vma_adjust
run #5: boot failed: INFO: task hung in add_early_randomness
run #6: boot failed: INFO: task hung in add_early_randomness
run #7: boot failed: INFO: task hung in add_early_randomness
run #8: boot failed: INFO: task hung in add_early_randomness
run #9: boot failed: INFO: task hung in add_early_randomness
# git bisect bad 00937401b815f4d342c6c5c6fd57f8297603003f
Bisecting: 1 revision left to test after this (roughly 1 step)
[d3ccd17e7c9647b956d415acdf3e3fde7ae9e20c] mm: start tracking VMAs with maple tree

testing commit d3ccd17e7c9647b956d415acdf3e3fde7ae9e20c
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 2ad228cf801efdd0fd83a27c1c88439077e226ff0aabb883ab69e8d9f493054d
run #0: crashed: KASAN: use-after-free Read in __vma_adjust
run #1: crashed: KASAN: use-after-free Read in __vma_adjust
run #2: crashed: KASAN: use-after-free Read in __vma_adjust
run #3: crashed: KASAN: use-after-free Read in __vma_adjust
run #4: crashed: KASAN: use-after-free Read in __vma_adjust
run #5: crashed: KASAN: use-after-free Read in __vma_adjust
run #6: boot failed: INFO: task hung in add_early_randomness
run #7: boot failed: INFO: task hung in add_early_randomness
run #8: boot failed: INFO: task hung in add_early_randomness
run #9: boot failed: INFO: task hung in add_early_randomness
# git bisect bad d3ccd17e7c9647b956d415acdf3e3fde7ae9e20c
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[6ef8618d99e10beaa3242e82daec6fbf0c579668] test_maple_tree: add null expansion tests

testing commit 6ef8618d99e10beaa3242e82daec6fbf0c579668
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 07fc89de19c797d414523b7c37615868fb806840b15596f13fc4436f726fece5
run #0: basic kernel testing failed: BUG: program execution failed: executor NUM: failed to write control pipe: write |NUM: broken pipe
run #1: boot failed: INFO: task hung in add_early_randomness
run #2: boot failed: INFO: task hung in add_early_randomness
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect good 6ef8618d99e10beaa3242e82daec6fbf0c579668
d3ccd17e7c9647b956d415acdf3e3fde7ae9e20c is the first bad commit
commit d3ccd17e7c9647b956d415acdf3e3fde7ae9e20c
Author: Liam R. Howlett <Liam.Howlett@Oracle.com>
Date:   Thu Jun 9 13:57:09 2022 -0700

    mm: start tracking VMAs with maple tree
    
    Start tracking the VMAs with the new maple tree structure in parallel with
    the rb_tree.  Add debug and trace events for maple tree operations and
    duplicate the rb_tree that is created on forks into the maple tree.
    
    The maple tree is added to the mm_struct including the mm_init struct,
    added support in required mm/mmap functions, added tracking in kernel/fork
    for process forking, and used to find the unmapped_area and checked
    against what the rbtree finds.
    
    This also moves the mmap_lock() in exit_mmap() since the oom reaper call
    does walk the VMAs.  Otherwise lockdep will be unhappy if oom happens.
    
    Link: https://lkml.kernel.org/r/20220504010716.661115-10-Liam.Howlett@oracle.com
    Signed-off-by: Liam R. Howlett <Liam.Howlett@Oracle.com>
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: David Howells <dhowells@redhat.com>
    Cc: SeongJae Park <sj@kernel.org>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Will Deacon <will@kernel.org>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

 arch/x86/kernel/tboot.c     |   1 +
 drivers/firmware/efi/efi.c  |   1 +
 include/linux/mm.h          |   2 +
 include/linux/mm_types.h    |   3 +
 include/trace/events/mmap.h |  73 ++++++++++
 kernel/fork.c               |  20 ++-
 mm/init-mm.c                |   2 +
 mm/mmap.c                   | 318 ++++++++++++++++++++++++++++++++++++++++----
 8 files changed, 394 insertions(+), 26 deletions(-)

culprit signature: 2ad228cf801efdd0fd83a27c1c88439077e226ff0aabb883ab69e8d9f493054d
parent  signature: 07fc89de19c797d414523b7c37615868fb806840b15596f13fc4436f726fece5
revisions tested: 16, total time: 4h34m18.622194618s (build: 1h46m52.986725177s, test: 2h45m50.09875322s)
first bad commit: d3ccd17e7c9647b956d415acdf3e3fde7ae9e20c mm: start tracking VMAs with maple tree
recipients (to): ["akpm@linux-foundation.org" "liam.howlett@oracle.com" "willy@infradead.org"]
recipients (cc): []
crash: KASAN: use-after-free Read in __vma_adjust
==================================================================
BUG: KASAN: use-after-free in __vma_adjust+0x1d53/0x1e90 mm/mmap.c:973
Read of size 8 at addr ffff88802190e088 by task syz-executor.0/4103

CPU: 1 PID: 4103 Comm: syz-executor.0 Not tainted 5.19.0-rc1-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x57/0x7d lib/dump_stack.c:106
 print_address_description.constprop.0.cold+0xeb/0x495 mm/kasan/report.c:313
 print_report mm/kasan/report.c:429 [inline]
 kasan_report.cold+0xf4/0x1c6 mm/kasan/report.c:491
 __vma_adjust+0x1d53/0x1e90 mm/mmap.c:973
 vma_merge+0xa8d/0x12f0 mm/mmap.c:1366
 userfaultfd_release+0x318/0x610 fs/userfaultfd.c:883
 __fput+0x1f5/0x8c0 fs/file_table.c:317
 task_work_run+0xc0/0x160 kernel/task_work.c:177
 get_signal+0x19b/0x2030 kernel/signal.c:2634
 arch_do_signal_or_restart+0x82/0x2300 arch/x86/kernel/signal.c:869
 exit_to_user_mode_loop kernel/entry/common.c:166 [inline]
 exit_to_user_mode_prepare+0x15f/0x250 kernel/entry/common.c:201
 __syscall_exit_to_user_mode_work kernel/entry/common.c:283 [inline]
 syscall_exit_to_user_mode+0x19/0x50 kernel/entry/common.c:294
 do_syscall_64+0x42/0xb0 arch/x86/entry/common.c:86
 entry_SYSCALL_64_after_hwframe+0x46/0xb0
RIP: 0033:0x7f26de689109
Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f26df78b168 EFLAGS: 00000246 ORIG_RAX: 0000000000000000
RAX: fffffffffffffe00 RBX: 00007f26de79bf60 RCX: 00007f26de689109
RDX: 000000000000003c RSI: 0000000020000180 RDI: 0000000000000003
RBP: 00007f26df78b1d0 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000001
R13: 00007fff7693e3ef R14: 00007f26df78b300 R15: 0000000000022000
 </TASK>

Allocated by task 4081:
 kasan_save_stack+0x1e/0x40 mm/kasan/common.c:38
 kasan_set_track mm/kasan/common.c:45 [inline]
 set_alloc_info mm/kasan/common.c:436 [inline]
 __kasan_slab_alloc+0x90/0xc0 mm/kasan/common.c:469
 kasan_slab_alloc include/linux/kasan.h:224 [inline]
 slab_post_alloc_hook mm/slab.h:750 [inline]
 slab_alloc_node mm/slub.c:3214 [inline]
 slab_alloc mm/slub.c:3222 [inline]
 __kmem_cache_alloc_lru mm/slub.c:3229 [inline]
 kmem_cache_alloc+0x204/0x3b0 mm/slub.c:3239
 vm_area_dup+0x83/0x380 kernel/fork.c:467
 dup_mmap kernel/fork.c:646 [inline]
 dup_mm+0x56a/0x11d0 kernel/fork.c:1538
 copy_mm kernel/fork.c:1590 [inline]
 copy_process+0x349a/0x6690 kernel/fork.c:2254
 kernel_clone+0xb8/0x7f0 kernel/fork.c:2669
 __do_sys_clone+0xa1/0xe0 kernel/fork.c:2803
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x46/0xb0

Freed by task 4103:
 kasan_save_stack+0x1e/0x40 mm/kasan/common.c:38
 kasan_set_track+0x21/0x30 mm/kasan/common.c:45
 kasan_set_free_info+0x20/0x30 mm/kasan/generic.c:370
 ____kasan_slab_free mm/kasan/common.c:366 [inline]
 ____kasan_slab_free+0x166/0x1a0 mm/kasan/common.c:328
 kasan_slab_free include/linux/kasan.h:200 [inline]
 slab_free_hook mm/slub.c:1727 [inline]
 slab_free_freelist_hook+0x8b/0x1c0 mm/slub.c:1753
 slab_free mm/slub.c:3507 [inline]
 kmem_cache_free+0xdd/0x5a0 mm/slub.c:3524
 __vma_adjust+0x82f/0x1e90 mm/mmap.c:1113
 vma_merge+0xa8d/0x12f0 mm/mmap.c:1366
 userfaultfd_release+0x318/0x610 fs/userfaultfd.c:883
 __fput+0x1f5/0x8c0 fs/file_table.c:317
 task_work_run+0xc0/0x160 kernel/task_work.c:177
 get_signal+0x19b/0x2030 kernel/signal.c:2634
 arch_do_signal_or_restart+0x82/0x2300 arch/x86/kernel/signal.c:869
 exit_to_user_mode_loop kernel/entry/common.c:166 [inline]
 exit_to_user_mode_prepare+0x15f/0x250 kernel/entry/common.c:201
 __syscall_exit_to_user_mode_work kernel/entry/common.c:283 [inline]
 syscall_exit_to_user_mode+0x19/0x50 kernel/entry/common.c:294
 do_syscall_64+0x42/0xb0 arch/x86/entry/common.c:86
 entry_SYSCALL_64_after_hwframe+0x46/0xb0

The buggy address belongs to the object at ffff88802190e000
 which belongs to the cache vm_area_struct of size 200
The buggy address is located 136 bytes inside of
 200-byte region [ffff88802190e000, ffff88802190e0c8)

The buggy address belongs to the physical page:
page:ffffea0000864380 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x2190e
memcg:ffff8880732cd401
flags: 0xfff00000000200(slab|node=0|zone=1|lastcpupid=0x7ff)
raw: 00fff00000000200 ffffea00006afa00 dead000000000002 ffff888140006b40
raw: 0000000000000000 00000000000f000f 00000001ffffffff ffff8880732cd401
page dumped because: kasan: bad access detected
page_owner tracks the page as allocated
page last allocated via order 0, migratetype Unmovable, gfp_mask 0x112cc0(GFP_USER|__GFP_NOWARN|__GFP_NORETRY), pid 3832, tgid 3832 (sed), ts 55499849782, free_ts 55494875223
 prep_new_page mm/page_alloc.c:2464 [inline]
 get_page_from_freelist+0xa64/0x3d10 mm/page_alloc.c:4283
 __alloc_pages+0x1c7/0x510 mm/page_alloc.c:5507
 alloc_slab_page mm/slub.c:1797 [inline]
 allocate_slab+0x26c/0x3c0 mm/slub.c:1942
 new_slab mm/slub.c:2002 [inline]
 ___slab_alloc+0x950/0xd90 mm/slub.c:3002
 __slab_alloc.constprop.0+0x4d/0xa0 mm/slub.c:3089
 slab_alloc_node mm/slub.c:3180 [inline]
 slab_alloc mm/slub.c:3222 [inline]
 __kmem_cache_alloc_lru mm/slub.c:3229 [inline]
 kmem_cache_alloc+0x360/0x3b0 mm/slub.c:3239
 vm_area_alloc+0x17/0xf0 kernel/fork.c:459
 mmap_region+0x6c8/0x11d0 mm/mmap.c:1926
 do_mmap+0x5ca/0xd80 mm/mmap.c:1736
 vm_mmap_pgoff+0x163/0x210 mm/util.c:552
 ksys_mmap_pgoff+0x2e8/0x490 mm/mmap.c:1782
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x46/0xb0
page last free stack trace:
 reset_page_owner include/linux/page_owner.h:24 [inline]
 free_pages_prepare mm/page_alloc.c:1379 [inline]
 free_pcp_prepare+0x549/0xd20 mm/page_alloc.c:1429
 free_unref_page_prepare mm/page_alloc.c:3315 [inline]
 free_unref_page_list+0x184/0x1530 mm/page_alloc.c:3479
 release_pages+0x6f1/0x1780 mm/swap.c:980
 tlb_batch_pages_flush+0x85/0x160 mm/mmu_gather.c:58
 tlb_flush_mmu_free mm/mmu_gather.c:255 [inline]
 tlb_flush_mmu mm/mmu_gather.c:262 [inline]
 tlb_finish_mmu+0x110/0x6c0 mm/mmu_gather.c:353
 exit_mmap+0x19d/0x540 mm/mmap.c:3407
 __mmput+0xf3/0x440 kernel/fork.c:1201
 exec_mmap fs/exec.c:1038 [inline]
 begin_new_exec+0xda0/0x2940 fs/exec.c:1297
 load_elf_binary+0xf64/0x4180 fs/binfmt_elf.c:1002
 search_binary_handler fs/exec.c:1728 [inline]
 exec_binprm fs/exec.c:1769 [inline]
 bprm_execve fs/exec.c:1838 [inline]
 bprm_execve+0x669/0x14e0 fs/exec.c:1800
 do_execveat_common+0x5fd/0x7b0 fs/exec.c:1943
 do_execve fs/exec.c:2017 [inline]
 __do_sys_execve fs/exec.c:2093 [inline]
 __se_sys_execve fs/exec.c:2088 [inline]
 __x64_sys_execve+0x8a/0xb0 fs/exec.c:2088
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x46/0xb0

Memory state around the buggy address:
 ffff88802190df80: fb fb fb fb fc fc fc fc fc fc fc fc fc fc fc fc
 ffff88802190e000: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
>ffff88802190e080: fb fb fb fb fb fb fb fb fb fc fc fc fc fc fc fc
                      ^
 ffff88802190e100: fc 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 ffff88802190e180: 00 00 00 00 00 00 00 00 00 00 fc fc fc fc fc fc
==================================================================

