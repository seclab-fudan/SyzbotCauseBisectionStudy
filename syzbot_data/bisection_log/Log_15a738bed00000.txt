bisecting cause commit starting from 1c273e10bc0cc7efb933e0ca10e260cdfc9f0b8c
building syzkaller on 17810eaefa3a6802fa401bda89898b763680d1e4
testing commit 1c273e10bc0cc7efb933e0ca10e260cdfc9f0b8c with gcc (GCC) 10.2.1 20210217
kernel signature: 9b1d8cdc7a1ce5f21a0f021fa4fa04b3a2e53e419f7f384398a43fd0b62d4e11
run #0: crashed: WARNING in io_wq_destroy
run #1: crashed: WARNING in io_wq_destroy
run #2: crashed: WARNING in __fput
run #3: crashed: WARNING in io_wq_destroy
run #4: crashed: WARNING in io_wq_destroy
run #5: crashed: WARNING in io_wq_destroy
run #6: crashed: WARNING in io_wq_destroy
run #7: crashed: WARNING in io_wq_destroy
run #8: crashed: WARNING in io_wq_destroy
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
reproducer seems to be flaky
testing release v5.11
testing commit f40ddce88593482919761f74910f42f4b84c004b with gcc (GCC) 10.2.1 20210217
kernel signature: 556c68b2072c9c9b571946a03477c0a55df44b6e17fccdb20b8500bf088d912c
all runs: OK
# git bisect start 1c273e10bc0cc7efb933e0ca10e260cdfc9f0b8c f40ddce88593482919761f74910f42f4b84c004b
Bisecting: 6906 revisions left to test after this (roughly 13 steps)
[a864e8f159b13babf552aff14a5fbe11abc017e4] ALSA: hda: intel-nhlt: verify config type

testing commit a864e8f159b13babf552aff14a5fbe11abc017e4 with gcc (GCC) 10.2.1 20210217
kernel signature: f4494f888295bfa8efff3276308dfd690d70a628b82ffef2167e41ab66f89708
run #0: crashed: WARNING in kvm_wait
run #1: basic kernel testing failed: failed to copy test binary to VM: timedout ["scp" "-P" "22" "-F" "/dev/null" "-o" "UserKnownHostsFile=/dev/null" "-o" "BatchMode=yes" "-o" "IdentitiesOnly=yes" "-o" "StrictHostKeyChecking=no" "-o" "ConnectTimeout=10" "/tmp/syz-executor846690784" "root@10.128.0.147:./syz-executor846690784"]
Warning: Permanently added '10.128.0.147' (ECDSA) to the list of known hosts.

run #2: boot failed: WARNING in kvm_wait
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad a864e8f159b13babf552aff14a5fbe11abc017e4
Bisecting: 2929 revisions left to test after this (roughly 12 steps)
[e4286926abbbaab9b047c8bc25cae78ec990928f] Merge tag 'tty-5.12-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty

testing commit e4286926abbbaab9b047c8bc25cae78ec990928f with gcc (GCC) 10.2.1 20210217
kernel signature: e838f60c91321db3a73296b14d9d69efb0b473172b62cb7fd1f4824ccc5e044b
all runs: OK
# git bisect good e4286926abbbaab9b047c8bc25cae78ec990928f
Bisecting: 1417 revisions left to test after this (roughly 11 steps)
[d089f48fba28db14d0fe7753248f2575a9ddfc73] Merge tag 'core-rcu-2021-02-17' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip

testing commit d089f48fba28db14d0fe7753248f2575a9ddfc73 with gcc (GCC) 10.2.1 20210217
kernel signature: 45c7575056e4e149254ac8a1e127a94c1d37c5daebafabc504f4d4a0a145f7c8
all runs: OK
# git bisect good d089f48fba28db14d0fe7753248f2575a9ddfc73
Bisecting: 737 revisions left to test after this (roughly 10 steps)
[66f73fb3facd42d0a7c899d7f4c712332b28499a] Merge tag 'for-linus-5.12-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rw/ubifs

testing commit 66f73fb3facd42d0a7c899d7f4c712332b28499a with gcc (GCC) 10.2.1 20210217
kernel signature: bf8409a59a9450d5bcee76360fa34eb4f29a4c3253704a2f0c65fa03dea70476
run #0: crashed: WARNING in kvm_wait
run #1: basic kernel testing failed: failed to copy test binary to VM: timedout ["scp" "-P" "22" "-F" "/dev/null" "-o" "UserKnownHostsFile=/dev/null" "-o" "BatchMode=yes" "-o" "IdentitiesOnly=yes" "-o" "StrictHostKeyChecking=no" "-o" "ConnectTimeout=10" "/tmp/syz-executor811586898" "root@10.128.0.190:./syz-executor811586898"]
Warning: Permanently added '10.128.0.190' (ECDSA) to the list of known hosts.

run #2: boot failed: WARNING in kvm_wait
run #3: boot failed: WARNING in kvm_wait
run #4: boot failed: WARNING in kvm_wait
run #5: boot failed: WARNING in kvm_wait
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad 66f73fb3facd42d0a7c899d7f4c712332b28499a
Bisecting: 355 revisions left to test after this (roughly 8 steps)
[08179b47e1fdf288e5d59f90e5ce31513bb019c3] Merge branch 'parisc-5.12-1' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux

testing commit 08179b47e1fdf288e5d59f90e5ce31513bb019c3 with gcc (GCC) 10.2.1 20210217
kernel signature: a32ab7f4cc584baa3958f46f645cb201b8dfb2843ecc57fbecca1d27bd3edd92
run #0: crashed: WARNING in kvm_wait
run #1: basic kernel testing failed: failed to copy test binary to VM: failed to run ["scp" "-P" "22" "-F" "/dev/null" "-o" "UserKnownHostsFile=/dev/null" "-o" "BatchMode=yes" "-o" "IdentitiesOnly=yes" "-o" "StrictHostKeyChecking=no" "-o" "ConnectTimeout=10" "/tmp/syz-executor658645273" "root@10.128.15.196:./syz-executor658645273"]: exit status 1
ssh: connect to host 10.128.15.196 port 22: Connection timed out
lost connection

run #2: basic kernel testing failed: failed to copy test binary to VM: timedout ["scp" "-P" "22" "-F" "/dev/null" "-o" "UserKnownHostsFile=/dev/null" "-o" "BatchMode=yes" "-o" "IdentitiesOnly=yes" "-o" "StrictHostKeyChecking=no" "-o" "ConnectTimeout=10" "/tmp/syz-executor431850254" "root@10.128.10.56:./syz-executor431850254"]
Warning: Permanently added '10.128.10.56' (ECDSA) to the list of known hosts.

run #3: boot failed: WARNING in kvm_wait
run #4: boot failed: WARNING in kvm_wait
run #5: boot failed: WARNING in kvm_wait
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad 08179b47e1fdf288e5d59f90e5ce31513bb019c3
Bisecting: 209 revisions left to test after this (roughly 7 steps)
[4a037ad5d115b2cc79a5071a7854475f365476fa] Merge tag 'for-linus-5.12-rc1-tag' of git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip

testing commit 4a037ad5d115b2cc79a5071a7854475f365476fa with gcc (GCC) 10.2.1 20210217
kernel signature: a01eea7885e87318794548663d58ae3de9ac2f847a461ebd13804d12a83a6502
run #0: basic kernel testing failed: failed to copy test binary to VM: timedout ["scp" "-P" "22" "-F" "/dev/null" "-o" "UserKnownHostsFile=/dev/null" "-o" "BatchMode=yes" "-o" "IdentitiesOnly=yes" "-o" "StrictHostKeyChecking=no" "-o" "ConnectTimeout=10" "/tmp/syz-executor039306974" "root@10.128.15.205:./syz-executor039306974"]
Warning: Permanently added '10.128.15.205' (ECDSA) to the list of known hosts.

run #1: boot failed: WARNING in kvm_wait
run #2: boot failed: WARNING in kvm_wait
run #3: boot failed: WARNING in kvm_wait
run #4: boot failed: WARNING in kvm_wait
run #5: boot failed: WARNING in kvm_wait
run #6: boot failed: WARNING in kvm_wait
run #7: boot failed: WARNING in kvm_wait
run #8: boot failed: WARNING in kvm_wait
run #9: boot failed: WARNING in kvm_wait
run #10: boot failed: WARNING in kvm_wait
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect good 4a037ad5d115b2cc79a5071a7854475f365476fa
Bisecting: 106 revisions left to test after this (roughly 7 steps)
[b811b41024afa1271afc5af84f663515d9227554] Merge tag 'm68k-for-v5.12-tag1' of git://git.kernel.org/pub/scm/linux/kernel/git/geert/linux-m68k

testing commit b811b41024afa1271afc5af84f663515d9227554 with gcc (GCC) 10.2.1 20210217
kernel signature: 36ec31e3c0ac44fce2a3aa10bc71832f781842010e330852aff0604602ebf7f1
run #0: crashed: WARNING in kvm_wait
run #1: boot failed: WARNING in kvm_wait
run #2: boot failed: WARNING in kvm_wait
run #3: boot failed: WARNING in kvm_wait
run #4: boot failed: WARNING in kvm_wait
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad b811b41024afa1271afc5af84f663515d9227554
Bisecting: 46 revisions left to test after this (roughly 6 steps)
[b374d0f981a79303d6079d7210c04af304fc6b9d] Merge branch 'for-next/kexec' into for-next/core

testing commit b374d0f981a79303d6079d7210c04af304fc6b9d with gcc (GCC) 10.2.1 20210217
kernel signature: 1f41c853c6940140ffaa05f143146cebf03d3098cf7c5dbc7399d942f15990bb
all runs: OK
# git bisect good b374d0f981a79303d6079d7210c04af304fc6b9d
Bisecting: 20 revisions left to test after this (roughly 5 steps)
[c974a8e574f9644aba0607958a3abce596699dc1] Merge branch 'for-next/perf' into for-next/core

testing commit c974a8e574f9644aba0607958a3abce596699dc1 with gcc (GCC) 10.2.1 20210217
kernel signature: 1f41c853c6940140ffaa05f143146cebf03d3098cf7c5dbc7399d942f15990bb
all runs: OK
# git bisect good c974a8e574f9644aba0607958a3abce596699dc1
Bisecting: 10 revisions left to test after this (roughly 3 steps)
[d23fa87cde1dcdcc892d385a7bb5eb6f0420b917] Merge branch 'for-next/stacktrace' into for-next/core

testing commit d23fa87cde1dcdcc892d385a7bb5eb6f0420b917 with gcc (GCC) 10.2.1 20210217
kernel signature: e9bd8cd0b64befd3d75431a1c50cb63d5c2f936d9b31b9e3498ea1681c256516
all runs: OK
# git bisect good d23fa87cde1dcdcc892d385a7bb5eb6f0420b917
Bisecting: 6 revisions left to test after this (roughly 3 steps)
[dcabe10d97f51d0ceca4ef54e607de85d665546f] Merge branch 'for-next/topology' into for-next/core

testing commit dcabe10d97f51d0ceca4ef54e607de85d665546f with gcc (GCC) 10.2.1 20210217
kernel signature: e9bd8cd0b64befd3d75431a1c50cb63d5c2f936d9b31b9e3498ea1681c256516
all runs: OK
# git bisect good dcabe10d97f51d0ceca4ef54e607de85d665546f
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[1ffa9763828cf73a4d4eaa04c29a4a89fb0708c7] Merge branch 'for-next/vdso' into for-next/core

testing commit 1ffa9763828cf73a4d4eaa04c29a4a89fb0708c7 with gcc (GCC) 10.2.1 20210217
kernel signature: e9bd8cd0b64befd3d75431a1c50cb63d5c2f936d9b31b9e3498ea1681c256516
all runs: OK
# git bisect good 1ffa9763828cf73a4d4eaa04c29a4a89fb0708c7
Bisecting: 1 revision left to test after this (roughly 1 step)
[c396dd2ec5bbd1cb80eafe32a72ab6bd6b17cb5a] macintosh/adb-iop: Use big-endian autopoll mask

testing commit c396dd2ec5bbd1cb80eafe32a72ab6bd6b17cb5a with gcc (GCC) 10.2.1 20210217
kernel signature: 1ed0b7860cced7c4a994215cc6bb902f083e3c25d4d01eb31c0b6134844b1965
all runs: OK
# git bisect good c396dd2ec5bbd1cb80eafe32a72ab6bd6b17cb5a
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[99ca0edb41aabd888ca1548fa0391a4975740a83] Merge tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux

testing commit 99ca0edb41aabd888ca1548fa0391a4975740a83 with gcc (GCC) 10.2.1 20210217
kernel signature: 36ec31e3c0ac44fce2a3aa10bc71832f781842010e330852aff0604602ebf7f1
run #0: crashed: WARNING in kvm_wait
run #1: basic kernel testing failed: failed to copy test binary to VM: timedout ["scp" "-P" "22" "-F" "/dev/null" "-o" "UserKnownHostsFile=/dev/null" "-o" "BatchMode=yes" "-o" "IdentitiesOnly=yes" "-o" "StrictHostKeyChecking=no" "-o" "ConnectTimeout=10" "/tmp/syz-executor264052791" "root@10.128.1.56:./syz-executor264052791"]
Warning: Permanently added '10.128.1.56' (ECDSA) to the list of known hosts.

run #2: basic kernel testing failed: failed to copy test binary to VM: timedout ["scp" "-P" "22" "-F" "/dev/null" "-o" "UserKnownHostsFile=/dev/null" "-o" "BatchMode=yes" "-o" "IdentitiesOnly=yes" "-o" "StrictHostKeyChecking=no" "-o" "ConnectTimeout=10" "/tmp/syz-executor331815698" "root@10.128.10.57:./syz-executor331815698"]
Warning: Permanently added '10.128.10.57' (ECDSA) to the list of known hosts.

run #3: boot failed: WARNING in kvm_wait
run #4: boot failed: WARNING in kvm_wait
run #5: boot failed: WARNING in kvm_wait
run #6: boot failed: WARNING in kvm_wait
run #7: boot failed: WARNING in kvm_wait
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad 99ca0edb41aabd888ca1548fa0391a4975740a83
99ca0edb41aabd888ca1548fa0391a4975740a83 is the first bad commit
commit 99ca0edb41aabd888ca1548fa0391a4975740a83
Merge: 4a037ad5d115 1ffa9763828c
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Feb 21 13:08:42 2021 -0800

    Merge tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux
    
    Pull arm64 updates from Will Deacon:
    
     - vDSO build improvements including support for building with BSD.
    
     - Cleanup to the AMU support code and initialisation rework to support
       cpufreq drivers built as modules.
    
     - Removal of synthetic frame record from exception stack when entering
       the kernel from EL0.
    
     - Add support for the TRNG firmware call introduced by Arm spec
       DEN0098.
    
     - Cleanup and refactoring across the board.
    
     - Avoid calling arch_get_random_seed_long() from
       add_interrupt_randomness()
    
     - Perf and PMU updates including support for Cortex-A78 and the v8.3
       SPE extensions.
    
     - Significant steps along the road to leaving the MMU enabled during
       kexec relocation.
    
     - Faultaround changes to initialise prefaulted PTEs as 'old' when
       hardware access-flag updates are supported, which drastically
       improves vmscan performance.
    
     - CPU errata updates for Cortex-A76 (#1463225) and Cortex-A55
       (#1024718)
    
     - Preparatory work for yielding the vector unit at a finer granularity
       in the crypto code, which in turn will one day allow us to defer
       softirq processing when it is in use.
    
     - Support for overriding CPU ID register fields on the command-line.
    
    * tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux: (85 commits)
      drivers/perf: Replace spin_lock_irqsave to spin_lock
      mm: filemap: Fix microblaze build failure with 'mmu_defconfig'
      arm64: Make CPU_BIG_ENDIAN depend on ld.bfd or ld.lld 13.0.0+
      arm64: cpufeatures: Allow disabling of Pointer Auth from the command-line
      arm64: Defer enabling pointer authentication on boot core
      arm64: cpufeatures: Allow disabling of BTI from the command-line
      arm64: Move "nokaslr" over to the early cpufeature infrastructure
      KVM: arm64: Document HVC_VHE_RESTART stub hypercall
      arm64: Make kvm-arm.mode={nvhe, protected} an alias of id_aa64mmfr1.vh=0
      arm64: Add an aliasing facility for the idreg override
      arm64: Honor VHE being disabled from the command-line
      arm64: Allow ID_AA64MMFR1_EL1.VH to be overridden from the command line
      arm64: cpufeature: Add an early command-line cpufeature override facility
      arm64: Extract early FDT mapping from kaslr_early_init()
      arm64: cpufeature: Use IDreg override in __read_sysreg_by_encoding()
      arm64: cpufeature: Add global feature override facility
      arm64: Move SCTLR_EL1 initialisation to EL-agnostic code
      arm64: Simplify init_el2_state to be non-VHE only
      arm64: Move VHE-specific SPE setup to mutate_to_vhe()
      arm64: Drop early setting of MDSCR_EL2.TPMS
      ...

 Documentation/admin-guide/kernel-parameters.txt    |   9 +
 Documentation/admin-guide/perf/arm-cmn.rst         |   2 +-
 Documentation/devicetree/bindings/arm/pmu.yaml     |   1 +
 Documentation/virt/kvm/arm/hyp-abi.rst             |   9 +
 arch/arm/include/asm/archrandom.h                  |  10 +
 arch/arm64/Kconfig                                 |  11 +-
 arch/arm64/Makefile                                |  10 +-
 arch/arm64/include/asm/archrandom.h                |  82 +++++-
 arch/arm64/include/asm/asm-uaccess.h               |   4 +-
 arch/arm64/include/asm/assembler.h                 |  33 +++
 arch/arm64/include/asm/cacheflush.h                |   5 -
 arch/arm64/include/asm/cpufeature.h                |  11 +
 arch/arm64/include/asm/el2_setup.h                 |  60 ++--
 arch/arm64/include/asm/kexec.h                     |   5 +-
 arch/arm64/include/asm/kvm_asm.h                   |   8 +-
 arch/arm64/include/asm/memory.h                    |  12 +
 arch/arm64/include/asm/mmu_context.h               |   7 +-
 arch/arm64/include/asm/pgtable.h                   |  12 +-
 arch/arm64/include/asm/pointer_auth.h              |  10 +
 arch/arm64/include/asm/setup.h                     |  11 +
 arch/arm64/include/asm/sparsemem.h                 |  23 +-
 arch/arm64/include/asm/stackprotector.h            |   1 +
 arch/arm64/include/asm/sysreg.h                    |   9 +-
 arch/arm64/include/asm/trans_pgd.h                 |  39 +++
 arch/arm64/include/asm/uaccess.h                   |   2 +-
 arch/arm64/include/asm/virt.h                      |   7 +-
 arch/arm64/kernel/Makefile                         |   7 +-
 arch/arm64/kernel/alternative.c                    |   2 +-
 arch/arm64/kernel/asm-offsets.c                    |   3 +
 arch/arm64/kernel/cpu_errata.c                     |   2 -
 arch/arm64/kernel/cpufeature.c                     |  75 ++++-
 arch/arm64/kernel/entry-common.c                   |  54 +++-
 arch/arm64/kernel/entry.S                          |  14 +-
 arch/arm64/kernel/head.S                           |  75 +----
 arch/arm64/kernel/hibernate.c                      | 271 ++---------------
 arch/arm64/kernel/hyp-stub.S                       | 115 +++++++-
 arch/arm64/kernel/idreg-override.c                 | 216 ++++++++++++++
 arch/arm64/kernel/kaslr.c                          |  43 +--
 arch/arm64/kernel/machine_kexec.c                  |  57 ++--
 arch/arm64/kernel/module-plts.c                    |   2 +-
 arch/arm64/kernel/perf_event.c                     |  15 +-
 arch/arm64/kernel/process.c                        |   4 +-
 arch/arm64/kernel/ptrace.c                         |   1 +
 arch/arm64/kernel/relocate_kernel.S                |  48 +--
 arch/arm64/kernel/setup.c                          |  15 +
 arch/arm64/kernel/sleep.S                          |   1 +
 arch/arm64/kernel/stacktrace.c                     |  13 +-
 arch/arm64/kernel/syscall.c                        |  30 --
 arch/arm64/kernel/topology.c                       | 115 ++++----
 arch/arm64/kernel/traps.c                          |   2 +-
 arch/arm64/kernel/vdso-wrap.S                      |  24 ++
 arch/arm64/kernel/vdso/Makefile                    |   1 -
 arch/arm64/kernel/vdso/gen_vdso_offsets.sh         |   2 +-
 arch/arm64/kernel/vdso/vdso.S                      |  24 --
 arch/arm64/kernel/vdso32-wrap.S                    |  19 ++
 arch/arm64/kernel/vdso32/Makefile                  |   1 -
 arch/arm64/kernel/vdso32/vdso.S                    |  19 --
 arch/arm64/kernel/vmlinux.lds.S                    |   8 +
 arch/arm64/kvm/arm.c                               |   3 +
 arch/arm64/kvm/hyp/nvhe/hyp-init.S                 |   2 +-
 arch/arm64/mm/Makefile                             |   1 +
 arch/arm64/mm/fault.c                              |  34 +--
 arch/arm64/mm/mmap.c                               |  15 +-
 arch/arm64/mm/mmu.c                                |   4 +-
 arch/arm64/mm/proc.S                               |  16 +-
 arch/arm64/mm/ptdump.c                             |   1 +
 arch/arm64/mm/trans_pgd.c                          | 324 +++++++++++++++++++++
 drivers/char/random.c                              |  15 +-
 drivers/firmware/smccc/smccc.c                     |   6 +
 drivers/perf/arm-cci.c                             |   7 +-
 drivers/perf/arm-cmn.c                             |  19 +-
 drivers/perf/arm_dmc620_pmu.c                      |   5 +-
 drivers/perf/arm_pmu.c                             |   2 +-
 drivers/perf/arm_smmuv3_pmu.c                      |   8 +-
 drivers/perf/arm_spe_pmu.c                         |  23 +-
 drivers/perf/fsl_imx8_ddr_perf.c                   |  10 +-
 drivers/perf/hisilicon/hisi_uncore_ddrc_pmu.c      |   2 +-
 drivers/perf/hisilicon/hisi_uncore_hha_pmu.c       |   2 +-
 drivers/perf/hisilicon/hisi_uncore_l3c_pmu.c       |   2 +-
 drivers/perf/qcom_l2_pmu.c                         |   6 +-
 drivers/perf/qcom_l3_pmu.c                         |   6 +-
 drivers/perf/xgene_pmu.c                           |   5 +-
 fs/xfs/xfs_file.c                                  |   6 +-
 include/linux/arm-smccc.h                          |  31 ++
 include/linux/mm.h                                 |  25 +-
 include/linux/pgtable.h                            |  11 +
 mm/filemap.c                                       | 179 +++++++++---
 mm/khugepaged.c                                    |  37 ++-
 mm/memory.c                                        | 223 +++++---------
 mm/nommu.c                                         |   3 +-
 mm/shmem.c                                         |   6 +-
 mm/swapfile.c                                      |  11 +-
 .../selftests/arm64/mte/check_buffer_fill.c        |   2 +-
 93 files changed, 1695 insertions(+), 1028 deletions(-)
 create mode 100644 arch/arm/include/asm/archrandom.h
 create mode 100644 arch/arm64/include/asm/setup.h
 create mode 100644 arch/arm64/include/asm/trans_pgd.h
 create mode 100644 arch/arm64/kernel/idreg-override.c
 create mode 100644 arch/arm64/kernel/vdso-wrap.S
 delete mode 100644 arch/arm64/kernel/vdso/vdso.S
 create mode 100644 arch/arm64/kernel/vdso32-wrap.S
 delete mode 100644 arch/arm64/kernel/vdso32/vdso.S
 create mode 100644 arch/arm64/mm/trans_pgd.c

Reproducer flagged being flaky
revisions tested: 16, total time: 4h55m55.416150252s (build: 1h44m13.433423761s, test: 3h10m14.655521596s)
first bad commit: 99ca0edb41aabd888ca1548fa0391a4975740a83 Merge tag 'arm64-upstream' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux
recipients (to): ["torvalds@linux-foundation.org"]
recipients (cc): []
crash: WARNING in kvm_wait
------------[ cut here ]------------
raw_local_irq_restore() called with IRQs enabled
WARNING: CPU: 1 PID: 4802 at kernel/locking/irqflag-debug.c:10 warn_bogus_irq_restore+0x1d/0x20 kernel/locking/irqflag-debug.c:10
Modules linked in:
CPU: 1 PID: 4802 Comm: kworker/1:3 Not tainted 5.11.0-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Workqueue: events delayed_fput
RIP: 0010:warn_bogus_irq_restore+0x1d/0x20 kernel/locking/irqflag-debug.c:10
Code: 24 48 c7 c7 60 7b 89 88 e8 2c a1 c1 ff 80 3d 61 d7 e7 03 00 74 01 c3 48 c7 c7 60 f3 8a 88 c6 05 50 d7 e7 03 01 e8 21 a0 c1 ff <0f> 0b c3 48 39 77 10 0f 84 97 00 00 00 66 f7 47 22 f0 ff 74 4b 48
RSP: 0018:ffffc9000110fac8 EFLAGS: 00010282
RAX: 0000000000000000 RBX: ffff88800f922d88 RCX: 0000000000000000
RDX: 0000000000000002 RSI: ffffffff88dd0940 RDI: fffff52000221f4b
RBP: 0000000000000200 R08: 0000000000000001 R09: ffff8880b9f301a7
R10: ffffed10173e6034 R11: 0000000000000001 R12: 0000000000000003
R13: ffffed1001f245b1 R14: 0000000000000001 R15: ffff8880b9f35ec0
FS:  0000000000000000(0000) GS:ffff8880b9f00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000000 CR3: 0000000024276000 CR4: 00000000001506e0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 kvm_wait arch/x86/kernel/kvm.c:860 [inline]
 kvm_wait+0xc9/0xe0 arch/x86/kernel/kvm.c:837
 pv_wait arch/x86/include/asm/paravirt.h:564 [inline]
 pv_wait_head_or_lock kernel/locking/qspinlock_paravirt.h:470 [inline]
 __pv_queued_spin_lock_slowpath+0x8b8/0xb40 kernel/locking/qspinlock.c:508
 pv_queued_spin_lock_slowpath arch/x86/include/asm/paravirt.h:554 [inline]
 queued_spin_lock_slowpath arch/x86/include/asm/qspinlock.h:51 [inline]
 queued_spin_lock include/asm-generic/qspinlock.h:85 [inline]
 do_raw_spin_lock+0x200/0x2b0 kernel/locking/spinlock_debug.c:113
 spin_lock include/linux/spinlock.h:354 [inline]
 dentry_kill fs/dcache.c:710 [inline]
 dput+0x690/0x890 fs/dcache.c:885
 __fput+0x2d8/0x870 fs/file_table.c:293
 delayed_fput+0x49/0x70 fs/file_table.c:308
 process_one_work+0x84c/0x13b0 kernel/workqueue.c:2275
 worker_thread+0x598/0xf80 kernel/workqueue.c:2421
 kthread+0x36f/0x450 kernel/kthread.c:292
 ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:294

