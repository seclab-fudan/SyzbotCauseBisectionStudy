ci starts bisection 2023-01-20 07:42:19.899794592 +0000 UTC m=+58691.505191170
bisecting cause commit starting from c8451c141e07a8d05693f6c8d0e418fbb4b68bb7
building syzkaller on ab32d50881df9f96f2af301aadca62ad00b7e099
ensuring issue is reproducible on original commit c8451c141e07a8d05693f6c8d0e418fbb4b68bb7

testing commit c8451c141e07a8d05693f6c8d0e418fbb4b68bb7 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: d99804d629ebdfad4d77950c480f492a316f2c549912aa5da115b74a49d7e075
all runs: crashed: BUG: stack guard page was hit in inet_release
testing release v6.1
testing commit 830b3c68c1fb1e9176028d02ef86f3cf76aa2476 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 04097963a3116de0cbf501113a79c517e726eca15d55fd9318793179d567455c
all runs: crashed: BUG: stack guard page was hit in inet_release
testing release v6.0
testing commit 4fe89d07dcc2804c8b562f6c7896a45643d34b2f gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: df15fafaeeab06b0776807f487147288632f67d7c39696a364a141564aef2260
all runs: crashed: BUG: stack guard page was hit in inet_release
testing release v5.19
testing commit 3d7cb6b04c3f3115719235cc6866b10326de34cd gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: bfab97caab7c5ef626d8b2f656213ff39d91d79e6206ee1a3bf6ecbd722c11f4
all runs: crashed: BUG: stack guard page was hit in inet_release
testing release v5.18
testing commit 4b0986a3613c92f4ec1bdc7f60ec66fea135991f gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: c59436368d16511be11362edd5388ae8d92d43c41f8c916051789094c7d1f4c5
all runs: crashed: BUG: stack guard page was hit in inet_release
testing release v5.17
testing commit f443e374ae131c168a065ea1748feac6b2e76613 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 5b8e04eb11e441c63d97ab48b22a35dab7ec0eba7b101fe22e45ceb354a86abb
all runs: crashed: BUG: stack guard page was hit in inet_release
testing release v5.16
testing commit df0cc57e057f18e44dac8e6c18aba47ab53202f9 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 941c6626e8d0189fe7ca36ff05643d78acea807001eb78055fac25245f217182
all runs: crashed: BUG: stack guard page was hit in inet_release
testing release v5.15
testing commit 8bb7eca972ad531c9b149c0a51ab43a417385813 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 80213040ea75f1d9a10781bf1a60a1746953eed62fe1772502c0de9e0896a12d
all runs: OK
# git bisect start df0cc57e057f18e44dac8e6c18aba47ab53202f9 8bb7eca972ad531c9b149c0a51ab43a417385813
Bisecting: 7870 revisions left to test after this (roughly 13 steps)
[2219b0ceefe835b92a8a74a73fe964aa052742a2] Merge tag 'soc-5.16' of git://git.kernel.org/pub/scm/linux/kernel/git/soc/soc

testing commit 2219b0ceefe835b92a8a74a73fe964aa052742a2 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 4337c706b716f1eb46f425303109e04e6ea85f208f2165ec984af69929113a28
all runs: OK
# git bisect good 2219b0ceefe835b92a8a74a73fe964aa052742a2
Bisecting: 3942 revisions left to test after this (roughly 12 steps)
[206825f50f908771934e1fba2bfc2e1f1138b36a] Merge tag 'mtd/for-5.16' of git://git.kernel.org/pub/scm/linux/kernel/git/mtd/linux

testing commit 206825f50f908771934e1fba2bfc2e1f1138b36a gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 00e9694420e86e5137c7497d981ccc5c0b19693321ce6dd9cf34b11f208d7bca
all runs: OK
# git bisect good 206825f50f908771934e1fba2bfc2e1f1138b36a
Bisecting: 1971 revisions left to test after this (roughly 11 steps)
[4e1fddc98d2585ddd4792b5e44433dcee7ece001] tcp_cubic: fix spurious Hystart ACK train detections for not-cwnd-limited flows

testing commit 4e1fddc98d2585ddd4792b5e44433dcee7ece001 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 780b23aacd37dbb54426c43051d8e2109d1d71886cd5ace0e773e4abf6b13159
all runs: OK
# git bisect good 4e1fddc98d2585ddd4792b5e44433dcee7ece001
Bisecting: 949 revisions left to test after this (roughly 10 steps)
[ded746bfc94398d2ee9de315a187677b207b2004] Merge tag 'net-5.16-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net

testing commit ded746bfc94398d2ee9de315a187677b207b2004 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: d9070866f3f0a05f8a9a818eaf316b625cd3d2ac26bc11485cdbf25e620a8428
all runs: crashed: BUG: stack guard page was hit in inet_release
# git bisect bad ded746bfc94398d2ee9de315a187677b207b2004
Bisecting: 510 revisions left to test after this (roughly 9 steps)
[924cc4633f048b4fb4af3d1f9a51d10867625339] net/mlx5: Fix too early queueing of log timestamp work

testing commit 924cc4633f048b4fb4af3d1f9a51d10867625339 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: fc6a9c99b374717489dde2fcd8bfb5dd13d1426cd694eb228e7199cd91a9c844
all runs: OK
# git bisect good 924cc4633f048b4fb4af3d1f9a51d10867625339
Bisecting: 256 revisions left to test after this (roughly 8 steps)
[2b29cb9e3f7f038c7f50ad2583b47caf5cb1eaf2] net: dsa: mv88e6xxx: fix "don't use PHY_DETECT on internal PHY's"

testing commit 2b29cb9e3f7f038c7f50ad2583b47caf5cb1eaf2 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: f4ddb63655705e58e7ce1412d5347e7bd19658d40f64765dd812d7e9d2c77ed1
all runs: OK
# git bisect good 2b29cb9e3f7f038c7f50ad2583b47caf5cb1eaf2
Bisecting: 135 revisions left to test after this (roughly 7 steps)
[7587a4a5a4f66293e13358285bcbc90cc9bddb31] Merge tag 'timers_urgent_for_v5.16_rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip

testing commit 7587a4a5a4f66293e13358285bcbc90cc9bddb31 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: aea9ef04b7415789a93f5d24abfcaeb14510ff23f75dec104d4120eec8307cb3
all runs: OK
# git bisect good 7587a4a5a4f66293e13358285bcbc90cc9bddb31
Bisecting: 71 revisions left to test after this (roughly 6 steps)
[2990c89d1df457bd623371324998ee849806ddd3] Merge tag 'netfs-fixes-20211207' of git://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs

testing commit 2990c89d1df457bd623371324998ee849806ddd3 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 4d8510ecc99b1e7257e6aa3413bebf2c607abc9fc0eb9cca92178e3adda910f8
all runs: OK
# git bisect good 2990c89d1df457bd623371324998ee849806ddd3
Bisecting: 35 revisions left to test after this (roughly 5 steps)
[8d6b32aafc44e92117591f772726fb4744b455a5] Merge tag 'linux-can-fixes-for-5.16-20211209' of git://git.kernel.org/pub/scm/linux/kernel/git/mkl/linux-can

testing commit 8d6b32aafc44e92117591f772726fb4744b455a5 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 7b057a30d7a984f417a30fe16e72047740526c20029fa84b298ae1d6a28188db
all runs: crashed: BUG: stack guard page was hit in inet_release
# git bisect bad 8d6b32aafc44e92117591f772726fb4744b455a5
Bisecting: 21 revisions left to test after this (roughly 4 steps)
[6efcdadc157fcb2e9dfbcc797ed036df7498b35a] Merge https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf

testing commit 6efcdadc157fcb2e9dfbcc797ed036df7498b35a gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 63c67f26490b336ba6061d191093c47a7873da97384debb279906c7c0f1b40df
all runs: crashed: BUG: stack guard page was hit in inet_release
# git bisect bad 6efcdadc157fcb2e9dfbcc797ed036df7498b35a
Bisecting: 6 revisions left to test after this (roughly 3 steps)
[d9847eb8be3d895b2b5f514fdf3885d47a0b92a2] bpf: Make CONFIG_DEBUG_INFO_BTF depend upon CONFIG_BPF_SYSCALL

testing commit d9847eb8be3d895b2b5f514fdf3885d47a0b92a2 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 0cc50407cfc8b8b7b1d8567a5b765832bfeb2f03afacc8e230da77dce117c95a
all runs: crashed: BUG: stack guard page was hit in inet_release
# git bisect bad d9847eb8be3d895b2b5f514fdf3885d47a0b92a2
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[c0d95d3380ee099d735e08618c0d599e72f6c8b0] bpf, sockmap: Re-evaluate proto ops when psock is removed from sockmap

testing commit c0d95d3380ee099d735e08618c0d599e72f6c8b0 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 48267c8ce1c64016da51c1d8b2c6dd93a2fbe3e3a663bf496fe6d8ea9acb60bf
all runs: crashed: BUG: stack guard page was hit in inet_release
# git bisect bad c0d95d3380ee099d735e08618c0d599e72f6c8b0
Bisecting: 0 revisions left to test after this (roughly 1 step)
[38207a5e81230d6ffbdd51e5fa5681be5116dcae] bpf, sockmap: Attach map progs to psock early for feature probes

testing commit 38207a5e81230d6ffbdd51e5fa5681be5116dcae gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: b6643c09d5dece3dfcc182072a0d0845023f717694209e18302caae9183e0f83
all runs: crashed: BUG: stack guard page was hit in inet_release
# git bisect bad 38207a5e81230d6ffbdd51e5fa5681be5116dcae
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[f45b2974cc0ae959a4c503a071e38a56bd64372f] bpf, x86: Fix "no previous prototype" warning

testing commit f45b2974cc0ae959a4c503a071e38a56bd64372f gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 6914c7b7522c4a1cfb61b26b91b702a1d95c476a9b6ffede8d21af1f78c27545
all runs: OK
# git bisect good f45b2974cc0ae959a4c503a071e38a56bd64372f
38207a5e81230d6ffbdd51e5fa5681be5116dcae is the first bad commit
commit 38207a5e81230d6ffbdd51e5fa5681be5116dcae
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Fri Nov 19 10:14:17 2021 -0800

    bpf, sockmap: Attach map progs to psock early for feature probes
    
    When a TCP socket is added to a sock map we look at the programs attached
    to the map to determine what proto op hooks need to be changed. Before
    the patch in the 'fixes' tag there were only two categories -- the empty
    set of programs or a TX policy. In any case the base set handled the
    receive case.
    
    After the fix we have an optimized program for receive that closes a small,
    but possible, race on receive. This program is loaded only when the map the
    psock is being added to includes a RX policy. Otherwise, the race is not
    possible so we don't need to handle the race condition.
    
    In order for the call to sk_psock_init() to correctly evaluate the above
    conditions all progs need to be set in the psock before the call. However,
    in the current code this is not the case. We end up evaluating the
    requirements on the old prog state. If your psock is attached to multiple
    maps -- for example a tx map and rx map -- then the second update would pull
    in the correct maps. But, the other pattern with a single rx enabled map
    the correct receive hooks are not used. The result is the race fixed by the
    patch in the fixes tag below may still be seen in this case.
    
    To fix we simply set all psock->progs before doing the call into
    sock_map_init(). With this the init() call gets the full list of programs
    and chooses the correct proto ops on the first iteration instead of
    requiring the second update to pull them in. This fixes the race case when
    only a single map is used.
    
    Fixes: c5d2177a72a16 ("bpf, sockmap: Fix race in ingress receive verdict with redirect to self")
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20211119181418.353932-2-john.fastabend@gmail.com

 net/core/sock_map.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

culprit signature: b6643c09d5dece3dfcc182072a0d0845023f717694209e18302caae9183e0f83
parent  signature: 6914c7b7522c4a1cfb61b26b91b702a1d95c476a9b6ffede8d21af1f78c27545
revisions tested: 22, total time: 4h49m47.564183999s (build: 2h32m22.926598984s, test: 2h14m0.956916902s)
first bad commit: 38207a5e81230d6ffbdd51e5fa5681be5116dcae bpf, sockmap: Attach map progs to psock early for feature probes
recipients (to): ["bpf@vger.kernel.org" "daniel@iogearbox.net" "daniel@iogearbox.net" "davem@davemloft.net" "jakub@cloudflare.com" "john.fastabend@gmail.com" "john.fastabend@gmail.com" "kuba@kernel.org" "lmb@cloudflare.com" "netdev@vger.kernel.org"]
recipients (cc): ["andrii@kernel.org" "ast@kernel.org" "kafai@fb.com" "kpsingh@kernel.org" "linux-kernel@vger.kernel.org" "songliubraving@fb.com" "yhs@fb.com"]
crash: BUG: stack guard page was hit in inet_release
TCP: request_sock_TCPv6: Possible SYN flooding on port 20002. Sending cookies.  Check SNMP counters.
BUG: TASK stack guard page was hit at ffffc90002507ff8 (stack is ffffc90002508000..ffffc90002510000)
stack guard page: 0000 [#1] PREEMPT SMP KASAN
CPU: 1 PID: 4159 Comm: syz-executor.0 Not tainted 5.15.0-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/12/2023
RIP: 0010:kasan_check_range+0x16/0x180 mm/kasan/generic.c:188
Code: a8 01 48 0f 45 fa e8 09 83 ef ff 0f 0b 0f 1f 80 00 00 00 00 48 85 f6 0f 84 3c 01 00 00 49 89 f9 41 54 44 0f b6 c2 49 01 f1 55 <53> 0f 82 18 01 00 00 48 b8 ff ff ff ff ff 7f ff ff 48 39 c7 0f 86
RSP: 0018:ffffc90002508000 EFLAGS: 00010092
RAX: 0000000000000017 RBX: 1ffff920004a100a RCX: ffffffff815461df
RDX: 0000000000000000 RSI: 0000000000000008 RDI: ffffffff8fb80b38
RBP: 0000000000000004 R08: 0000000000000000 R09: ffffffff8fb80b40
R10: 0000000000000001 R11: 00000000000005e6 R12: 0000000000000002
R13: ffff88807ab661b0 R14: 00000000000005e6 R15: ffff88807ab661d0
FS:  0000000000000000(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: ffffc90002507ff8 CR3: 000000000ae8e000 CR4: 0000000000350ee0
Call Trace:
 <TASK>
 instrument_atomic_read include/linux/instrumented.h:71 [inline]
 test_bit include/asm-generic/bitops/instrumented-non-atomic.h:134 [inline]
 hlock_class kernel/locking/lockdep.c:199 [inline]
 mark_lock+0xef/0x17b0 kernel/locking/lockdep.c:4583
 mark_usage kernel/locking/lockdep.c:4514 [inline]
 __lock_acquire+0x844/0x54a0 kernel/locking/lockdep.c:4981
 lock_acquire kernel/locking/lockdep.c:5637 [inline]
 lock_acquire+0x1ab/0x510 kernel/locking/lockdep.c:5602
 __raw_spin_lock_bh include/linux/spinlock_api_smp.h:126 [inline]
 _raw_spin_lock_bh+0x2f/0x40 kernel/locking/spinlock.c:178
 spin_lock_bh include/linux/spinlock.h:354 [inline]
 lock_sock_nested+0x50/0xd0 net/core/sock.c:3288
 lock_sock include/net/sock.h:1645 [inline]
 sock_map_close+0x69/0x530 net/core/sock_map.c:1500
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 sock_map_close+0x4a4/0x530 net/core/sock_map.c:1506
 inet_release+0xef/0x210 net/ipv4/af_inet.c:427
 __sock_release+0xbb/0x270 net/socket.c:649
 sock_close+0xf/0x20 net/socket.c:1314
 __fput+0x204/0x8d0 fs/file_table.c:280
 task_work_run+0xc0/0x160 kernel/task_work.c:164
 exit_task_work include/linux/task_work.h:32 [inline]
 do_exit+0xa47/0x25c0 kernel/exit.c:832
 do_group_exit+0xe7/0x290 kernel/exit.c:929
 get_signal+0x3b0/0x1ce0 kernel/signal.c:2830
 arch_do_signal_or_restart+0x2b2/0x1720 arch/x86/kernel/signal.c:868
 handle_signal_work kernel/entry/common.c:148 [inline]
 exit_to_user_mode_loop kernel/entry/common.c:172 [inline]
 exit_to_user_mode_prepare+0x17d/0x290 kernel/entry/common.c:207
 __syscall_exit_to_user_mode_work kernel/entry/common.c:289 [inline]
 syscall_exit_to_user_mode+0x19/0x60 kernel/entry/common.c:300
 do_syscall_64+0x42/0x80 arch/x86/entry/common.c:86
 entry_SYSCALL_64_after_hwframe+0x44/0xae
RIP: 0033:0x7ff14e9af0a9
Code: Unable to access opcode bytes at RIP 0x7ff14e9af07f.
RSP: 002b:00007ff14dd21168 EFLAGS: 00000246 ORIG_RAX: 0000000000000120
RAX: 0000000000000007 RBX: 00007ff14eacef80 RCX: 00007ff14e9af0a9
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000003
RBP: 00007ff14ea0aae9 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 00007ffdc74c87bf R14: 00007ff14dd21300 R15: 0000000000022000
 </TASK>
Modules linked in:
---[ end trace 219eca27ba369356 ]---
RIP: 0010:kasan_check_range+0x16/0x180 mm/kasan/generic.c:188
Code: a8 01 48 0f 45 fa e8 09 83 ef ff 0f 0b 0f 1f 80 00 00 00 00 48 85 f6 0f 84 3c 01 00 00 49 89 f9 41 54 44 0f b6 c2 49 01 f1 55 <53> 0f 82 18 01 00 00 48 b8 ff ff ff ff ff 7f ff ff 48 39 c7 0f 86
RSP: 0018:ffffc90002508000 EFLAGS: 00010092
RAX: 0000000000000017 RBX: 1ffff920004a100a RCX: ffffffff815461df
RDX: 0000000000000000 RSI: 0000000000000008 RDI: ffffffff8fb80b38
RBP: 0000000000000004 R08: 0000000000000000 R09: ffffffff8fb80b40
R10: 0000000000000001 R11: 00000000000005e6 R12: 0000000000000002
R13: ffff88807ab661b0 R14: 00000000000005e6 R15: ffff88807ab661d0
FS:  0000000000000000(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: ffffc90002507ff8 CR3: 000000000ae8e000 CR4: 0000000000350ee0
----------------
Code disassembly (best guess):
   0:	a8 01                	test   $0x1,%al
   2:	48 0f 45 fa          	cmovne %rdx,%rdi
   6:	e8 09 83 ef ff       	callq  0xffef8314
   b:	0f 0b                	ud2
   d:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  14:	48 85 f6             	test   %rsi,%rsi
  17:	0f 84 3c 01 00 00    	je     0x159
  1d:	49 89 f9             	mov    %rdi,%r9
  20:	41 54                	push   %r12
  22:	44 0f b6 c2          	movzbl %dl,%r8d
  26:	49 01 f1             	add    %rsi,%r9
  29:	55                   	push   %rbp
* 2a:	53                   	push   %rbx <-- trapping instruction
  2b:	0f 82 18 01 00 00    	jb     0x149
  31:	48 b8 ff ff ff ff ff 	movabs $0xffff7fffffffffff,%rax
  38:	7f ff ff
  3b:	48 39 c7             	cmp    %rax,%rdi
  3e:	0f                   	.byte 0xf
  3f:	86                   	.byte 0x86

