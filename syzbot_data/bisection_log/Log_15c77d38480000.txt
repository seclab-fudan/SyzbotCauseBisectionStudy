ci starts bisection 2023-01-04 14:14:43.257230825 +0000 UTC m=+77265.613421087
bisecting cause commit starting from 1b929c02afd37871d5afb9d498426f83432e71c2
building syzkaller on 9da18ae8fa827d046ef8da48cc23c97418553c23
ensuring issue is reproducible on original commit 1b929c02afd37871d5afb9d498426f83432e71c2

testing commit 1b929c02afd37871d5afb9d498426f83432e71c2 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: af170f6452a6b66423da38ad028b17e54f0bc1ffd2a4a028d122b5665418748d
run #0: crashed: general protection fault in f2fs_commit_atomic_write
run #1: crashed: KASAN: use-after-free Read in __update_extent_tree_range
run #2: crashed: general protection fault in f2fs_commit_atomic_write
run #3: crashed: kernel BUG in f2fs_abort_atomic_write
run #4: crashed: general protection fault in f2fs_commit_atomic_write
run #5: crashed: general protection fault in f2fs_commit_atomic_write
run #6: crashed: kernel BUG in f2fs_abort_atomic_write
run #7: crashed: kernel BUG in f2fs_abort_atomic_write
run #8: crashed: kernel BUG in f2fs_abort_atomic_write
run #9: crashed: kernel BUG in __lookup_extent_tree
run #10: crashed: general protection fault in f2fs_commit_atomic_write
run #11: crashed: kernel BUG in f2fs_abort_atomic_write
run #12: crashed: kernel BUG in f2fs_abort_atomic_write
run #13: crashed: general protection fault in f2fs_commit_atomic_write
run #14: crashed: general protection fault in f2fs_commit_atomic_write
run #15: crashed: general protection fault in f2fs_commit_atomic_write
run #16: crashed: kernel BUG in f2fs_abort_atomic_write
run #17: crashed: KASAN: use-after-free Read in __lookup_extent_tree
run #18: crashed: kernel BUG in f2fs_abort_atomic_write
run #19: OK
testing release v6.1
testing commit 830b3c68c1fb1e9176028d02ef86f3cf76aa2476 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 4044026c576a2b98e08a9e37abfc8942c1871dd676967796f7dc80bfc2bc6a9a
all runs: crashed: general protection fault in f2fs_commit_atomic_write
testing release v6.0
testing commit 4fe89d07dcc2804c8b562f6c7896a45643d34b2f gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 6ba607b04ff763bbc78bb17b84edcd3382ae0d5f34dec77cbd02109ce0d8b182
run #0: crashed: general protection fault in f2fs_commit_atomic_write
run #1: crashed: general protection fault in f2fs_commit_atomic_write
run #2: crashed: general protection fault in f2fs_commit_atomic_write
run #3: crashed: kernel BUG in f2fs_abort_atomic_write
run #4: crashed: general protection fault in f2fs_commit_atomic_write
run #5: crashed: general protection fault in f2fs_commit_atomic_write
run #6: crashed: general protection fault in f2fs_commit_atomic_write
run #7: crashed: general protection fault in f2fs_commit_atomic_write
run #8: crashed: general protection fault in f2fs_commit_atomic_write
run #9: crashed: general protection fault in f2fs_commit_atomic_write
testing release v5.19
testing commit 3d7cb6b04c3f3115719235cc6866b10326de34cd gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: cf273a98caf0cdc1868d23ede68789084d4e3e2ec6bc1247a821fa8ee16d6878
run #0: crashed: general protection fault in f2fs_commit_atomic_write
run #1: crashed: general protection fault in f2fs_commit_atomic_write
run #2: crashed: general protection fault in f2fs_commit_atomic_write
run #3: crashed: general protection fault in f2fs_commit_atomic_write
run #4: crashed: general protection fault in f2fs_commit_atomic_write
run #5: crashed: general protection fault in f2fs_commit_atomic_write
run #6: crashed: kernel BUG in f2fs_abort_atomic_write
run #7: crashed: general protection fault in f2fs_commit_atomic_write
run #8: crashed: general protection fault in f2fs_commit_atomic_write
run #9: crashed: general protection fault in f2fs_commit_atomic_write
testing release v5.18
testing commit 4b0986a3613c92f4ec1bdc7f60ec66fea135991f gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: aa65a858d90275303e163100888ab7666bb26694989258bb8c383c1420668126
all runs: OK
# git bisect start 3d7cb6b04c3f3115719235cc6866b10326de34cd 4b0986a3613c92f4ec1bdc7f60ec66fea135991f
Bisecting: 8493 revisions left to test after this (roughly 13 steps)
[c011dd537ffe47462051930413fed07dbdc80313] Merge tag 'arm-soc-5.19' of git://git.kernel.org/pub/scm/linux/kernel/git/soc/soc

testing commit c011dd537ffe47462051930413fed07dbdc80313 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: e2524ae76e7b049448bcdf51cd337cb6ec5563c5a19b4aa23291c330f86019a1
all runs: OK
# git bisect good c011dd537ffe47462051930413fed07dbdc80313
Bisecting: 4244 revisions left to test after this (roughly 12 steps)
[5d4af9c1f04ab0411ba5818baad9a68e87f33099] Merge branch 'mv88e6xxx-fixes-for-reading-serdes-state'

testing commit 5d4af9c1f04ab0411ba5818baad9a68e87f33099 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 1b744153e6a3319aa9fe7d28d437250043a9d62538375cb57d5519a618d26132
all runs: crashed: general protection fault in f2fs_commit_atomic_write
# git bisect bad 5d4af9c1f04ab0411ba5818baad9a68e87f33099
Bisecting: 2116 revisions left to test after this (roughly 11 steps)
[7e284070abe53d448517b80493863595af4ab5f0] Merge tag 'for-5.19/dm-changes' of git://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm

testing commit 7e284070abe53d448517b80493863595af4ab5f0 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 59dce2e9dd97cff8c2d7292dc4365d16cb1e8b58279dbd962a15323c5ee31c80
all runs: OK
# git bisect good 7e284070abe53d448517b80493863595af4ab5f0
Bisecting: 1073 revisions left to test after this (roughly 10 steps)
[664a393a2663a0f62fc1b18157ccae33dcdbb8c8] Merge tag 'input-for-v5.19-rc0' of git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input

testing commit 664a393a2663a0f62fc1b18157ccae33dcdbb8c8 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 3773376cde52de5ed8de6379e3361f686c9153e697383308ee28cc9857ca8575
all runs: OK
# git bisect good 664a393a2663a0f62fc1b18157ccae33dcdbb8c8
Bisecting: 523 revisions left to test after this (roughly 9 steps)
[f8a52af9d00d59fd887d8ad1fa0c2c88a5d775b9] Merge tag 'i2c-for-5.19' of git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux

testing commit f8a52af9d00d59fd887d8ad1fa0c2c88a5d775b9 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 249c118cb1c74a1d9f0ed17c44c02dbc61df39ff124bb0f0c0f640d7377f62d5
all runs: OK
# git bisect good f8a52af9d00d59fd887d8ad1fa0c2c88a5d775b9
Bisecting: 255 revisions left to test after this (roughly 8 steps)
[96752be4d7b443e6f1e322428d61f777d7d8bd4d] Merge tag 'linux-watchdog-5.19-rc1' of git://www.linux-watchdog.org/linux-watchdog

testing commit 96752be4d7b443e6f1e322428d61f777d7d8bd4d gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 6679619dba7aa0d539005b877eaecb23cb026d7cffcdadc63f44b1e9ec3aac78
run #0: crashed: general protection fault in f2fs_commit_atomic_write
run #1: crashed: general protection fault in f2fs_commit_atomic_write
run #2: crashed: general protection fault in f2fs_commit_atomic_write
run #3: crashed: general protection fault in f2fs_commit_atomic_write
run #4: crashed: general protection fault in f2fs_commit_atomic_write
run #5: crashed: general protection fault in f2fs_commit_atomic_write
run #6: crashed: general protection fault in f2fs_commit_atomic_write
run #7: crashed: general protection fault in f2fs_commit_atomic_write
run #8: crashed: kernel BUG in f2fs_abort_atomic_write
run #9: crashed: general protection fault in f2fs_commit_atomic_write
# git bisect bad 96752be4d7b443e6f1e322428d61f777d7d8bd4d
Bisecting: 148 revisions left to test after this (roughly 7 steps)
[68e6134bb70ab20e9f7c36c1ae7dc96b8ed778ae] Merge tag 'rpmsg-v5.19' of git://git.kernel.org/pub/scm/linux/kernel/git/remoteproc/linux

testing commit 68e6134bb70ab20e9f7c36c1ae7dc96b8ed778ae gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 98f5881e2027871656ebb9e552086ada4c9b0b1c55645d8aac485982062b27eb
run #0: crashed: general protection fault in f2fs_commit_atomic_write
run #1: crashed: kernel BUG in f2fs_abort_atomic_write
run #2: crashed: general protection fault in f2fs_commit_atomic_write
run #3: crashed: general protection fault in f2fs_commit_atomic_write
run #4: crashed: general protection fault in f2fs_commit_atomic_write
run #5: crashed: general protection fault in f2fs_commit_atomic_write
run #6: crashed: general protection fault in f2fs_commit_atomic_write
run #7: crashed: general protection fault in f2fs_commit_atomic_write
run #8: crashed: general protection fault in f2fs_commit_atomic_write
run #9: crashed: general protection fault in f2fs_commit_atomic_write
# git bisect bad 68e6134bb70ab20e9f7c36c1ae7dc96b8ed778ae
Bisecting: 57 revisions left to test after this (roughly 6 steps)
[1501f707d2b24316b41d45bdc95a73bc8cc8dd49] Merge tag 'f2fs-for-5.19-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs

testing commit 1501f707d2b24316b41d45bdc95a73bc8cc8dd49 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 3d002f2286f9511b89ca4d51b714a0fd020b50e5aa103a9a5209c67ff7a4947e
run #0: crashed: general protection fault in f2fs_commit_atomic_write
run #1: crashed: general protection fault in f2fs_commit_atomic_write
run #2: crashed: general protection fault in f2fs_commit_atomic_write
run #3: crashed: general protection fault in f2fs_commit_atomic_write
run #4: crashed: general protection fault in f2fs_commit_atomic_write
run #5: crashed: general protection fault in f2fs_commit_atomic_write
run #6: crashed: kernel BUG in f2fs_abort_atomic_write
run #7: crashed: general protection fault in f2fs_commit_atomic_write
run #8: crashed: general protection fault in f2fs_commit_atomic_write
run #9: crashed: general protection fault in f2fs_commit_atomic_write
# git bisect bad 1501f707d2b24316b41d45bdc95a73bc8cc8dd49
Bisecting: 30 revisions left to test after this (roughly 5 steps)
[c81d5bae404abc6b257667e84d39b9b50c7063d4] f2fs: do not stop GC when requiring a free section

testing commit c81d5bae404abc6b257667e84d39b9b50c7063d4 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 21d094172d70f5b45d3051ba5437ce5be85b69067bac186c63bc64643c1cca36
run #0: crashed: general protection fault in f2fs_commit_atomic_write
run #1: crashed: kernel BUG in f2fs_abort_atomic_write
run #2: crashed: general protection fault in f2fs_commit_atomic_write
run #3: crashed: general protection fault in f2fs_commit_atomic_write
run #4: crashed: kernel BUG in f2fs_abort_atomic_write
run #5: crashed: general protection fault in f2fs_commit_atomic_write
run #6: crashed: general protection fault in f2fs_commit_atomic_write
run #7: crashed: kernel BUG in f2fs_abort_atomic_write
run #8: crashed: general protection fault in f2fs_commit_atomic_write
run #9: crashed: general protection fault in f2fs_commit_atomic_write
# git bisect bad c81d5bae404abc6b257667e84d39b9b50c7063d4
Bisecting: 14 revisions left to test after this (roughly 4 steps)
[f2db71053dc0409fae785096ad19cce4c8a95af7] f2fs: fix to clear dirty inode in f2fs_evict_inode()

testing commit f2db71053dc0409fae785096ad19cce4c8a95af7 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 5ea702f0f396b31cb1fffe7fc42c7e1fb5f4ad7d99ad6af76cb58921dbcf9e94
all runs: OK
# git bisect good f2db71053dc0409fae785096ad19cce4c8a95af7
Bisecting: 7 revisions left to test after this (roughly 3 steps)
[2880f47b949f1f49e2d861ffbba91d57416be7d9] f2fs: skip GC if possible when checkpoint disabling

testing commit 2880f47b949f1f49e2d861ffbba91d57416be7d9 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 3d8d409194f549a7929af2bc93f22b92e78b382c72b22f199c0400c0a1a0c483
all runs: OK
# git bisect good 2880f47b949f1f49e2d861ffbba91d57416be7d9
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[7bc155fec5b371dbb57256e84a49c78692a09060] f2fs: kill volatile write support

testing commit 7bc155fec5b371dbb57256e84a49c78692a09060 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: f97494084e1e6da50ba08fc1ddf9e2e558c7c610e388aa1f33aa7748c08fd39d
run #0: crashed: kernel BUG in f2fs_abort_atomic_write
run #1: crashed: general protection fault in f2fs_commit_atomic_write
run #2: crashed: general protection fault in f2fs_commit_atomic_write
run #3: crashed: general protection fault in f2fs_commit_atomic_write
run #4: crashed: general protection fault in f2fs_commit_atomic_write
run #5: crashed: general protection fault in f2fs_commit_atomic_write
run #6: crashed: kernel BUG in f2fs_abort_atomic_write
run #7: crashed: general protection fault in f2fs_commit_atomic_write
run #8: crashed: kernel BUG in f2fs_abort_atomic_write
run #9: crashed: general protection fault in f2fs_commit_atomic_write
# git bisect bad 7bc155fec5b371dbb57256e84a49c78692a09060
Bisecting: 1 revision left to test after this (roughly 1 step)
[6213f5d4d23c50d393a31dc8e351e63a1fd10dbe] f2fs: don't need inode lock for system hidden quota

testing commit 6213f5d4d23c50d393a31dc8e351e63a1fd10dbe gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 7a08018d63eff9a7c0b542ac327fe0e17bd8706c109d6d7c6cc5fec48a4aa771
all runs: OK
# git bisect good 6213f5d4d23c50d393a31dc8e351e63a1fd10dbe
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[3db1de0e582c358dd013f3703cd55b5fe4076436] f2fs: change the current atomic write way

testing commit 3db1de0e582c358dd013f3703cd55b5fe4076436 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: f557b91d0bdbe5109ac9ebd54c7058b1a0bafb54cb78c1c459538809690c022e
run #0: crashed: general protection fault in f2fs_commit_atomic_write
run #1: crashed: general protection fault in f2fs_commit_atomic_write
run #2: crashed: general protection fault in f2fs_commit_atomic_write
run #3: crashed: general protection fault in f2fs_commit_atomic_write
run #4: crashed: general protection fault in f2fs_commit_atomic_write
run #5: crashed: kernel BUG in f2fs_abort_atomic_write
run #6: crashed: general protection fault in f2fs_commit_atomic_write
run #7: crashed: kernel BUG in f2fs_abort_atomic_write
run #8: crashed: kernel BUG in f2fs_abort_atomic_write
run #9: crashed: general protection fault in f2fs_commit_atomic_write
# git bisect bad 3db1de0e582c358dd013f3703cd55b5fe4076436
3db1de0e582c358dd013f3703cd55b5fe4076436 is the first bad commit
commit 3db1de0e582c358dd013f3703cd55b5fe4076436
Author: Daeho Jeong <daehojeong@google.com>
Date:   Thu Apr 28 11:18:09 2022 -0700

    f2fs: change the current atomic write way
    
    Current atomic write has three major issues like below.
     - keeps the updates in non-reclaimable memory space and they are even
       hard to be migrated, which is not good for contiguous memory
       allocation.
     - disk spaces used for atomic files cannot be garbage collected, so
       this makes it difficult for the filesystem to be defragmented.
     - If atomic write operations hit the threshold of either memory usage
       or garbage collection failure count, All the atomic write operations
       will fail immediately.
    
    To resolve the issues, I will keep a COW inode internally for all the
    updates to be flushed from memory, when we need to flush them out in a
    situation like high memory pressure. These COW inodes will be tagged
    as orphan inodes to be reclaimed in case of sudden power-cut or system
    failure during atomic writes.
    
    Signed-off-by: Daeho Jeong <daehojeong@google.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>

 fs/f2fs/data.c              | 180 +++++++++++++--------
 fs/f2fs/debug.c             |  12 +-
 fs/f2fs/f2fs.h              |  33 +---
 fs/f2fs/file.c              |  49 +++---
 fs/f2fs/gc.c                |  27 +---
 fs/f2fs/inode.c             |   3 +-
 fs/f2fs/namei.c             |  28 ++--
 fs/f2fs/node.c              |   4 -
 fs/f2fs/node.h              |   1 -
 fs/f2fs/segment.c           | 380 +++++++++++++++-----------------------------
 fs/f2fs/segment.h           |   4 +-
 fs/f2fs/super.c             |   6 +-
 include/trace/events/f2fs.h |  22 ---
 13 files changed, 303 insertions(+), 446 deletions(-)

culprit signature: f557b91d0bdbe5109ac9ebd54c7058b1a0bafb54cb78c1c459538809690c022e
parent  signature: 7a08018d63eff9a7c0b542ac327fe0e17bd8706c109d6d7c6cc5fec48a4aa771
revisions tested: 19, total time: 5h22m42.693762153s (build: 3h0m8.436360618s, test: 2h17m43.286039442s)
first bad commit: 3db1de0e582c358dd013f3703cd55b5fe4076436 f2fs: change the current atomic write way
recipients (to): ["chao@kernel.org" "daehojeong@google.com" "jaegeuk@kernel.org" "jaegeuk@kernel.org" "linux-f2fs-devel@lists.sourceforge.net" "mingo@redhat.com" "rostedt@goodmis.org"]
recipients (cc): ["linux-kernel@vger.kernel.org"]
crash: general protection fault in f2fs_commit_atomic_write
general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN
KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]
CPU: 0 PID: 5063 Comm: syz-executor.0 Not tainted 5.18.0-rc4-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/26/2022
RIP: 0010:f2fs_compressed_file fs/f2fs/f2fs.h:3112 [inline]
RIP: 0010:addrs_per_block fs/f2fs/f2fs.h:3144 [inline]
RIP: 0010:__f2fs_commit_atomic_write fs/f2fs/segment.c:288 [inline]
RIP: 0010:f2fs_commit_atomic_write+0x2af/0xff0 fs/f2fs/segment.c:361
Code: e8 03 48 01 d8 48 89 44 24 60 49 8d 87 b0 04 00 00 48 89 84 24 80 00 00 00 48 c1 e8 03 48 89 84 24 88 00 00 00 48 8b 44 24 60 <0f> b6 00 84 c0 74 08 3c 01 0f 8e 88 0b 00 00 41 0f b7 06 66 25 00
RSP: 0018:ffffc900035ffb00 EFLAGS: 00010216
RAX: dffffc0000000000 RBX: dffffc0000000000 RCX: ffffffff88e3fe6c
RDX: 1ffff1100d8bbd42 RSI: 0000000000000008 RDI: ffff88806c5dea10
RBP: ffff88806c5de9e8 R08: 0000000000000001 R09: ffff88807f07034f
R10: ffffed100fe0e069 R11: 0000000000000001 R12: 00000000ffffffea
R13: ffff88806c5de9c0 R14: 0000000000000000 R15: 0000000000000000
FS:  00007f4c491b1700(0000) GS:ffff8880b9c00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007f4c491b1718 CR3: 0000000022cf0000 CR4: 0000000000350ef0
Call Trace:
 <TASK>
 f2fs_ioc_commit_atomic_write+0x189/0x270 fs/f2fs/file.c:2105
 __f2fs_ioctl+0x1cf6/0x9490 fs/f2fs/file.c:4152
 vfs_ioctl fs/ioctl.c:51 [inline]
 __do_sys_ioctl fs/ioctl.c:870 [inline]
 __se_sys_ioctl fs/ioctl.c:856 [inline]
 __x64_sys_ioctl+0x123/0x190 fs/ioctl.c:856
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x44/0xae
RIP: 0033:0x7f4c4848c0a9
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 f1 19 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f4c491b1168 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
RAX: ffffffffffffffda RBX: 00007f4c485ac1f0 RCX: 00007f4c4848c0a9
RDX: 0000000000000000 RSI: 000000000000f502 RDI: 0000000000000004
RBP: 00007f4c484e7ae9 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 00007ffe8f9ffabf R14: 00007f4c491b1300 R15: 0000000000022000
 </TASK>
Modules linked in:
---[ end trace 0000000000000000 ]---
RIP: 0010:f2fs_compressed_file fs/f2fs/f2fs.h:3112 [inline]
RIP: 0010:addrs_per_block fs/f2fs/f2fs.h:3144 [inline]
RIP: 0010:__f2fs_commit_atomic_write fs/f2fs/segment.c:288 [inline]
RIP: 0010:f2fs_commit_atomic_write+0x2af/0xff0 fs/f2fs/segment.c:361
Code: e8 03 48 01 d8 48 89 44 24 60 49 8d 87 b0 04 00 00 48 89 84 24 80 00 00 00 48 c1 e8 03 48 89 84 24 88 00 00 00 48 8b 44 24 60 <0f> b6 00 84 c0 74 08 3c 01 0f 8e 88 0b 00 00 41 0f b7 06 66 25 00
RSP: 0018:ffffc900035ffb00 EFLAGS: 00010216
RAX: dffffc0000000000 RBX: dffffc0000000000 RCX: ffffffff88e3fe6c
RDX: 1ffff1100d8bbd42 RSI: 0000000000000008 RDI: ffff88806c5dea10
RBP: ffff88806c5de9e8 R08: 0000000000000001 R09: ffff88807f07034f
R10: ffffed100fe0e069 R11: 0000000000000001 R12: 00000000ffffffea
R13: ffff88806c5de9c0 R14: 0000000000000000 R15: 0000000000000000
FS:  00007f4c491b1700(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000557b62039000 CR3: 0000000022cf0000 CR4: 0000000000350ee0
----------------
Code disassembly (best guess):
   0:	e8 03 48 01 d8       	callq  0xd8014808
   5:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   a:	49 8d 87 b0 04 00 00 	lea    0x4b0(%r15),%rax
  11:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
  18:	00
  19:	48 c1 e8 03          	shr    $0x3,%rax
  1d:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
  24:	00
  25:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
* 2a:	0f b6 00             	movzbl (%rax),%eax <-- trapping instruction
  2d:	84 c0                	test   %al,%al
  2f:	74 08                	je     0x39
  31:	3c 01                	cmp    $0x1,%al
  33:	0f 8e 88 0b 00 00    	jle    0xbc1
  39:	41 0f b7 06          	movzwl (%r14),%eax
  3d:	66                   	data16
  3e:	25                   	.byte 0x25

