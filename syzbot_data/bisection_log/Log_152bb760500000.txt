bisecting cause commit starting from d3d45f8220d60a0b2aaaacf8fb2be4e6ffd9008e
building syzkaller on 2653fa43f8cced3279808d74e5f712bf45ef7551
testing commit d3d45f8220d60a0b2aaaacf8fb2be4e6ffd9008e with gcc (GCC) 8.1.0
kernel signature: d187cd6dbd4db793e9743e8b61d8c782ae30609c06f976f13af44a7965c9f55d
all runs: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
testing release v5.8
testing commit bcf876870b95592b52519ed4aafcf9d95999bc9c with gcc (GCC) 8.1.0
kernel signature: 6ef1e159db353a4a0d0cc0e04905162df7dce76ff3ebae51ed3f80e0730623af
run #0: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #1: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #2: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #3: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #4: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #5: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #6: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #7: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #8: crashed: INFO: task hung in hub_port_init
run #9: crashed: INFO: task hung in hub_port_init
testing release v5.7
testing commit 3d77e6a8804abcc0504c904bd6e5cdf3a5cf8162 with gcc (GCC) 8.1.0
kernel signature: 6fae3c62791873c2fd0e80fa5d21641b90b19b67901819a0d46956c611b2e81b
run #0: crashed: KASAN: null-ptr-deref Write in event_handler
run #1: crashed: KASAN: null-ptr-deref Write in event_handler
run #2: crashed: KASAN: null-ptr-deref Write in event_handler
run #3: crashed: KASAN: null-ptr-deref Write in event_handler
run #4: crashed: KASAN: null-ptr-deref Write in event_handler
run #5: crashed: KASAN: null-ptr-deref Write in event_handler
run #6: crashed: KASAN: null-ptr-deref Write in event_handler
run #7: crashed: KASAN: null-ptr-deref Write in event_handler
run #8: crashed: KASAN: null-ptr-deref Write in event_handler
run #9: crashed: INFO: task hung in hub_port_init
testing release v5.6
testing commit 7111951b8d4973bda27ff663f2cf18b663d15b48 with gcc (GCC) 8.1.0
kernel signature: 2504f02b8cfb187152ea0de2ea9ab495d9feb34a53eab304757f6a50d478ef5d
run #0: crashed: KASAN: null-ptr-deref Write in event_handler
run #1: crashed: KASAN: null-ptr-deref Write in event_handler
run #2: crashed: KASAN: null-ptr-deref Write in event_handler
run #3: crashed: KASAN: null-ptr-deref Write in event_handler
run #4: crashed: KASAN: null-ptr-deref Write in event_handler
run #5: crashed: KASAN: null-ptr-deref Write in event_handler
run #6: crashed: KASAN: null-ptr-deref Write in event_handler
run #7: crashed: KASAN: null-ptr-deref Write in event_handler
run #8: crashed: KASAN: null-ptr-deref Write in event_handler
run #9: crashed: INFO: task hung in usb_get_descriptor
testing release v5.5
testing commit d5226fa6dbae0569ee43ecfc08bdcd6770fc4755 with gcc (GCC) 8.1.0
kernel signature: 90cbd4a6ed8fcfa169a6495f0aacb677ed0151184a8055cb1a301308dccb7de6
run #0: crashed: KASAN: null-ptr-deref Write in event_handler
run #1: crashed: KASAN: null-ptr-deref Write in event_handler
run #2: crashed: KASAN: null-ptr-deref Write in event_handler
run #3: crashed: KASAN: null-ptr-deref Write in event_handler
run #4: crashed: KASAN: null-ptr-deref Write in event_handler
run #5: crashed: KASAN: null-ptr-deref Write in event_handler
run #6: crashed: KASAN: null-ptr-deref Write in event_handler
run #7: crashed: KASAN: null-ptr-deref Write in event_handler
run #8: crashed: KASAN: null-ptr-deref Write in event_handler
run #9: crashed: INFO: task hung in usb_get_descriptor
testing release v5.4
testing commit 219d54332a09e8d8741c1e1982f5eae56099de85 with gcc (GCC) 8.1.0
kernel signature: 53aa15ca528a71f657464abab91e4c0a6b54b7141a8b626a372f9e14ed9ac4d9
run #0: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #1: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #2: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #3: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #4: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #5: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #6: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #7: crashed: INFO: task hung in hub_port_init
run #8: crashed: INFO: task hung in hub_port_init
run #9: crashed: INFO: task hung in hub_port_init
testing release v5.3
testing commit 4d856f72c10ecb060868ed10ff1b1453943fc6c8 with gcc (GCC) 8.1.0
kernel signature: 10a076f2af65c93ab5555b80a04c23387380687a7c7dcb1eb976314c2eae659b
run #0: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #1: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #2: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #3: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #4: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #5: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #6: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #7: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #8: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #9: crashed: INFO: task hung in hub_port_init
testing release v5.2
testing commit 0ecfebd2b52404ae0c54a878c872bb93363ada36 with gcc (GCC) 8.1.0
kernel signature: 90d5877755da427271bde511c5a740a5cd30f6055c849d95db14304c94f53bdb
run #0: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #1: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #2: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #3: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #4: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #5: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #6: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #7: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #8: crashed: INFO: task hung in hub_port_init
run #9: crashed: INFO: task hung in hub_port_init
testing release v5.1
testing commit e93c9c99a629c61837d5a7fc2120cd2b6c70dbdd with gcc (GCC) 8.1.0
kernel signature: e86130e814505dd3c0d8e0184a22b5f8a1c7dd05e23f52d7a32e58ffd2713e31
all runs: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
testing release v5.0
testing commit 1c163f4c7b3f621efff9b28a47abb36f7378d783 with gcc (GCC) 8.1.0
kernel signature: 4a3d03c76b87d9a297e9cbba8eb694d3fad54ff1d0ea5dd09ca95911bba439f4
run #0: crashed: KASAN: null-ptr-deref Write in event_handler
run #1: crashed: KASAN: null-ptr-deref Write in event_handler
run #2: crashed: KASAN: null-ptr-deref Write in event_handler
run #3: crashed: KASAN: null-ptr-deref Write in event_handler
run #4: crashed: KASAN: null-ptr-deref Write in event_handler
run #5: crashed: KASAN: null-ptr-deref Write in event_handler
run #6: crashed: KASAN: null-ptr-deref Write in event_handler
run #7: crashed: KASAN: null-ptr-deref Write in event_handler
run #8: crashed: INFO: task hung in hub_port_init
run #9: crashed: INFO: task hung in hub_port_init
testing release v4.20
testing commit 8fe28cb58bcb235034b64cbbb7550a8a43fd88be with gcc (GCC) 8.1.0
kernel signature: c5ee67a278f2b86b9eb217491133e2aa550a29f898b7219a1c6cd39a2143e4bc
all runs: crashed: KASAN: null-ptr-deref Write in event_handler
testing release v4.19
testing commit 84df9525b0c27f3ebc2ebb1864fa62a97fdedb7d with gcc (GCC) 8.1.0
kernel signature: a9fcd46d2237d1d9db40f9f701985ff2a202c110cfda476940fe68396d5198b0
all runs: crashed: KASAN: null-ptr-deref Write in event_handler
testing release v4.18
testing commit 94710cac0ef4ee177a63b5227664b38c95bbf703 with gcc (GCC) 8.1.0
kernel signature: 3614e5da0c312492f559deaedad597303ccc5f7ab91a6cb03f5860fec7d16273
all runs: crashed: KASAN: null-ptr-deref Write in event_handler
testing release v4.17
testing commit 29dcea88779c856c7dc92040a0c01233263101d4 with gcc (GCC) 8.1.0
kernel signature: 6f9ec6d2f43f4addb67602b7aedf08370a2d777535f1dcb59f2e9eb829721b4d
run #0: crashed: KASAN: null-ptr-deref Write in event_handler
run #1: crashed: KASAN: null-ptr-deref Write in event_handler
run #2: crashed: KASAN: null-ptr-deref Write in event_handler
run #3: crashed: KASAN: null-ptr-deref Write in event_handler
run #4: crashed: KASAN: null-ptr-deref Write in event_handler
run #5: crashed: KASAN: null-ptr-deref Write in event_handler
run #6: crashed: KASAN: null-ptr-deref Write in event_handler
run #7: crashed: KASAN: null-ptr-deref Write in event_handler
run #8: crashed: KASAN: null-ptr-deref Write in event_handler
run #9: crashed: INFO: task hung in hub_port_init
testing release v4.16
testing commit 0adb32858b0bddf4ada5f364a84ed60b196dbcda with gcc (GCC) 8.1.0
kernel signature: 52e6a4f187c52e95796b38920bf433a9a19d97f768924f0b442027bbad5ba4a8
run #0: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #1: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #2: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #3: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #4: crashed: BUG: unable to handle kernel
run #5: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #6: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #7: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #8: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #9: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
testing release v4.15
testing commit d8a5b80568a9cb66810e75b182018e9edb68e8ff with gcc (GCC) 8.1.0
kernel signature: 1e79387c2a6ebedbafa38c94a60f26df16614aaf522ca3261f027f1582c2acac
run #0: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #1: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #2: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #3: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #4: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #5: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #6: crashed: INFO: task hung in hub_port_init
run #7: crashed: INFO: task hung in hub_port_init
run #8: crashed: INFO: task hung in hub_port_init
run #9: crashed: INFO: task hung in hub_port_init
testing release v4.14
testing commit bebc6082da0a9f5d47a1ea2edc099bf671058bd4 with gcc (GCC) 8.1.0
kernel signature: 3cce1a77187078369eb226a5c68659da07bc072548f7f63a471606e43be6cc3d
run #0: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #1: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #2: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #3: crashed: BUG: unable to handle kernel
run #4: crashed: BUG: unable to handle kernel
run #5: crashed: INFO: task hung in hub_port_init
run #6: crashed: INFO: task hung in hub_port_init
run #7: crashed: INFO: task hung in hub_port_init
run #8: crashed: INFO: task hung in hub_port_init
run #9: crashed: INFO: task hung in hub_port_init
testing release v4.13
testing commit 569dbb88e80deb68974ef6fdd6a13edb9d686261 with gcc (GCC) 8.1.0
kernel signature: 41bdc03b8a488a47ef14245edbb22a77160e9a58b2780f80ebe22e23e0c7a86a
run #0: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #1: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #2: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #3: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #4: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #5: crashed: BUG: unable to handle kernel NULL pointer dereference in event_handler
run #6: crashed: INFO: task hung in hub_port_init
run #7: crashed: INFO: task hung in hub_port_init
run #8: crashed: INFO: task hung in hub_port_init
run #9: crashed: INFO: task hung in hub_port_init
testing release v4.12
testing commit 6f7da290413ba713f0cdd9ff1a2a9bb129ef4f6c with gcc (GCC) 8.1.0
kernel signature: dcf20159e9fc47eb8a82f106a64e0c971bc3ec6609e43e0b50a1a313bd4e388d
all runs: crashed: BUG: sleeping function called from invalid context in tap_get_minor
testing release v4.11
testing commit a351e9b9fc24e982ec2f0e76379a49826036da12 with gcc (GCC) 7.3.0
kernel signature: bbcc4be6994081c742cd924c9468b17f4a17b821979a583bd228753351874af2
all runs: crashed: BUG: sleeping function called from invalid context in tap_get_minor
testing release v4.10
testing commit c470abd4fde40ea6a0846a2beab642a578c0b8cd with gcc (GCC) 5.5.0
kernel signature: edb0245ebb138e8493a6f7a839057d9f13af0f9a1366bb42265b2affbe93dd35
all runs: OK
# git bisect start a351e9b9fc24e982ec2f0e76379a49826036da12 c470abd4fde40ea6a0846a2beab642a578c0b8cd
Bisecting: 7088 revisions left to test after this (roughly 13 steps)
[1ec5c1867af085897bb9e0f67bef3713334dbe7f] Merge tag 'gpio-v4.11-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio
testing commit 1ec5c1867af085897bb9e0f67bef3713334dbe7f with gcc (GCC) 5.5.0
kernel signature: cc0e6eb9750bb7fb6a46104b57845e638ce5a946c3e6e5231dddddf78aade9da
all runs: boot failed: WARNING in __hrtimer_init
# git bisect skip 1ec5c1867af085897bb9e0f67bef3713334dbe7f
Bisecting: 7088 revisions left to test after this (roughly 13 steps)
[a9d2d53a788a9c5bc8a7d1b4ea7857b68e221357] ixgbe: test for trust in macvlan adjustments for VF
testing commit a9d2d53a788a9c5bc8a7d1b4ea7857b68e221357 with gcc (GCC) 5.5.0
kernel signature: b62ec279562db34699f500574fa9b7664fff795441d2d846b895d8072448788d
all runs: OK
# git bisect good a9d2d53a788a9c5bc8a7d1b4ea7857b68e221357
Bisecting: 6730 revisions left to test after this (roughly 13 steps)
[28cbc335d272f293c4368abd4ac2e17e36805b79] Merge tag 'sound-4.11-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
testing commit 28cbc335d272f293c4368abd4ac2e17e36805b79 with gcc (GCC) 5.5.0
kernel signature: bf4df3c09ba516e3d093d655922fd2ed3d61b36237755aef77d3c7a63bfafcee
all runs: boot failed: WARNING in __hrtimer_init
# git bisect skip 28cbc335d272f293c4368abd4ac2e17e36805b79
Bisecting: 6730 revisions left to test after this (roughly 13 steps)
[09624645e1e85df8d68b04de6e0607d696268333] scsi: aacraid: Save adapter fib log before an IOP reset
testing commit 09624645e1e85df8d68b04de6e0607d696268333 with gcc (GCC) 5.5.0
kernel signature: 0053354403c62466a2160bc9da7aedad712010f62bfe9f3dc144e743f3369f3a
all runs: boot failed: WARNING in __hrtimer_init
# git bisect skip 09624645e1e85df8d68b04de6e0607d696268333
Bisecting: 6730 revisions left to test after this (roughly 13 steps)
[557c44be917c322860665be3d28376afa84aa936] net: ipv6: RTF_PCPU should not be settable from userspace
testing commit 557c44be917c322860665be3d28376afa84aa936 with gcc (GCC) 5.5.0
kernel signature: 46342b259eb3b345c0f9fec026ffc93aa69e37a261f1f7f614f416a2fd901abd
all runs: boot failed: divide error in irq_create_affinity_masks
# git bisect skip 557c44be917c322860665be3d28376afa84aa936
Bisecting: 6730 revisions left to test after this (roughly 13 steps)
[6228b8f2d15bc9a9b76d6b209a8b760a642fa996] userfaultfd: non-cooperative: selftest: introduce userfaultfd_open
testing commit 6228b8f2d15bc9a9b76d6b209a8b760a642fa996 with gcc (GCC) 5.5.0
kernel signature: 5eacd6725dede2c3aafc926a64a04f858b8c8d55764a8bfbe17e2da7ea78f2ef
all runs: boot failed: WARNING in __hrtimer_init
# git bisect skip 6228b8f2d15bc9a9b76d6b209a8b760a642fa996
Bisecting: 6730 revisions left to test after this (roughly 13 steps)
[1ad38fd719da87980480886f21130053c73007ac] ath10k: fix typo in addr calculation
testing commit 1ad38fd719da87980480886f21130053c73007ac with gcc (GCC) 5.5.0
kernel signature: a12c31e9884573c247613e2b0de4508ddd33960e1cd58f73190c171bb2040543
run #0: crashed: WARNING in nf_unregister_net_hook
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 1ad38fd719da87980480886f21130053c73007ac
Bisecting: 120 revisions left to test after this (roughly 7 steps)
[58fa118f3de45481df2ac2b8b41e8114cae2574d] cls_u32: don't bother explicitly initializing ->divisor to zero
testing commit 58fa118f3de45481df2ac2b8b41e8114cae2574d with gcc (GCC) 5.5.0
kernel signature: eb94747d9e4b38e378fb5159dfc00ed8de4499b587d7279ce31165ac70de737c
all runs: OK
# git bisect good 58fa118f3de45481df2ac2b8b41e8114cae2574d
Bisecting: 60 revisions left to test after this (roughly 6 steps)
[06c1c049721a995dee2829ad13b24aaf5d7c5cce] bpf: allow helpers access to variable memory
testing commit 06c1c049721a995dee2829ad13b24aaf5d7c5cce with gcc (GCC) 5.5.0
kernel signature: 7bd394d104b35373a8a24526b7a20491bb579ec3de693bffa85d538cc497aff1
run #0: crashed: WARNING in nf_unregister_net_hook
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 06c1c049721a995dee2829ad13b24aaf5d7c5cce
Bisecting: 29 revisions left to test after this (roughly 5 steps)
[8d9ba388f35b3c681975a6b3f6ba60bb42c98f8d] Revert "icmp: avoid allocating large struct on stack"
testing commit 8d9ba388f35b3c681975a6b3f6ba60bb42c98f8d with gcc (GCC) 5.5.0
kernel signature: ab78591aadfe1b9a386e3fec86a4554dd75772cfc4647fae7e1e46c4db6f5607
all runs: OK
# git bisect good 8d9ba388f35b3c681975a6b3f6ba60bb42c98f8d
Bisecting: 14 revisions left to test after this (roughly 4 steps)
[a046d57da19f812216f393e7c535f5858f793ac3] smc: CLC handshake (incl. preparation steps)
testing commit a046d57da19f812216f393e7c535f5858f793ac3 with gcc (GCC) 5.5.0
kernel signature: 30236cd522e6af90ab79f3737e8e22f25099c8417dd4770dd15bcd3986e5acfc
run #0: crashed: WARNING in nf_unregister_net_hook
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad a046d57da19f812216f393e7c535f5858f793ac3
Bisecting: 6 revisions left to test after this (roughly 3 steps)
[159c2a90442c6d5ad0b3d085e348979cd9a0ac1b] sh_eth: enable wake-on-lan for sh7734
testing commit 159c2a90442c6d5ad0b3d085e348979cd9a0ac1b with gcc (GCC) 5.5.0
kernel signature: 6fda489e4a279e1ffa786a2059f2a8814c939c1e79a8e4e6f2f20374e13b1a37
run #0: crashed: WARNING in nf_unregister_net_hook
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 159c2a90442c6d5ad0b3d085e348979cd9a0ac1b
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[6dcf45e514974a1ff10755015b5e06746a033e5f] sh_eth: use correct name for ECMR_MPDE bit
testing commit 6dcf45e514974a1ff10755015b5e06746a033e5f with gcc (GCC) 5.5.0
kernel signature: 5afb3f62e5d60c5f7f71a2c7e3c317c2df1533f22860c114cef2396dd66214fb
run #0: crashed: general protection fault in batadv_iv_ogm_queue_add
run #1: crashed: WARNING in nf_unregister_net_hook
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 6dcf45e514974a1ff10755015b5e06746a033e5f
Bisecting: 1 revision left to test after this (roughly 1 step)
[7ba91ecb16824f74ba4fcbc4e88cd4d24a839b25] net: for rate-limited ICMP replies save one atomic operation
testing commit 7ba91ecb16824f74ba4fcbc4e88cd4d24a839b25 with gcc (GCC) 5.5.0
kernel signature: 897682cff21e2bfba122e4ea5e02401f6c00261d5d338610c2825852ab2d5711
all runs: OK
# git bisect good 7ba91ecb16824f74ba4fcbc4e88cd4d24a839b25
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[9f2f27a9a518cdcd724bd360a1e25a10e7cd2f82] Merge branch 'icmp-reply-optimize'
testing commit 9f2f27a9a518cdcd724bd360a1e25a10e7cd2f82 with gcc (GCC) 5.5.0
kernel signature: 733402dc238ca57c03b8207e45dbb5af50b3b5c02e9c8d67fa7befed7e8c27d2
all runs: OK
# git bisect good 9f2f27a9a518cdcd724bd360a1e25a10e7cd2f82
6dcf45e514974a1ff10755015b5e06746a033e5f is the first bad commit
commit 6dcf45e514974a1ff10755015b5e06746a033e5f
Author: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
Date:   Mon Jan 9 16:34:04 2017 +0100

    sh_eth: use correct name for ECMR_MPDE bit
    
    This bit was wrongly named due to a typo, Sergei checked the SH7734/63
    manuals and this bit should be named MPDE.
    
    Suggested-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 drivers/net/ethernet/renesas/sh_eth.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
culprit signature: 5afb3f62e5d60c5f7f71a2c7e3c317c2df1533f22860c114cef2396dd66214fb
parent  signature: 733402dc238ca57c03b8207e45dbb5af50b3b5c02e9c8d67fa7befed7e8c27d2
revisions tested: 36, total time: 7h46m36.151821393s (build: 3h10m46.191591571s, test: 4h31m12.206215679s)
first bad commit: 6dcf45e514974a1ff10755015b5e06746a033e5f sh_eth: use correct name for ECMR_MPDE bit
recipients (to): ["davem@davemloft.net" "linux-renesas-soc@vger.kernel.org" "netdev@vger.kernel.org" "niklas.soderlund+renesas@ragnatech.se"]
recipients (cc): ["linux-kernel@vger.kernel.org" "sergei.shtylyov@cogentembedded.com"]
crash: WARNING in nf_unregister_net_hook
team0 (unregistering): Port device team_slave_0 removed
bond0 (unregistering): Releasing backup interface bond_slave_1
bond0 (unregistering): Releasing backup interface bond_slave_0
bond0 (unregistering): Released all slaves
------------[ cut here ]------------
WARNING: CPU: 1 PID: 2307 at net/netfilter/core.c:147 nf_unregister_net_hook+0x292/0x3c0 net/netfilter/core.c:147
nf_unregister_net_hook: hook not found!
Kernel panic - not syncing: panic_on_warn set ...

CPU: 1 PID: 2307 Comm: kworker/u4:3 Not tainted 4.10.0-rc3-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Workqueue: netns cleanup_net
Call Trace:
 __dump_stack lib/dump_stack.c:15 [inline]
 dump_stack+0x136/0x1d4 lib/dump_stack.c:51
 panic+0x1b6/0x358 kernel/panic.c:179
 __warn+0x18d/0x1b0 kernel/panic.c:539
 warn_slowpath_fmt+0x92/0xb0 kernel/panic.c:562
 nf_unregister_net_hook+0x292/0x3c0 net/netfilter/core.c:147
 nf_unregister_hook_list net/netfilter/core.c:443 [inline]
 netfilter_net_exit+0x36/0xa0 net/netfilter/core.c:475
 ops_exit_list.isra.0+0x8e/0x120 net/core/net_namespace.c:139
 cleanup_net+0x38e/0x7d0 net/core/net_namespace.c:461
 process_one_work+0x685/0x1660 kernel/workqueue.c:2098
 worker_thread+0xe1/0x1110 kernel/workqueue.c:2232
 kthread+0x2c9/0x3d0 kernel/kthread.c:227
 ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:427
Kernel Offset: disabled

