bisecting cause commit starting from ad347abe4a9876b1f65f408ab467137e88f77eb4
building syzkaller on 1ba81399e2d03b53a7e631c4ab05f25af1fb1911
testing commit ad347abe4a9876b1f65f408ab467137e88f77eb4 with gcc (GCC) 10.2.1 20210217
kernel signature: c2d8cc2b680573b1fe5880a753a4343e3571c3459ec88ea869c66fc676422b4e
all runs: crashed: kernel BUG in ext4_writepages
testing release v5.12
testing commit 9f4ad9e425a1d3b6a34617b8ea226d56a119a717 with gcc (GCC) 10.2.1 20210217
kernel signature: 20a3195b0c2adea39c30d2e9f830a6fa425a34f031f28cd84a5fc4bf09ce8f4d
all runs: crashed: kernel BUG in ext4_writepages
testing release v5.11
testing commit f40ddce88593482919761f74910f42f4b84c004b with gcc (GCC) 10.2.1 20210217
kernel signature: 22b26ae1e3be417e2ad324e47433a262e845b6471dfc09f4fa2f647b3330df8e
all runs: crashed: kernel BUG in ext4_writepages
testing release v5.10
testing commit 2c85ebc57b3e1817b6ce1a6b703928e113a90442 with gcc (GCC) 10.2.1 20210217
kernel signature: 8f55ba93fd53951cac9b68b979c728becbef461543abacbe99727324ff41baf6
all runs: crashed: kernel BUG in ext4_writepages
testing release v5.9
testing commit bbf5c979011a099af5dc76498918ed7df445635b with gcc (GCC) 10.2.1 20210217
kernel signature: f654d07eeb7c456b884d4afbd5bc4d393d1b1677ed42327eee0eaef482a1d4de
all runs: crashed: kernel BUG in ext4_writepages
testing release v5.8
testing commit bcf876870b95592b52519ed4aafcf9d95999bc9c with gcc (GCC) 8.4.1 20210217
kernel signature: 1063ebaf54671db7804acf12269942e9a5933d00bfb78bb5cf898a218f3c1d07
all runs: crashed: kernel BUG in ext4_writepages
testing release v5.7
testing commit 3d77e6a8804abcc0504c904bd6e5cdf3a5cf8162 with gcc (GCC) 8.4.1 20210217
kernel signature: 3856a09b3d94850025e3ae49dd0f33b972955333e09df445983a6a278d85997d
all runs: crashed: kernel BUG in ext4_writepages
testing release v5.6
testing commit 7111951b8d4973bda27ff663f2cf18b663d15b48 with gcc (GCC) 8.4.1 20210217
kernel signature: a3b93acd1315ac27fd28df3f64d6ec371b03ab2c3dca6caf01eeb51039157802
all runs: crashed: kernel BUG in ext4_writepages
testing release v5.5
testing commit d5226fa6dbae0569ee43ecfc08bdcd6770fc4755 with gcc (GCC) 8.4.1 20210217
kernel signature: 56b75590080ebce41771eb20fb3a18a21250479d609f5cd866a9e9cf93705477
all runs: crashed: kernel BUG in ext4_writepages
testing release v5.4
testing commit 219d54332a09e8d8741c1e1982f5eae56099de85 with gcc (GCC) 8.4.1 20210217
kernel signature: c6858008ba2dd87e1e0dfa3f7b77c43b09b0dc43a2a0142524db4f19e9503c6e
all runs: crashed: kernel BUG in ext4_writepages
testing release v5.3
testing commit 4d856f72c10ecb060868ed10ff1b1453943fc6c8 with gcc (GCC) 8.4.1 20210217
kernel signature: aae18b99c108d4b86fb7c39080c3a8373862416e546d19d54d8a47dcb2701455
all runs: crashed: kernel BUG in ext4_writepages
testing release v5.2
testing commit 0ecfebd2b52404ae0c54a878c872bb93363ada36 with gcc (GCC) 8.4.1 20210217
kernel signature: e13f671b39135f0fd02c29412f7240f2d07a062c4a49e605a3f48631956d18cb
all runs: OK
# git bisect start 4d856f72c10ecb060868ed10ff1b1453943fc6c8 0ecfebd2b52404ae0c54a878c872bb93363ada36
Bisecting: 7848 revisions left to test after this (roughly 13 steps)
[43c95d3694cc448fdf50bd53b7ff3a5bb4655883] Merge tag 'pinctrl-v5.3-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl

testing commit 43c95d3694cc448fdf50bd53b7ff3a5bb4655883 with gcc (GCC) 8.4.1 20210217
kernel signature: eabc8bbc5dcf609fab110f03d71d6bf92f6277515c995067afc0f2a5d60231f3
all runs: crashed: kernel BUG in ext4_writepages
# git bisect bad 43c95d3694cc448fdf50bd53b7ff3a5bb4655883
Bisecting: 4619 revisions left to test after this (roughly 12 steps)
[8f6ccf6159aed1f04c6d179f61f6fb2691261e84] Merge tag 'clone3-v5.3' of git://git.kernel.org/pub/scm/linux/kernel/git/brauner/linux

testing commit 8f6ccf6159aed1f04c6d179f61f6fb2691261e84 with gcc (GCC) 8.4.1 20210217
kernel signature: 5cde3d358e6e31f8efcca9abd8ba707b4a789878c8431b21bec8ddb40ad6843a
all runs: crashed: kernel BUG in ext4_writepages
# git bisect bad 8f6ccf6159aed1f04c6d179f61f6fb2691261e84
Bisecting: 1595 revisions left to test after this (roughly 11 steps)
[ed63b9c873601ca113da5c7b1745e3946493e9f3] Merge tag 'media/v5.3-1' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media

testing commit ed63b9c873601ca113da5c7b1745e3946493e9f3 with gcc (GCC) 8.4.1 20210217
kernel signature: 489f953c829e92bdd1d66f1eab4f4ec3032140e73c5a05953ec0dde4cb8ae92b
run #0: OK
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #8: OK
run #9: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
reproducer seems to be flaky
# git bisect bad ed63b9c873601ca113da5c7b1745e3946493e9f3
Bisecting: 849 revisions left to test after this (roughly 10 steps)
[4d2fa8b44b891f0da5ceda3e5a1402ccf0ab6f26] Merge branch 'linus' of git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6

testing commit 4d2fa8b44b891f0da5ceda3e5a1402ccf0ab6f26 with gcc (GCC) 8.4.1 20210217
kernel signature: db92b54321613cb58594ff6599e5df01c4839c803e7addc5aa00f3d0ad8b36ab
run #0: OK
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #6: OK
run #7: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #8: OK
run #9: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #10: OK
run #11: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #12: OK
run #13: OK
run #14: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #15: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #16: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #17: OK
run #18: OK
run #19: OK
# git bisect bad 4d2fa8b44b891f0da5ceda3e5a1402ccf0ab6f26
Bisecting: 414 revisions left to test after this (roughly 9 steps)
[46f1ec23a46940846f86a91c46f7119d8a8b5de1] Merge branch 'core-rcu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip

testing commit 46f1ec23a46940846f86a91c46f7119d8a8b5de1 with gcc (GCC) 8.4.1 20210217
kernel signature: dfda2ba7e8733efa75f7f97da6a14bf13bf0e460d485e349c092ca3c1878a101
all runs: OK
# git bisect good 46f1ec23a46940846f86a91c46f7119d8a8b5de1
Bisecting: 210 revisions left to test after this (roughly 8 steps)
[222a21d29521d144f3dd7a0bc4d4020e448f0126] Merge branch 'x86-topology-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip

testing commit 222a21d29521d144f3dd7a0bc4d4020e448f0126 with gcc (GCC) 8.4.1 20210217
kernel signature: 3765876c9bc36bab9ef402f2ebc53775a5fc1d40917ebf82e015bcb836762816
run #0: OK
run #1: OK
run #2: OK
run #3: OK
run #4: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #5: OK
run #6: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #7: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #16: OK
run #17: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #18: OK
run #19: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
# git bisect bad 222a21d29521d144f3dd7a0bc4d4020e448f0126
Bisecting: 102 revisions left to test after this (roughly 7 steps)
[090bc5a2a91499c1fd64b78d125daa6ca5531d38] Merge branch 'ras-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip

testing commit 090bc5a2a91499c1fd64b78d125daa6ca5531d38 with gcc (GCC) 8.4.1 20210217
kernel signature: 20247763f040077da8fb091db956448929a7b84ad99443cd6009328b3d1f7a1c
run #0: OK
run #1: OK
run #2: OK
run #3: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #4: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #5: OK
run #6: OK
run #7: OK
run #8: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #9: OK
run #10: OK
run #11: OK
run #12: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #13: OK
run #14: OK
run #15: OK
run #16: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #17: OK
run #18: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #19: OK
# git bisect bad 090bc5a2a91499c1fd64b78d125daa6ca5531d38
Bisecting: 50 revisions left to test after this (roughly 6 steps)
[410df0c5748f6c5a53847d2acb163dc7cd8b6c51] Merge tag 'v5.2-rc5' into locking/core, to pick up fixes

testing commit 410df0c5748f6c5a53847d2acb163dc7cd8b6c51 with gcc (GCC) 8.4.1 20210217
kernel signature: 22cb3c523e662f5924eac9d3246a63ca833a48a6a54c76254ddaa15c4dd3f2bc
run #0: OK
run #1: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #2: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #3: OK
run #4: OK
run #5: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #6: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #7: OK
run #8: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #9: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #10: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #11: OK
run #12: OK
run #13: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #14: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #15: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #16: OK
run #17: OK
run #18: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #19: OK
# git bisect bad 410df0c5748f6c5a53847d2acb163dc7cd8b6c51
Bisecting: 24 revisions left to test after this (roughly 5 steps)
[091806515124b20f8cff7927b4b7ff399483b109] locking/lockdep: Consolidate lock usage bit initialization

testing commit 091806515124b20f8cff7927b4b7ff399483b109 with gcc (GCC) 8.4.1 20210217
kernel signature: 501ffb89a60ddfe87a2a4ded1fe5fdaacc666c21d74bae796da0049a27b60512
run #0: OK
run #1: OK
run #2: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #3: OK
run #4: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #5: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #11: OK
run #12: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #13: OK
run #14: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #15: OK
run #16: OK
run #17: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #18: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #19: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
# git bisect bad 091806515124b20f8cff7927b4b7ff399483b109
Bisecting: 12 revisions left to test after this (roughly 4 steps)
[f6ec8829ac9d59b637366c13038f15d6f6156fe1] locking/lockdep: Define INITIAL_CHAIN_KEY for chain keys to start with

testing commit f6ec8829ac9d59b637366c13038f15d6f6156fe1 with gcc (GCC) 8.4.1 20210217
kernel signature: f9f0907e285b7a3946558810f451103971c25f2757e0138ef555e7ad3708f7ef
all runs: OK
# git bisect good f6ec8829ac9d59b637366c13038f15d6f6156fe1
Bisecting: 6 revisions left to test after this (roughly 3 steps)
[77a806922cfdebcf3ae89d31a8b592a7f7fbe537] locking/lockdep: Avoid constant checks in __bfs by using offset reference

testing commit 77a806922cfdebcf3ae89d31a8b592a7f7fbe537 with gcc (GCC) 8.4.1 20210217
kernel signature: b2f3f14c93b8f9d89af3406e5ebe9cca09f9aad016c8e6be16115bf96017c232
all runs: OK
# git bisect good 77a806922cfdebcf3ae89d31a8b592a7f7fbe537
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[4609c4f963f353613812f999bb027aac795bcde8] locking/lockdep: Remove redundant argument in check_deadlock

testing commit 4609c4f963f353613812f999bb027aac795bcde8 with gcc (GCC) 8.4.1 20210217
kernel signature: 11f0babb2ba2415923d751e3eb1ce21f51875bc46113b5d6f6b6f7c905cff881
all runs: OK
# git bisect good 4609c4f963f353613812f999bb027aac795bcde8
Bisecting: 1 revision left to test after this (roughly 1 step)
[8c2c2b449aa50463ba4cc1f33cdfc98750ed03ab] locking/lockdep: Refactorize check_noncircular and check_redundant

testing commit 8c2c2b449aa50463ba4cc1f33cdfc98750ed03ab with gcc (GCC) 8.4.1 20210217
kernel signature: f121117745cf8676059367441897b23a2cc1625cab66a85cf65f1e2314d5ca46
all runs: OK
# git bisect good 8c2c2b449aa50463ba4cc1f33cdfc98750ed03ab
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[68e9dc29f8f42c79d2a3755223ed910ce36b4ae2] locking/lockdep: Check redundant dependency only when CONFIG_LOCKDEP_SMALL

testing commit 68e9dc29f8f42c79d2a3755223ed910ce36b4ae2 with gcc (GCC) 8.4.1 20210217
kernel signature: 1e3f36fe1b86a881436e73df65b582f9688cf5fb6a68387bb94553744e3941d5
run #0: OK
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #6: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #7: OK
run #8: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #9: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #10: OK
run #11: OK
run #12: OK
run #13: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #14: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #15: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #16: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #17: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #18: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
run #19: crashed: BUG: MAX_STACK_TRACE_ENTRIES too low!
# git bisect bad 68e9dc29f8f42c79d2a3755223ed910ce36b4ae2
68e9dc29f8f42c79d2a3755223ed910ce36b4ae2 is the first bad commit
commit 68e9dc29f8f42c79d2a3755223ed910ce36b4ae2
Author: Yuyang Du <duyuyang@gmail.com>
Date:   Mon May 6 16:19:36 2019 +0800

    locking/lockdep: Check redundant dependency only when CONFIG_LOCKDEP_SMALL
    
    As Peter has put it all sound and complete for the cause, I simply quote:
    
    "It (check_redundant) was added for cross-release (which has since been
    reverted) which would generate a lot of redundant links (IIRC) but
    having it makes the reports more convoluted -- basically, if we had an
    A-B-C relation, then A-C will not be added to the graph because it is
    already covered. This then means any report will include B, even though
    a shorter cycle might have been possible."
    
    This would increase the number of direct dependencies. For a simple workload
    (make clean; reboot; make vmlinux -j8), the data looks like this:
    
     CONFIG_LOCKDEP_SMALL: direct dependencies:                  6926
    
    !CONFIG_LOCKDEP_SMALL: direct dependencies:                  9052    (+30.7%)
    
    Suggested-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Yuyang Du <duyuyang@gmail.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: bvanassche@acm.org
    Cc: frederic@kernel.org
    Cc: ming.lei@redhat.com
    Cc: will.deacon@arm.com
    Link: https://lkml.kernel.org/r/20190506081939.74287-21-duyuyang@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

 kernel/locking/lockdep.c | 4 ++++
 1 file changed, 4 insertions(+)

culprit signature: 1e3f36fe1b86a881436e73df65b582f9688cf5fb6a68387bb94553744e3941d5
parent  signature: f121117745cf8676059367441897b23a2cc1625cab66a85cf65f1e2314d5ca46
Reproducer flagged being flaky
revisions tested: 26, total time: 5h36m24.323708413s (build: 2h53m44.97046557s, test: 2h38m16.721657986s)
first bad commit: 68e9dc29f8f42c79d2a3755223ed910ce36b4ae2 locking/lockdep: Check redundant dependency only when CONFIG_LOCKDEP_SMALL
recipients (to): ["duyuyang@gmail.com" "mingo@kernel.org" "peterz@infradead.org"]
recipients (cc): []
crash: BUG: MAX_STACK_TRACE_ENTRIES too low!
BUG: MAX_STACK_TRACE_ENTRIES too low!
turning off the locking correctness validator.
CPU: 1 PID: 9003 Comm: syz-executor.2 Not tainted 5.2.0-rc3-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Call Trace:
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x86/0xca lib/dump_stack.c:113
 save_trace kernel/locking/lockdep.c:471 [inline]
 save_trace.isra.10.cold.23+0x13/0x18 kernel/locking/lockdep.c:456
 check_prev_add kernel/locking/lockdep.c:2442 [inline]
 check_prevs_add kernel/locking/lockdep.c:2502 [inline]
 validate_chain kernel/locking/lockdep.c:2892 [inline]
 __lock_acquire+0x457d/0x5020 kernel/locking/lockdep.c:3886
 lock_acquire+0x111/0x2d0 kernel/locking/lockdep.c:4402
 flush_workqueue+0xf2/0x1360 kernel/workqueue.c:2774
 ext4_sync_fs+0x11d/0x770 fs/ext4/super.c:5116
 __sync_filesystem fs/sync.c:39 [inline]
 sync_filesystem+0xd4/0x200 fs/sync.c:64
 generic_shutdown_super+0x69/0x330 fs/super.c:444
 kill_block_super+0x96/0xe0 fs/super.c:1373
 deactivate_locked_super+0x77/0xd0 fs/super.c:331
 deactivate_super fs/super.c:362 [inline]
 deactivate_super+0x13f/0x160 fs/super.c:358
 cleanup_mnt+0xa3/0x140 fs/namespace.c:1120
 __cleanup_mnt+0xd/0x10 fs/namespace.c:1127
 task_work_run+0x108/0x180 kernel/task_work.c:113
 tracehook_notify_resume include/linux/tracehook.h:185 [inline]
 exit_to_usermode_loop+0x129/0x150 arch/x86/entry/common.c:168
 prepare_exit_to_usermode arch/x86/entry/common.c:199 [inline]
 syscall_return_slowpath arch/x86/entry/common.c:279 [inline]
 do_syscall_64+0x3e1/0x480 arch/x86/entry/common.c:304
 entry_SYSCALL_64_after_hwframe+0x49/0xbe
RIP: 0033:0x467a37
Code: ff d0 48 89 c7 b8 3c 00 00 00 0f 05 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48 83 c8 ff c3 66 0f 1f 44 00 00 b8 a6 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007ffdd9fe3e28 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6
RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000467a37
RDX: 00007ffdd9fe3efb RSI: 0000000000000002 RDI: 00007ffdd9fe3ef0
RBP: 00007ffdd9fe3ef0 R08: 00000000ffffffff R09: 00007ffdd9fe3cc0
R10: 000055555686f8e3 R11: 0000000000000246 R12: 00000000004bee70
R13: 00007ffdd9fe4fc0 R14: 000055555686f810 R15: 00007ffdd9fe5000

