bisecting cause commit starting from 9a9aa07ae18be3b77ba132a6eff3a92c9b83e016
building syzkaller on 06c27ff56b460864b5195bc0668d1d582df3cbf8
testing commit 9a9aa07ae18be3b77ba132a6eff3a92c9b83e016 with gcc (GCC) 10.2.1 20210217
kernel signature: 739ad82bbb9282ad018eab82db41d1b49f7693efb3353d8d80712a806c1fb4d7
run #0: crashed: BUG: sleeping function called from invalid context in __alloc_skb
run #1: crashed: BUG: sleeping function called from invalid context in __alloc_skb
run #2: crashed: BUG: sleeping function called from invalid context in __alloc_skb
run #3: crashed: BUG: sleeping function called from invalid context in __alloc_skb
run #4: crashed: BUG: sleeping function called from invalid context in __alloc_skb
run #5: crashed: BUG: sleeping function called from invalid context in __alloc_skb
run #6: crashed: BUG: sleeping function called from invalid context in __alloc_skb
run #7: crashed: BUG: sleeping function called from invalid context in __alloc_skb
run #8: crashed: BUG: sleeping function called from invalid context in __alloc_skb
run #9: crashed: BUG: sleeping function called from invalid context in __alloc_skb
run #10: crashed: BUG: sleeping function called from invalid context in __alloc_skb
run #11: crashed: BUG: sleeping function called from invalid context in __alloc_skb
run #12: crashed: BUG: sleeping function called from invalid context in corrupted
run #13: crashed: BUG: sleeping function called from invalid context in __alloc_skb
run #14: crashed: BUG: sleeping function called from invalid context in __alloc_skb
run #15: crashed: BUG: sleeping function called from invalid context in __alloc_skb
run #16: crashed: BUG: sleeping function called from invalid context in __alloc_skb
run #17: crashed: BUG: sleeping function called from invalid context in __alloc_skb
run #18: crashed: BUG: sleeping function called from invalid context in __alloc_skb
run #19: crashed: BUG: sleeping function called from invalid context in __alloc_skb
testing release v5.12
testing commit 9f4ad9e425a1d3b6a34617b8ea226d56a119a717 with gcc (GCC) 10.2.1 20210217
kernel signature: 1109f9be8385a1b187df831786445ddf0445ad7ec30cbcbf6eddc2eec6f9ddc3
all runs: OK
# git bisect start 9a9aa07ae18be3b77ba132a6eff3a92c9b83e016 9f4ad9e425a1d3b6a34617b8ea226d56a119a717
Bisecting: 8109 revisions left to test after this (roughly 13 steps)
[238da4d004856ac5f832899f6f3fa27c0102381f] Merge tag 'vfio-v5.13-rc1' of git://github.com/awilliam/linux-vfio

testing commit 238da4d004856ac5f832899f6f3fa27c0102381f with gcc (GCC) 10.2.1 20210217
kernel signature: 4e7f1ec97f5da44f750665fa14b95b36439f39c93075b5449b624195b4018ed7
all runs: OK
# git bisect good 238da4d004856ac5f832899f6f3fa27c0102381f
Bisecting: 4245 revisions left to test after this (roughly 12 steps)
[95275402f66e88c56144a2d859c13594b651b29b] Merge tag 'drm-next-2021-04-30' of git://anongit.freedesktop.org/drm/drm

testing commit 95275402f66e88c56144a2d859c13594b651b29b with gcc (GCC) 10.2.1 20210217
kernel signature: ea9d891f3bac259d5a0fc3de70af3fa68eb0453401e48f734758f889233b319b
run #0: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #1: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #2: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #3: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #4: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #5: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #6: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #7: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #8: crashed: WARNING in __nf_unregister_net_hook
run #9: crashed: WARNING in __nf_unregister_net_hook
# git bisect bad 95275402f66e88c56144a2d859c13594b651b29b
Bisecting: 1918 revisions left to test after this (roughly 11 steps)
[197b9c152badc4003b1e10837f4536cb66a50f3c] Merge tag 'iwlwifi-next-for-kalle-2021-04-12-v2' of git://git.kernel.org/pub/scm/linux/kernel/git/iwlwifi/iwlwifi-next

testing commit 197b9c152badc4003b1e10837f4536cb66a50f3c with gcc (GCC) 10.2.1 20210217
kernel signature: febd2d20a982da2f139d77496d278ddab895151b347bade0d50719b4b8bba4ce
all runs: OK
# git bisect good 197b9c152badc4003b1e10837f4536cb66a50f3c
Bisecting: 1176 revisions left to test after this (roughly 10 steps)
[4a52dd8fefb45626dace70a63c0738dbd83b7edb] net: selftest: fix build issue if INET is disabled

testing commit 4a52dd8fefb45626dace70a63c0738dbd83b7edb with gcc (GCC) 10.2.1 20210217
kernel signature: 0c34c274775417dbd57d7a9e67cd0428fac9cc2f6c8f6ba5e99883bb932acc01
run #0: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #1: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #2: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #3: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #4: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #5: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #6: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #7: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #8: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #9: crashed: WARNING in __nf_unregister_net_hook
# git bisect bad 4a52dd8fefb45626dace70a63c0738dbd83b7edb
Bisecting: 370 revisions left to test after this (roughly 9 steps)
[dc5d5f9d3fe4d0c26b4e4beb25d056ffcc5fbf02] mt76: mt7921: enable sw interrupts

testing commit dc5d5f9d3fe4d0c26b4e4beb25d056ffcc5fbf02 with gcc (GCC) 10.2.1 20210217
kernel signature: 478a3eaacebcb6254fba1b3b0b2983a29ac24171be09992f4fbe06c5c6e60d50
all runs: OK
# git bisect good dc5d5f9d3fe4d0c26b4e4beb25d056ffcc5fbf02
Bisecting: 169 revisions left to test after this (roughly 8 steps)
[5f6c2f536de648ac31564d8c413337ff4f7af93a] Merge git://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next

testing commit 5f6c2f536de648ac31564d8c413337ff4f7af93a with gcc (GCC) 10.2.1 20210217
kernel signature: 3d78cc603c01c47766738db859b95e4f8c7fe298f2aeda20f210c2e75b17a8ef
all runs: OK
# git bisect good 5f6c2f536de648ac31564d8c413337ff4f7af93a
Bisecting: 83 revisions left to test after this (roughly 6 steps)
[eb43c081a6df85e3119226b932ddb9a9572b26e4] Merge git://git.kernel.org/pub/scm/linux/kernel/git/pablo/nf-next

testing commit eb43c081a6df85e3119226b932ddb9a9572b26e4 with gcc (GCC) 10.2.1 20210217
kernel signature: 8017715088a3e07add3a1d760b09eb4554982ee54ca42c62bf2b724157898bf1
run #0: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #1: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #2: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #3: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #4: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #5: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #6: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #7: crashed: WARNING in __nf_unregister_net_hook
run #8: crashed: WARNING in __nf_unregister_net_hook
run #9: crashed: kernel panic: panic_on_warn set
# git bisect bad eb43c081a6df85e3119226b932ddb9a9572b26e4
Bisecting: 53 revisions left to test after this (roughly 6 steps)
[bbd6f0a948139970f4a615dff189d9a503681a39] bnxt_en: Fix RX consumer index logic in the error path.

testing commit bbd6f0a948139970f4a615dff189d9a503681a39 with gcc (GCC) 10.2.1 20210217
kernel signature: 25e1f07e4a04ff61650084f74acddd24c8f2ef30f40a3d064a402b199a222df9
all runs: OK
# git bisect good bbd6f0a948139970f4a615dff189d9a503681a39
Bisecting: 26 revisions left to test after this (roughly 5 steps)
[7fbf359bb2c19c824cbb1954020680824f6ee5a5] bnxt_en: Add PCI IDs for Hyper-V VF devices.

testing commit 7fbf359bb2c19c824cbb1954020680824f6ee5a5 with gcc (GCC) 10.2.1 20210217
kernel signature: 1f26e29208d93ea55eff2ab3f6e59a6611c562c58a8c3da618b7d73207fe74c6
all runs: OK
# git bisect good 7fbf359bb2c19c824cbb1954020680824f6ee5a5
Bisecting: 13 revisions left to test after this (roughly 4 steps)
[f9006acc8dfe59e25aa75729728ac57a8d84fc32] netfilter: arp_tables: pass table pointer via nf_hook_ops

testing commit f9006acc8dfe59e25aa75729728ac57a8d84fc32 with gcc (GCC) 10.2.1 20210217
kernel signature: 8a7500cd8700038aea4df8c3bbe7cb3c055012b3ad55a9b0ceb7aa3af1ba69aa
run #0: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #1: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #2: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #3: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #4: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #5: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #6: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #7: crashed: WARNING in __nf_unregister_net_hook
run #8: basic kernel testing failed: WARNING in __nf_unregister_net_hook
run #9: basic kernel testing failed: WARNING in __nf_unregister_net_hook
# git bisect bad f9006acc8dfe59e25aa75729728ac57a8d84fc32
Bisecting: 6 revisions left to test after this (roughly 3 steps)
[1ef4d6d1af2d0c0c7c9b391365a3894bea291e34] netfilter: x_tables: add xt_find_table

testing commit 1ef4d6d1af2d0c0c7c9b391365a3894bea291e34 with gcc (GCC) 10.2.1 20210217
kernel signature: 8a7cc3d0170775c0820d475ad57d1e82900aa6e12aa83be8f38316953fd4e839
all runs: OK
# git bisect good 1ef4d6d1af2d0c0c7c9b391365a3894bea291e34
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[4d705399191c3cfe1264588b3a4a8115e6c3b161] netfilter: arptables: unregister the tables by name

testing commit 4d705399191c3cfe1264588b3a4a8115e6c3b161 with gcc (GCC) 10.2.1 20210217
kernel signature: c45d59ebbc9aa60adc328737e39c70730eaf672637bc637805f1c33833e64dd2
all runs: OK
# git bisect good 4d705399191c3cfe1264588b3a4a8115e6c3b161
Bisecting: 1 revision left to test after this (roughly 1 step)
[a4aeafa28cf706f65f763026c26d83e7e8c96592] netfilter: xt_nat: pass table to hookfn

testing commit a4aeafa28cf706f65f763026c26d83e7e8c96592 with gcc (GCC) 10.2.1 20210217
kernel signature: 03c3de9337062ae8b07e828e39752dc203ec752a5e74709ce3c3dfabc92308f9
all runs: OK
# git bisect good a4aeafa28cf706f65f763026c26d83e7e8c96592
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[ae689334225ff0e4ef112459ecd24aea932c2b00] netfilter: ip_tables: pass table pointer via nf_hook_ops

testing commit ae689334225ff0e4ef112459ecd24aea932c2b00 with gcc (GCC) 10.2.1 20210217
kernel signature: e352781728298da5142313d045c6c3eafdda5cfbf0cc5616c0acee63a103c7c9
all runs: OK
# git bisect good ae689334225ff0e4ef112459ecd24aea932c2b00
f9006acc8dfe59e25aa75729728ac57a8d84fc32 is the first bad commit
commit f9006acc8dfe59e25aa75729728ac57a8d84fc32
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Apr 21 09:51:08 2021 +0200

    netfilter: arp_tables: pass table pointer via nf_hook_ops
    
    Same change as previous patch.  Only difference:
    no need to handle NULL template_ops parameter, the only caller
    (arptable_filter) always passes non-NULL argument.
    
    This removes all remaining accesses to net->ipv4.arptable_filter.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

 include/linux/netfilter_arp/arp_tables.h |  2 +-
 net/ipv4/netfilter/arp_tables.c          | 43 +++++++++++++++++++++-----------
 net/ipv4/netfilter/arptable_filter.c     |  6 ++---
 3 files changed, 32 insertions(+), 19 deletions(-)

culprit signature: 8a7500cd8700038aea4df8c3bbe7cb3c055012b3ad55a9b0ceb7aa3af1ba69aa
parent  signature: e352781728298da5142313d045c6c3eafdda5cfbf0cc5616c0acee63a103c7c9
revisions tested: 16, total time: 3h52m30.601245777s (build: 1h54m31.226708386s, test: 1h55m35.696268547s)
first bad commit: f9006acc8dfe59e25aa75729728ac57a8d84fc32 netfilter: arp_tables: pass table pointer via nf_hook_ops
recipients (to): ["coreteam@netfilter.org" "davem@davemloft.net" "dsahern@kernel.org" "fw@strlen.de" "fw@strlen.de" "kadlec@netfilter.org" "kuba@kernel.org" "netdev@vger.kernel.org" "netfilter-devel@vger.kernel.org" "pablo@netfilter.org" "pablo@netfilter.org" "yoshfuji@linux-ipv6.org"]
recipients (cc): ["linux-kernel@vger.kernel.org"]
crash: WARNING in __nf_unregister_net_hook
------------[ cut here ]------------
hook not found, pf 3 num 0
WARNING: CPU: 1 PID: 9 at net/netfilter/core.c:480 __nf_unregister_net_hook+0x17a/0x560 net/netfilter/core.c:480
Modules linked in:
CPU: 1 PID: 9 Comm: kworker/u4:0 Not tainted 5.12.0-rc7-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Workqueue: netns cleanup_net
RIP: 0010:__nf_unregister_net_hook+0x17a/0x560 net/netfilter/core.c:480
Code: 89 f0 83 e0 07 83 c0 03 38 d0 7c 08 84 d2 0f 85 a7 03 00 00 8b 53 1c 44 89 e6 48 c7 c7 20 bc 9e 89 4c 89 04 24 e8 fe 3a 62 01 <0f> 0b 4c 8b 04 24 e9 ba 00 00 00 48 89 ea 48 c1 e2 04 49 8d 7c 10
RSP: 0018:ffffc90000ce7bf0 EFLAGS: 00010282
RAX: 0000000000000000 RBX: ffff888021b54b00 RCX: 0000000000000000
RDX: 0000000000000001 RSI: 0000000000000004 RDI: fffff5200019cf70
RBP: 0000000000000001 R08: 0000000000000001 R09: ffff8880ba11fa1b
R10: ffffed1017423f43 R11: 0000000000000001 R12: 0000000000000003
R13: ffff8880197b8000 R14: ffff888021b54b1c R15: ffff8880197b8f60
FS:  0000000000000000(0000) GS:ffff8880ba100000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007eff50a036c0 CR3: 000000000a68e000 CR4: 00000000001506e0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 nf_unregister_net_hook net/netfilter/core.c:502 [inline]
 nf_unregister_net_hooks+0xb1/0xf0 net/netfilter/core.c:576
 ops_pre_exit_list net/core/net_namespace.c:165 [inline]
 cleanup_net+0x3a4/0x990 net/core/net_namespace.c:583
 process_one_work+0x84c/0x13b0 kernel/workqueue.c:2275
 worker_thread+0x598/0xf80 kernel/workqueue.c:2421
 kthread+0x36f/0x450 kernel/kthread.c:292
 ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:294

