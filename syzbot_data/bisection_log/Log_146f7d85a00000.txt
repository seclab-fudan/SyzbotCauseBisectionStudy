bisecting cause commit starting from 6c9bef32c6e742e847fc28c9bf7721cbfa003fa6
building syzkaller on 34bf9440bd06034f86b5d9ac8afbf078129cbdae
testing commit 6c9bef32c6e742e847fc28c9bf7721cbfa003fa6 with gcc (GCC) 8.1.0
all runs: crashed: general protection fault in ovs_ct_exit
testing release v5.1
testing commit e93c9c99a629c61837d5a7fc2120cd2b6c70dbdd with gcc (GCC) 8.1.0
all runs: OK
# git bisect start 6c9bef32c6e742e847fc28c9bf7721cbfa003fa6 v5.1
Bisecting: 7466 revisions left to test after this (roughly 13 steps)
[a2d635decbfa9c1e4ae15cb05b68b2559f7f827c] Merge tag 'drm-next-2019-05-09' of git://anongit.freedesktop.org/drm/drm
testing commit a2d635decbfa9c1e4ae15cb05b68b2559f7f827c with gcc (GCC) 8.1.0
all runs: OK
# git bisect good a2d635decbfa9c1e4ae15cb05b68b2559f7f827c
Bisecting: 3646 revisions left to test after this (roughly 12 steps)
[e8a1d70117116c8d96c266f0b99e931717670eaf] Merge tag 'armsoc-dt' of git://git.kernel.org/pub/scm/linux/kernel/git/soc/soc
testing commit e8a1d70117116c8d96c266f0b99e931717670eaf with gcc (GCC) 8.1.0
all runs: OK
# git bisect good e8a1d70117116c8d96c266f0b99e931717670eaf
Bisecting: 1823 revisions left to test after this (roughly 11 steps)
[41597408fd9a634a9fb44cb3d692ed74ca187da2] treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 400
testing commit 41597408fd9a634a9fb44cb3d692ed74ca187da2 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 41597408fd9a634a9fb44cb3d692ed74ca187da2
Bisecting: 911 revisions left to test after this (roughly 10 steps)
[eeb2efaf36c75753f9028de3500669bddfac81a8] net/tls: generalize the resync callback
testing commit eeb2efaf36c75753f9028de3500669bddfac81a8 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good eeb2efaf36c75753f9028de3500669bddfac81a8
Bisecting: 459 revisions left to test after this (roughly 9 steps)
[eb7c825bf74755a9ea975b7a463c6d13ffa7f447] Merge tag 'riscv-for-v5.2/fixes-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/riscv/linux
testing commit eb7c825bf74755a9ea975b7a463c6d13ffa7f447 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good eb7c825bf74755a9ea975b7a463c6d13ffa7f447
Bisecting: 242 revisions left to test after this (roughly 8 steps)
[efa14c3985828da3163f5372137cb64d992b0f79] iavf: allow null RX descriptors
testing commit efa14c3985828da3163f5372137cb64d992b0f79 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good efa14c3985828da3163f5372137cb64d992b0f79
Bisecting: 121 revisions left to test after this (roughly 7 steps)
[6bb9e376c2a4cc5120c3bf5fd3048b9a0a6ec1f8] net: dsa: microchip: Don't try to read stats for unused ports
testing commit 6bb9e376c2a4cc5120c3bf5fd3048b9a0a6ec1f8 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 6bb9e376c2a4cc5120c3bf5fd3048b9a0a6ec1f8
Bisecting: 60 revisions left to test after this (roughly 6 steps)
[f6c3bb75165cb4d0a0beb2ea6df5b392b7131645] mlxsw: spectrum_router: Ignore IPv6 multipath notifications
testing commit f6c3bb75165cb4d0a0beb2ea6df5b392b7131645 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good f6c3bb75165cb4d0a0beb2ea6df5b392b7131645
Bisecting: 29 revisions left to test after this (roughly 5 steps)
[da21ad276af46d87749eaade2e8e5a52f6df8ecb] Merge branch 'net-mvpp2-cls-Allow-steering-based-on-vlan-tag'
testing commit da21ad276af46d87749eaade2e8e5a52f6df8ecb with gcc (GCC) 8.1.0
all runs: OK
# git bisect good da21ad276af46d87749eaade2e8e5a52f6df8ecb
Bisecting: 14 revisions left to test after this (roughly 4 steps)
[0afdeeed08b5f59148069e9f7a52d2ab0eba5d49] net: page_pool: add helper function to retrieve dma addresses
testing commit 0afdeeed08b5f59148069e9f7a52d2ab0eba5d49 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 0afdeeed08b5f59148069e9f7a52d2ab0eba5d49
Bisecting: 7 revisions left to test after this (roughly 3 steps)
[99c07c43c4ea0bc101331401a0fabfc51933c6a3] xdp: tracking page_pool resources and safe removal
testing commit 99c07c43c4ea0bc101331401a0fabfc51933c6a3 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 99c07c43c4ea0bc101331401a0fabfc51933c6a3
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[f71fec47c2df704c7081f946d7e46fe036a4208b] page_pool: make sure struct device is stable
testing commit f71fec47c2df704c7081f946d7e46fe036a4208b with gcc (GCC) 8.1.0
all runs: OK
# git bisect good f71fec47c2df704c7081f946d7e46fe036a4208b
Bisecting: 1 revision left to test after this (roughly 1 step)
[d7d99872c144a2c2f5d9c9d83627fa833836cba5] netns: add pre_exit method to struct pernet_operations
testing commit d7d99872c144a2c2f5d9c9d83627fa833836cba5 with gcc (GCC) 8.1.0
all runs: crashed: general protection fault in ovs_ct_exit
# git bisect bad d7d99872c144a2c2f5d9c9d83627fa833836cba5
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[2a54003e7af1eaddc05848dac14f7bcd77301478] Merge branch 'xdp-page_pool-fixes-and-in-flight-accounting'
testing commit 2a54003e7af1eaddc05848dac14f7bcd77301478 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 2a54003e7af1eaddc05848dac14f7bcd77301478
d7d99872c144a2c2f5d9c9d83627fa833836cba5 is the first bad commit
commit d7d99872c144a2c2f5d9c9d83627fa833836cba5
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Jun 18 11:08:59 2019 -0700

    netns: add pre_exit method to struct pernet_operations
    
    Current struct pernet_operations exit() handlers are highly
    discouraged to call synchronize_rcu().
    
    There are cases where we need them, and exit_batch() does
    not help the common case where a single netns is dismantled.
    
    This patch leverages the existing synchronize_rcu() call
    in cleanup_net()
    
    Calling optional ->pre_exit() method before ->exit() or
    ->exit_batch() allows to benefit from a single synchronize_rcu()
    call.
    
    Note that the synchronize_rcu() calls added in this patch
    are only in error paths or slow paths.
    
    Tested:
    
    $ time for i in {1..1000}; do unshare -n /bin/false;done
    
    real    0m2.612s
    user    0m0.171s
    sys     0m2.216s
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

:040000 040000 2aa2033ebe5f0889f4489281ca698fb6cb608c5f 4dc419f3964e6b2524989f76b50e4ebe18b614d6 M	include
:040000 040000 d1ed99aa2891cfe1535d3ffc65e00b3aad183b85 4a339476590f55b2112e20eb0bd265f61fe0461e M	net
revisions tested: 16, total time: 4h48m35.451018877s (build: 1h31m36.37608757s, test: 3h11m54.004908152s)
first bad commit: d7d99872c144a2c2f5d9c9d83627fa833836cba5 netns: add pre_exit method to struct pernet_operations
cc: ["davem@davemloft.net" "dsahern@gmail.com" "edumazet@google.com" "jakub.kicinski@netronome.com" "linux-kernel@vger.kernel.org" "netdev@vger.kernel.org" "nicolas.dichtel@6wind.com" "pakki001@umn.edu" "tyhicks@canonical.com" "willy@infradead.org"]
crash: general protection fault in ovs_ct_exit
kasan: CONFIG_KASAN_INLINE enabled
kasan: GPF could be caused by NULL-ptr deref or user memory access
general protection fault: 0000 [#1] PREEMPT SMP KASAN
CPU: 0 PID: 7684 Comm: syz-executor.3 Not tainted 5.2.0-rc5+ #1
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
RIP: 0010:ovs_ct_limit_exit net/openvswitch/conntrack.c:1856 [inline]
RIP: 0010:ovs_ct_exit+0x139/0x3f9 net/openvswitch/conntrack.c:2261
Code: be 01 00 00 00 48 c7 c7 40 ca 39 88 e8 40 1c b8 fa 48 8d 43 50 48 89 c2 48 89 45 d0 48 b8 00 00 00 00 00 fc ff df 48 c1 ea 03 <80> 3c 02 00 0f 85 6e 02 00 00 48 b8 00 00 00 00 00 fc ff df 4c 8b
RSP: 0018:ffff888089037ad8 EFLAGS: 00010206
RAX: dffffc0000000000 RBX: 0000000000000000 RCX: 1ffff11010bc4516
RDX: 000000000000000a RSI: 1ffff11010bc451d RDI: 0000000000000286
RBP: ffff888089037b20 R08: 0000000000000000 R09: 0000000000000002
R10: ffffed1015d46c77 R11: ffff8880aea363bb R12: ffff88808f622040
R13: ffff8880a9bb8480 R14: fffffbfff11de428 R15: ffff88808f622040
FS:  00007f66bab8a700(0000) GS:ffff8880aea00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007fffc8207dfc CR3: 0000000094437000 CR4: 00000000001406f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 ovs_exit_net+0x17f/0xa60 net/openvswitch/datapath.c:2371
 ops_exit_list.isra.6+0x8b/0x120 net/core/net_namespace.c:165
 setup_net+0x47d/0x780 net/core/net_namespace.c:350
 copy_net_ns+0x199/0x2a0 net/core/net_namespace.c:456
 create_new_namespaces+0x487/0x760 kernel/nsproxy.c:103
 unshare_nsproxy_namespaces+0x87/0x1a0 kernel/nsproxy.c:202
 ksys_unshare+0x31b/0x710 kernel/fork.c:2692
 __do_sys_unshare kernel/fork.c:2760 [inline]
 __se_sys_unshare kernel/fork.c:2758 [inline]
 __x64_sys_unshare+0x2c/0x40 kernel/fork.c:2758
 do_syscall_64+0xd0/0x530 arch/x86/entry/common.c:301
 entry_SYSCALL_64_after_hwframe+0x49/0xbe
RIP: 0033:0x4592c9
Code: fd b7 fb ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 0f 83 cb b7 fb ff c3 66 2e 0f 1f 84 00 00 00 00
RSP: 002b:00007f66bab89c78 EFLAGS: 00000246 ORIG_RAX: 0000000000000110
RAX: ffffffffffffffda RBX: 0000000000000001 RCX: 00000000004592c9
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000044000000
RBP: 000000000075bf20 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 00007f66bab8a6d4
R13: 00000000004c87c1 R14: 00000000004df260 R15: 00000000ffffffff
Modules linked in:
---[ end trace 15f0eaad4e6730b1 ]---
RIP: 0010:ovs_ct_limit_exit net/openvswitch/conntrack.c:1856 [inline]
RIP: 0010:ovs_ct_exit+0x139/0x3f9 net/openvswitch/conntrack.c:2261
Code: be 01 00 00 00 48 c7 c7 40 ca 39 88 e8 40 1c b8 fa 48 8d 43 50 48 89 c2 48 89 45 d0 48 b8 00 00 00 00 00 fc ff df 48 c1 ea 03 <80> 3c 02 00 0f 85 6e 02 00 00 48 b8 00 00 00 00 00 fc ff df 4c 8b
RSP: 0018:ffff888089037ad8 EFLAGS: 00010206
RAX: dffffc0000000000 RBX: 0000000000000000 RCX: 1ffff11010bc4516
RDX: 000000000000000a RSI: 1ffff11010bc451d RDI: 0000000000000286
RBP: ffff888089037b20 R08: 0000000000000000 R09: 0000000000000002
R10: ffffed1015d46c77 R11: ffff8880aea363bb R12: ffff88808f622040
R13: ffff8880a9bb8480 R14: fffffbfff11de428 R15: ffff88808f622040
FS:  00007f66bab8a700(0000) GS:ffff8880aeb00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007ffe5c06ec90 CR3: 0000000094437000 CR4: 00000000001406e0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400

