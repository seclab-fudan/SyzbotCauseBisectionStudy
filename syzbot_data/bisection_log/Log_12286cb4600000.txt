bisecting cause commit starting from abf02e2964b3aaf1d5197c5d7c671e771b0e109e
building syzkaller on 34bf9440bd06034f86b5d9ac8afbf078129cbdae
testing commit abf02e2964b3aaf1d5197c5d7c671e771b0e109e with gcc (GCC) 8.1.0
all runs: crashed: memory leak in h4_recv_buf
testing release v5.1
testing commit e93c9c99a629c61837d5a7fc2120cd2b6c70dbdd with gcc (GCC) 8.1.0
all runs: crashed: memory leak in h4_recv_buf
testing release v5.0
testing commit 1c163f4c7b3f621efff9b28a47abb36f7378d783 with gcc (GCC) 8.1.0
run #0: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #1: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #2: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #3: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #4: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #5: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #6: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #7: crashed: WARNING in kernfs_get
run #8: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #9: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
testing release v4.20
testing commit 8fe28cb58bcb235034b64cbbb7550a8a43fd88be with gcc (GCC) 8.1.0
run #0: basic kernel testing failed: failed to copy test binary to VM: failed to run ["scp" "-P" "22" "-F" "/dev/null" "-o" "UserKnownHostsFile=/dev/null" "-o" "BatchMode=yes" "-o" "IdentitiesOnly=yes" "-o" "StrictHostKeyChecking=no" "-o" "ConnectTimeout=10" "-i" "/syzkaller/jobs/linux/workdir/image/key" "/tmp/syz-executor557590940" "root@10.128.0.29:./syz-executor557590940"]: exit status 1
ssh: connect to host 10.128.0.29 port 22: Connection timed out
lost connection

run #1: crashed: memory leak in __neigh_create
run #2: crashed: memory leak in __neigh_create
run #3: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #4: crashed: memory leak in __neigh_create
run #5: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #6: crashed: memory leak in __neigh_create
run #7: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #8: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #9: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
testing release v4.19
testing commit 84df9525b0c27f3ebc2ebb1864fa62a97fdedb7d with gcc (GCC) 8.1.0
run #0: crashed: memory leak in __neigh_create
run #1: crashed: memory leak in __neigh_create
run #2: crashed: memory leak in __neigh_create
run #3: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #4: crashed: memory leak in __neigh_create
run #5: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #6: crashed: memory leak in __neigh_create
run #7: crashed: memory leak in __neigh_create
run #8: crashed: memory leak in __neigh_create
run #9: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
testing release v4.18
testing commit 94710cac0ef4ee177a63b5227664b38c95bbf703 with gcc (GCC) 8.1.0
run #0: crashed: invalid opcode in default_client_ops
run #1: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #2: crashed: BUG: unable to handle kernel paging request in __do_softirq
run #3: crashed: memory leak in corrupted
run #4: crashed: WARNING in rcu_process_callbacks
run #5: crashed: memory leak in corrupted
run #6: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #7: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #8: crashed: memory leak in corrupted
run #9: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
testing release v4.17
testing commit 29dcea88779c856c7dc92040a0c01233263101d4 with gcc (GCC) 8.1.0
run #0: crashed: general protection fault in default_client_ops
run #1: crashed: memory leak in corrupted
run #2: crashed: BUG: unable to handle kernel paging request in __do_softirq
run #3: crashed: memory leak in corrupted
run #4: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #5: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #6: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #7: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #8: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #9: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
testing release v4.16
testing commit 0adb32858b0bddf4ada5f364a84ed60b196dbcda with gcc (GCC) 8.1.0
run #0: crashed: memory leak in __neigh_create
run #1: crashed: memory leak in __neigh_create
run #2: crashed: memory leak in __neigh_create
run #3: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #4: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #5: crashed: memory leak in __neigh_create
run #6: crashed: memory leak in __neigh_create
run #7: crashed: memory leak in __neigh_create
run #8: crashed: memory leak in __neigh_create
run #9: crashed: memory leak in __neigh_create
testing release v4.15
testing commit d8a5b80568a9cb66810e75b182018e9edb68e8ff with gcc (GCC) 8.1.0
run #0: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #1: crashed: memory leak in __neigh_create
run #2: crashed: general protection fault in baud_bits
run #3: crashed: memory leak in __neigh_create
run #4: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #5: crashed: memory leak in __neigh_create
run #6: crashed: memory leak in __neigh_create
run #7: crashed: memory leak in __neigh_create
run #8: crashed: memory leak in __neigh_create
run #9: crashed: memory leak in __neigh_create
testing release v4.14
testing commit bebc6082da0a9f5d47a1ea2edc099bf671058bd4 with gcc (GCC) 8.1.0
run #0: crashed: memory leak in __neigh_create
run #1: crashed: memory leak in __neigh_create
run #2: crashed: memory leak in __neigh_create
run #3: crashed: memory leak in __neigh_create
run #4: crashed: memory leak in __neigh_create
run #5: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #6: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #7: crashed: memory leak in __neigh_create
run #8: crashed: memory leak in __neigh_create
run #9: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
testing release v4.13
testing commit 569dbb88e80deb68974ef6fdd6a13edb9d686261 with gcc (GCC) 8.1.0
run #0: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #1: crashed: WARNING: kernel stack regs has bad 'bp' value
run #2: crashed: WARNING: kernel stack regs has bad 'bp' value
run #3: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #4: crashed: WARNING: kernel stack regs has bad 'bp' value
run #5: crashed: WARNING: kernel stack regs has bad 'bp' value
run #6: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #7: crashed: memory leak in __neigh_create
run #8: crashed: memory leak in __neigh_create
run #9: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
testing release v4.12
testing commit 6f7da290413ba713f0cdd9ff1a2a9bb129ef4f6c with gcc (GCC) 8.1.0
run #0: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #1: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #2: crashed: WARNING: kernel stack regs has bad 'bp' value
run #3: crashed: WARNING: kernel stack regs has bad 'bp' value
run #4: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #5: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #6: crashed: memory leak in copy_process
run #7: crashed: memory leak in copy_process
run #8: crashed: WARNING: kernel stack regs has bad 'bp' value
run #9: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
testing release v4.11
testing commit a351e9b9fc24e982ec2f0e76379a49826036da12 with gcc (GCC) 7.3.0
run #0: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #1: crashed: memory leak in copy_process
run #2: crashed: memory leak in copy_process
run #3: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #4: crashed: memory leak in copy_process
run #5: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #6: crashed: memory leak in copy_process
run #7: crashed: memory leak in copy_process
run #8: crashed: memory leak in copy_process
run #9: crashed: memory leak in copy_process
testing release v4.10
testing commit c470abd4fde40ea6a0846a2beab642a578c0b8cd with gcc (GCC) 5.5.0
run #0: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #1: crashed: memory leak in copy_process
run #2: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #3: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #4: crashed: memory leak in copy_process
run #5: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #6: crashed: memory leak in copy_process
run #7: crashed: memory leak in copy_process
run #8: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #9: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
testing release v4.9
testing commit 69973b830859bc6529a7a0468ba0d80ee5117826 with gcc (GCC) 5.5.0
run #0: crashed: memory leak in copy_process
run #1: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #2: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #3: crashed: memory leak in copy_process
run #4: crashed: memory leak in copy_process
run #5: crashed: memory leak in copy_process
run #6: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #7: crashed: memory leak in copy_process
run #8: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #9: crashed: memory leak in copy_process
testing release v4.8
testing commit c8d2bc9bc39ebea8437fd974fdbc21847bb897a3 with gcc (GCC) 5.5.0
all runs: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
testing release v4.7
testing commit 523d939ef98fd712632d93a5a2b588e477a7565e with gcc (GCC) 5.5.0
all runs: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
testing release v4.6
testing commit 2dcd0af568b0cf583645c8a317dd12e344b1c72a with gcc (GCC) 5.5.0
run #0: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #1: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #2: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #3: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #4: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #5: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #6: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #7: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #8: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #9: crashed: BUG: unable to handle kernel NULL pointer dereference in skb_dequeue
testing release v4.5
testing commit b562e44f507e863c6792946e4e1b1449fbbac85d with gcc (GCC) 5.5.0
run #0: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #1: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #2: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #3: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #4: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #5: crashed: BUG: unable to handle kernel
run #6: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #7: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #8: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #9: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
testing release v4.4
testing commit afd2ff9b7e1b367172f18ba7f693dfb62bdcb2dc with gcc (GCC) 5.5.0
run #0: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #1: crashed: BUG: unable to handle kernel
run #2: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #3: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #4: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #5: crashed: WARNING in process_one_work
run #6: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #7: crashed: WARNING in process_one_work
run #8: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #9: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
testing release v4.3
testing commit 6a13feb9c82803e2b815eca72fa7a9f5561d7861 with gcc (GCC) 5.5.0
run #0: crashed: memory leak in cuse_channel_open
run #1: crashed: memory leak in hci_register_dev
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
testing release v4.2
testing commit 64291f7db5bd8150a74ad2036f1037e6a0428df2 with gcc (GCC) 5.5.0
run #0: crashed: memory leak in hci_register_dev
run #1: crashed: memory leak in hci_register_dev
run #2: crashed: memory leak in hci_register_dev
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
testing release v4.1
testing commit b953c0d234bc72e8489d3bf51a276c5c4ec85345 with gcc (GCC) 5.5.0
run #0: crashed: BUG: unable to handle kernel paging request in h4_recv_buf
run #1: crashed: BUG: unable to handle kernel NULL pointer dereference in kfree_skb
run #2: crashed: no output from test machine
run #3: crashed: no output from test machine
run #4: crashed: no output from test machine
run #5: crashed: no output from test machine
run #6: crashed: no output from test machine
run #7: crashed: no output from test machine
run #8: crashed: no output from test machine
run #9: crashed: no output from test machine
revisions tested: 23, total time: 3h58m34.115966774s (build: 1h22m12.385367369s, test: 2h28m47.418783372s)
the crash already happened on the oldest tested release
crash: no output from test machine

