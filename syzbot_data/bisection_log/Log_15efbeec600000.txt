bisecting cause commit starting from 1e78030e5e5b2d8b0cad7136caf9cfab986a6bff
building syzkaller on 835dffe7e5d185154a9b147476a17b6301ee139e
testing commit 1e78030e5e5b2d8b0cad7136caf9cfab986a6bff with gcc (GCC) 8.1.0
all runs: crashed: KASAN: use-after-free Read in blkdev_bio_end_io
testing release v5.2
testing commit 0ecfebd2b52404ae0c54a878c872bb93363ada36 with gcc (GCC) 8.1.0
all runs: OK
# git bisect start 1e78030e5e5b2d8b0cad7136caf9cfab986a6bff v5.2
Bisecting: 6922 revisions left to test after this (roughly 13 steps)
[17a20acaf171124017f43bc70bb4d7ca88070659] Merge tag 'usb-5.3-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb
testing commit 17a20acaf171124017f43bc70bb4d7ca88070659 with gcc (GCC) 8.1.0
run #0: crashed: general protection fault in send_hsr_supervision_frame
run #1: crashed: general protection fault in send_hsr_supervision_frame
run #2: crashed: general protection fault in send_hsr_supervision_frame
run #3: crashed: general protection fault in send_hsr_supervision_frame
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 17a20acaf171124017f43bc70bb4d7ca88070659
Bisecting: 3621 revisions left to test after this (roughly 12 steps)
[8f6ccf6159aed1f04c6d179f61f6fb2691261e84] Merge tag 'clone3-v5.3' of git://git.kernel.org/pub/scm/linux/kernel/git/brauner/linux
testing commit 8f6ccf6159aed1f04c6d179f61f6fb2691261e84 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 8f6ccf6159aed1f04c6d179f61f6fb2691261e84
Bisecting: 1810 revisions left to test after this (roughly 11 steps)
[28261da8a26f4915aa257d12d506c6ba179d961f] Bluetooth: Check state in l2cap_disconnect_rsp
testing commit 28261da8a26f4915aa257d12d506c6ba179d961f with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 28261da8a26f4915aa257d12d506c6ba179d961f
Bisecting: 838 revisions left to test after this (roughly 10 steps)
[97ff4ca46d3279134cec49752de8c5a62dc68460] Merge tag 'char-misc-5.3-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc
testing commit 97ff4ca46d3279134cec49752de8c5a62dc68460 with gcc (GCC) 8.1.0
run #0: crashed: general protection fault in send_hsr_supervision_frame
run #1: crashed: general protection fault in send_hsr_supervision_frame
run #2: crashed: general protection fault in send_hsr_supervision_frame
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 97ff4ca46d3279134cec49752de8c5a62dc68460
Bisecting: 485 revisions left to test after this (roughly 9 steps)
[a131c2bf165684315f606fdd88cf80be22ba32f3] Merge tag 'acpi-5.3-rc1-2' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm
testing commit a131c2bf165684315f606fdd88cf80be22ba32f3 with gcc (GCC) 8.1.0
run #0: crashed: general protection fault in send_hsr_supervision_frame
run #1: crashed: general protection fault in send_hsr_supervision_frame
run #2: crashed: general protection fault in send_hsr_supervision_frame
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad a131c2bf165684315f606fdd88cf80be22ba32f3
Bisecting: 249 revisions left to test after this (roughly 8 steps)
[7650b1a9bd693d133a3ec0548ba63e828f34e3ec] Merge branch 'mp-inner-L3'
testing commit 7650b1a9bd693d133a3ec0548ba63e828f34e3ec with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 7650b1a9bd693d133a3ec0548ba63e828f34e3ec
Bisecting: 129 revisions left to test after this (roughly 7 steps)
[e858faf556d4e14c750ba1e8852783c6f9520a0e] tcp: Reset bytes_acked and bytes_received when disconnecting
testing commit e858faf556d4e14c750ba1e8852783c6f9520a0e with gcc (GCC) 8.1.0
run #0: crashed: general protection fault in send_hsr_supervision_frame
run #1: crashed: general protection fault in send_hsr_supervision_frame
run #2: crashed: general protection fault in send_hsr_supervision_frame
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad e858faf556d4e14c750ba1e8852783c6f9520a0e
Bisecting: 59 revisions left to test after this (roughly 6 steps)
[3d26eb8ad1e9b906433903ce05f775cf038e747f] net: bridge: don't cache ether dest pointer on input
testing commit 3d26eb8ad1e9b906433903ce05f775cf038e747f with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 3d26eb8ad1e9b906433903ce05f775cf038e747f
Bisecting: 30 revisions left to test after this (roughly 5 steps)
[9d1bc24b52fb8c5d859f9a47084bf1179470e04c] bonding: validate ip header before check IPPROTO_IGMP
testing commit 9d1bc24b52fb8c5d859f9a47084bf1179470e04c with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 9d1bc24b52fb8c5d859f9a47084bf1179470e04c
Bisecting: 15 revisions left to test after this (roughly 4 steps)
[13aecb17acabc2a92187d08f7ca93bb8aad62c6f] net/tls: fix poll ignoring partially copied records
testing commit 13aecb17acabc2a92187d08f7ca93bb8aad62c6f with gcc (GCC) 8.1.0
run #0: crashed: general protection fault in send_hsr_supervision_frame
run #1: crashed: general protection fault in send_hsr_supervision_frame
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 13aecb17acabc2a92187d08f7ca93bb8aad62c6f
Bisecting: 7 revisions left to test after this (roughly 3 steps)
[56c5ee1a5823e9cf5288b84ae6364cb4112f8225] xfrm interface: fix memory leak on creation
testing commit 56c5ee1a5823e9cf5288b84ae6364cb4112f8225 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 56c5ee1a5823e9cf5288b84ae6364cb4112f8225
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[edf070a0fb45ac845f534baf172fbadbeb5048c6] hsr: fix a NULL pointer deref in hsr_dev_xmit()
testing commit edf070a0fb45ac845f534baf172fbadbeb5048c6 with gcc (GCC) 8.1.0
run #0: crashed: general protection fault in send_hsr_supervision_frame
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad edf070a0fb45ac845f534baf172fbadbeb5048c6
Bisecting: 1 revision left to test after this (roughly 1 step)
[619afef01f74f3572b5e9a266c1230dc83761eec] hsr: fix a memory leak in hsr_del_port()
testing commit 619afef01f74f3572b5e9a266c1230dc83761eec with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 619afef01f74f3572b5e9a266c1230dc83761eec
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[b9a1e627405d68d475a3c1f35e685ccfb5bbe668] hsr: implement dellink to clean up resources
testing commit b9a1e627405d68d475a3c1f35e685ccfb5bbe668 with gcc (GCC) 8.1.0
run #0: OK
run #1: crashed: general protection fault in send_hsr_supervision_frame
run #2: crashed: general protection fault in send_hsr_supervision_frame
run #3: crashed: general protection fault in send_hsr_supervision_frame
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad b9a1e627405d68d475a3c1f35e685ccfb5bbe668
b9a1e627405d68d475a3c1f35e685ccfb5bbe668 is the first bad commit
commit b9a1e627405d68d475a3c1f35e685ccfb5bbe668
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Wed Jul 3 17:21:13 2019 -0700

    hsr: implement dellink to clean up resources
    
    hsr_link_ops implements ->newlink() but not ->dellink(),
    which leads that resources not released after removing the device,
    particularly the entries in self_node_db and node_db.
    
    So add ->dellink() implementation to replace the priv_destructor.
    This also makes the code slightly easier to understand.
    
    Reported-by: syzbot+c6167ec3de7def23d1e8@syzkaller.appspotmail.com
    Cc: Arvid Brodin <arvid.brodin@alten.se>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

:040000 040000 65599c9790197ff086c1843ca65b40688d162283 07d35e0ebb6f5a6fa2ee09ede31e24b8def82990 M	net
revisions tested: 16, total time: 4h33m47.592912256s (build: 1h33m33.642575479s, test: 2h55m11.901806399s)
first bad commit: b9a1e627405d68d475a3c1f35e685ccfb5bbe668 hsr: implement dellink to clean up resources
cc: ["arvid.brodin@alten.se" "davem@davemloft.net" "linux-kernel@vger.kernel.org" "netdev@vger.kernel.org" "xiyou.wangcong@gmail.com"]
crash: general protection fault in send_hsr_supervision_frame
kasan: CONFIG_KASAN_INLINE enabled
kasan: GPF could be caused by NULL-ptr deref or user memory access
general protection fault: 0000 [#1] PREEMPT SMP KASAN
CPU: 0 PID: 22217 Comm: syz-executor183 Not tainted 5.2.0-rc6+ #1
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
RIP: 0010:send_hsr_supervision_frame+0x30/0xf60 net/hsr/hsr_device.c:251
Code: 89 e5 41 57 41 56 41 55 49 89 fd 41 54 41 89 d4 48 89 c2 53 48 c1 ea 03 48 83 ec 50 48 89 45 d0 48 b8 00 00 00 00 00 fc ff df <80> 3c 02 00 89 75 c8 0f 85 83 0c 00 00 48 b8 00 00 00 00 00 fc ff
RSP: 0018:ffff8880aea09c68 EFLAGS: 00010282
RAX: dffffc0000000000 RBX: ffff888088b0b840 RCX: ffffffff8156c074
RDX: 0000000000000002 RSI: 0000000000000017 RDI: 0000000000000000
RBP: ffff8880aea09ce0 R08: ffffed1015d46c70 R09: ffffed1015d46c6f
R10: ffffed1015d46c6f R11: ffff8880aea3637b R12: 0000000000000000
R13: 0000000000000000 R14: ffff8880aea09db8 R15: ffff8880aea24b80
FS:  0000555556640880(0000) GS:ffff8880aea00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00000000004b73f8 CR3: 000000009aa0e000 CR4: 00000000001406f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 <IRQ>
 hsr_announce+0xd9/0x2b0 net/hsr/hsr_device.c:335
 call_timer_fn+0x14d/0x510 kernel/time/timer.c:1322
 expire_timers kernel/time/timer.c:1366 [inline]
 __run_timers kernel/time/timer.c:1685 [inline]
 run_timer_softirq+0xc6f/0x1330 kernel/time/timer.c:1698
 __do_softirq+0x260/0x958 kernel/softirq.c:292
 invoke_softirq kernel/softirq.c:373 [inline]
 irq_exit+0x17f/0x1c0 kernel/softirq.c:413
 exiting_irq arch/x86/include/asm/apic.h:536 [inline]
 smp_apic_timer_interrupt+0x13e/0x540 arch/x86/kernel/apic/apic.c:1068
 apic_timer_interrupt+0xf/0x20 arch/x86/entry/entry_64.S:806
 </IRQ>
RIP: 0010:arch_local_irq_restore arch/x86/include/asm/paravirt.h:767 [inline]
RIP: 0010:lock_acquire+0x1f1/0x3d0 kernel/locking/lockdep.c:4306
Code: 00 00 00 00 00 48 89 fa 48 c1 ea 03 80 3c 02 00 0f 85 aa 01 00 00 48 83 3d 4b d5 e1 06 00 0f 84 31 01 00 00 48 8b 7d c8 57 9d <0f> 1f 44 00 00 48 8d 65 d8 5b 41 5c 41 5d 41 5e 41 5f 5d c3 65 8b
RSP: 0018:ffff88809a8df9e8 EFLAGS: 00000286 ORIG_RAX: ffffffffffffff13
RAX: dffffc0000000000 RBX: ffff888097f6a240 RCX: 0000000000000000
RDX: 1ffffffff10643de RSI: ffff888097f6aae8 RDI: 0000000000000286
RBP: ffff88809a8dfa30 R08: ffff888097f6ab08 R09: 0000000000000000
R10: ffff888097f6aae8 R11: ffff888097f6a240 R12: 0000000000000000
R13: 0000000000000002 R14: 0000000000000000 R15: 0000000000000000
 rcu_lock_acquire include/linux/rcupdate.h:208 [inline]
 rcu_read_lock include/linux/rcupdate.h:593 [inline]
 count_memcg_event_mm include/linux/memcontrol.h:740 [inline]
 handle_mm_fault+0xd5/0x800 mm/memory.c:4038
 faultin_page mm/gup.c:654 [inline]
 __get_user_pages+0x527/0x1280 mm/gup.c:857
 populate_vma_page_range+0x16c/0x200 mm/gup.c:1560
 __mm_populate+0x1b5/0x330 mm/gup.c:1608
 mm_populate include/linux/mm.h:2411 [inline]
 vm_mmap_pgoff+0x1e3/0x210 mm/util.c:368
 ksys_mmap_pgoff+0xa4/0x650 mm/mmap.c:1611
 __do_sys_mmap arch/x86/kernel/sys_x86_64.c:100 [inline]
 __se_sys_mmap arch/x86/kernel/sys_x86_64.c:91 [inline]
 __x64_sys_mmap+0xe9/0x1b0 arch/x86/kernel/sys_x86_64.c:91
 do_syscall_64+0xd0/0x530 arch/x86/entry/common.c:301
 entry_SYSCALL_64_after_hwframe+0x49/0xbe
RIP: 0033:0x441d89
Code: e8 dc e6 ff ff 48 83 c4 18 c3 0f 1f 80 00 00 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 0f 83 3b 08 fc ff c3 66 2e 0f 1f 84 00 00 00 00
RSP: 002b:00007ffce34df598 EFLAGS: 00000246 ORIG_RAX: 0000000000000009
RAX: ffffffffffffffda RBX: 000000000007a0c8 RCX: 0000000000441d89
RDX: 0000000001000002 RSI: 0000000000b36000 RDI: 0000000020000000
RBP: 0000000000000000 R08: 00000000ffffffff R09: 0000000000000000
R10: 0800000000009031 R11: 0000000000000246 R12: 0000000000000026
R13: 0000000000402ae0 R14: 0000000000000000 R15: 0000000000000000
Modules linked in:
---[ end trace eb9f31e81cc2760d ]---
RIP: 0010:send_hsr_supervision_frame+0x30/0xf60 net/hsr/hsr_device.c:251
Code: 89 e5 41 57 41 56 41 55 49 89 fd 41 54 41 89 d4 48 89 c2 53 48 c1 ea 03 48 83 ec 50 48 89 45 d0 48 b8 00 00 00 00 00 fc ff df <80> 3c 02 00 89 75 c8 0f 85 83 0c 00 00 48 b8 00 00 00 00 00 fc ff
RSP: 0018:ffff8880aea09c68 EFLAGS: 00010282
RAX: dffffc0000000000 RBX: ffff888088b0b840 RCX: ffffffff8156c074
RDX: 0000000000000002 RSI: 0000000000000017 RDI: 0000000000000000
RBP: ffff8880aea09ce0 R08: ffffed1015d46c70 R09: ffffed1015d46c6f
R10: ffffed1015d46c6f R11: ffff8880aea3637b R12: 0000000000000000
R13: 0000000000000000 R14: ffff8880aea09db8 R15: ffff8880aea24b80
FS:  0000555556640880(0000) GS:ffff8880aea00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00000000004b73f8 CR3: 000000009aa0e000 CR4: 00000000001406f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400

