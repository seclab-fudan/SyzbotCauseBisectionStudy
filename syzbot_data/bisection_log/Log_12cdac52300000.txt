bisecting cause commit starting from fc16a5322ee6c30ea848818722eee5d352f8d127
building syzkaller on b44001ce341058eacf27ece52df7cf35ca8b2f5a
testing commit fc16a5322ee6c30ea848818722eee5d352f8d127
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: 38bc64bcbf6da4552dec6b8c63d81d108e5b4ec51d024379d1aa2fc66a32a09d
run #0: crashed: general protection fault in free_percpu
run #1: crashed: BUG: sleeping function called from invalid context in lock_sock_nested
run #2: crashed: BUG: unable to handle kernel paging request in get_counters
run #3: crashed: general protection fault in free_percpu
run #4: crashed: general protection fault in free_percpu
run #5: crashed: general protection fault in free_percpu
run #6: crashed: general protection fault in free_percpu
run #7: crashed: general protection fault in free_percpu
run #8: crashed: general protection fault in free_percpu
run #9: crashed: general protection fault in free_percpu
run #10: crashed: general protection fault in free_percpu
run #11: crashed: general protection fault in free_percpu
run #12: crashed: general protection fault in free_percpu
run #13: crashed: general protection fault in free_percpu
run #14: crashed: general protection fault in free_percpu
run #15: crashed: general protection fault in free_percpu
run #16: crashed: general protection fault in free_percpu
run #17: crashed: general protection fault in free_percpu
run #18: crashed: general protection fault in free_percpu
run #19: crashed: general protection fault in free_percpu
testing release v5.13
testing commit 62fb9874f5da54fdb243003b386128037319b219
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: 909f5b513362d755e99068620c19525cb2afd91ca8725228219fd46574a48866
all runs: OK
# git bisect start fc16a5322ee6c30ea848818722eee5d352f8d127 62fb9874f5da54fdb243003b386128037319b219
Bisecting: 7158 revisions left to test after this (roughly 13 steps)
[514798d36572fb8eba6ccff3de10c9615063a7f5] Merge tag 'clk-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/clk/linux

testing commit 514798d36572fb8eba6ccff3de10c9615063a7f5
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: c48c1f58a49b135a0705833530c3090622f86ec0595e0aa8cdd20347380a1fdd
all runs: OK
# git bisect good 514798d36572fb8eba6ccff3de10c9615063a7f5
Bisecting: 3886 revisions left to test after this (roughly 12 steps)
[f5c13f1fdef9fed65b95c3c5f343d22c425ac1d7] Merge tag 'driver-core-5.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core

testing commit f5c13f1fdef9fed65b95c3c5f343d22c425ac1d7
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: a3987e747a0b341672971f98273aa4cff0a8a625785628289bb9db5d68ed2b04
run #0: boot failed: kernel panic: VFS: Unable to mount root fs on unknown-block(0,0)
run #1: boot failed: BUG: sleeping function called from invalid context in stack_depot_save
run #2: boot failed: BUG: sleeping function called from invalid context in stack_depot_save
run #3: boot failed: kernel panic: VFS: Unable to mount root fs on unknown-block(0,0)
run #4: boot failed: kernel panic: VFS: Unable to mount root fs on unknown-block(0,0)
run #5: boot failed: kernel panic: VFS: Unable to mount root fs on unknown-block(0,0)
run #6: boot failed: possible deadlock in fs_reclaim_acquire
run #7: boot failed: BUG: sleeping function called from invalid context in stack_depot_save
run #8: boot failed: kernel panic: VFS: Unable to mount root fs on unknown-block(0,0)
run #9: boot failed: kernel panic: VFS: Unable to mount root fs on unknown-block(0,0)
# git bisect skip f5c13f1fdef9fed65b95c3c5f343d22c425ac1d7
Bisecting: 3886 revisions left to test after this (roughly 12 steps)
[37120f23ac8998c250573ea3247ff77426551f69] net: dsa: tag_ksz: dont let the hardware process the layer 4 checksum

testing commit 37120f23ac8998c250573ea3247ff77426551f69
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: 57c3418c973ff611ec56eda5d76b77fd5d676305b675d1fe203798894e177d86
run #0: basic kernel testing failed: possible deadlock in fs_reclaim_acquire
run #1: crashed: general protection fault in free_percpu
run #2: crashed: general protection fault in free_percpu
run #3: crashed: general protection fault in free_percpu
run #4: crashed: general protection fault in free_percpu
run #5: crashed: general protection fault in free_percpu
run #6: crashed: general protection fault in free_percpu
run #7: crashed: general protection fault in free_percpu
run #8: crashed: general protection fault in free_percpu
run #9: crashed: general protection fault in free_percpu
# git bisect bad 37120f23ac8998c250573ea3247ff77426551f69
Bisecting: 3461 revisions left to test after this (roughly 12 steps)
[75ae84c89b136a5c0193ab7064b03cddfcebba39] drm/amdkfd: add helper function for kfd sysfs create

testing commit 75ae84c89b136a5c0193ab7064b03cddfcebba39
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: f6ea27f1196e7cdbf1f45138e46e1651c643cbd969bc8f8ce62ed6c86fba88d5
run #0: crashed: BUG: sleeping function called from invalid context in lock_sock_nested
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
reproducer seems to be flaky
# git bisect bad 75ae84c89b136a5c0193ab7064b03cddfcebba39
Bisecting: 4 revisions left to test after this (roughly 2 steps)
[5a5da8ae9546031e43efd4fa5aa8baa481e83dfb] drm/amdgpu: fix NAK-G generation during PCI-e link width switch

testing commit 5a5da8ae9546031e43efd4fa5aa8baa481e83dfb
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: f6ea27f1196e7cdbf1f45138e46e1651c643cbd969bc8f8ce62ed6c86fba88d5
run #0: crashed: BUG: unable to handle kernel paging request in get_counters
run #1: crashed: BUG: unable to handle kernel paging request in get_counters
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad 5a5da8ae9546031e43efd4fa5aa8baa481e83dfb
Bisecting: 1 revision left to test after this (roughly 1 step)
[0dbc2c81a1ab7dadfc534d89d79d4e8c394123af] drm/amdgpu: correct tcp harvest setting

testing commit 0dbc2c81a1ab7dadfc534d89d79d4e8c394123af
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: f6ea27f1196e7cdbf1f45138e46e1651c643cbd969bc8f8ce62ed6c86fba88d5
run #0: crashed: BUG: unable to handle kernel paging request in get_counters
run #1: crashed: general protection fault in free_percpu
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad 0dbc2c81a1ab7dadfc534d89d79d4e8c394123af
Bisecting: 1 revision left to test after this (roughly 1 step)
[a51482458dafb836dbf7c8ae3200ca8db7348201] drm/amd/display: Enabling eDP no power sequencing with DAL feature mask

testing commit a51482458dafb836dbf7c8ae3200ca8db7348201
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: f6ea27f1196e7cdbf1f45138e46e1651c643cbd969bc8f8ce62ed6c86fba88d5
run #0: crashed: general protection fault in free_percpu
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad a51482458dafb836dbf7c8ae3200ca8db7348201
a51482458dafb836dbf7c8ae3200ca8db7348201 is the first bad commit
commit a51482458dafb836dbf7c8ae3200ca8db7348201
Author: Zhan Liu <zhan.liu@amd.com>
Date:   Mon Jun 14 14:54:14 2021 -0400

    drm/amd/display: Enabling eDP no power sequencing with DAL feature mask
    
    [Why]
    Sometimes, DP receiver chip power-controlled externally by an
    Embedded Controller could be treated and used as eDP,
    if it drives mobile display. In this case,
    we shouldn't be doing power-sequencing, hence we can skip
    waiting for T7-ready and T9-ready."
    
    [How]
    Added a feature mask to enable eDP no power sequencing feature.
    
    To enable this, set 0x10 flag in amdgpu.dcfeaturemask on
    Linux command line.
    
    Signed-off-by: Zhan Liu <zhan.liu@amd.com>
    Reviewed-by: Nikola Cornij <Nikola.Cornij@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>

 drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c            |  1 +
 drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c  |  3 +++
 drivers/gpu/drm/amd/display/dc/dc.h                |  1 +
 .../amd/display/dc/dce110/dce110_hw_sequencer.c    | 31 +++++++++++++++++++---
 drivers/gpu/drm/amd/include/amd_shared.h           | 10 ++++---
 5 files changed, 38 insertions(+), 8 deletions(-)

parent commit b322a50d17ede5cff6622040f345228afecdcc45 wasn't tested
testing commit b322a50d17ede5cff6622040f345228afecdcc45
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: f6ea27f1196e7cdbf1f45138e46e1651c643cbd969bc8f8ce62ed6c86fba88d5
culprit signature: f6ea27f1196e7cdbf1f45138e46e1651c643cbd969bc8f8ce62ed6c86fba88d5
parent  signature: f6ea27f1196e7cdbf1f45138e46e1651c643cbd969bc8f8ce62ed6c86fba88d5
Reproducer flagged being flaky
revisions tested: 9, total time: 2h25m29.09272877s (build: 1h6m12.237598787s, test: 1h18m3.229717689s)
first bad commit: a51482458dafb836dbf7c8ae3200ca8db7348201 drm/amd/display: Enabling eDP no power sequencing with DAL feature mask
recipients (to): ["alexander.deucher@amd.com" "nikola.cornij@amd.com" "zhan.liu@amd.com"]
recipients (cc): []
crash: general protection fault in free_percpu
general protection fault, probably for non-canonical address 0xdffffc0000000004: 0000 [#1] PREEMPT SMP KASAN
KASAN: null-ptr-deref in range [0x0000000000000020-0x0000000000000027]
CPU: 1 PID: 15235 Comm: syz-executor.2 Not tainted 5.13.0-rc7-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
RIP: 0010:pcpu_get_page_chunk mm/percpu.c:261 [inline]
RIP: 0010:pcpu_chunk_addr_search mm/percpu.c:1579 [inline]
RIP: 0010:free_percpu mm/percpu.c:2099 [inline]
RIP: 0010:free_percpu+0x491/0x940 mm/percpu.c:2081
Code: 3c 02 00 0f 85 df 03 00 00 49 8b 7d 00 48 01 df e8 34 1b 08 00 48 ba 00 00 00 00 00 fc ff df 48 8d 78 20 48 89 f9 48 c1 e9 03 <80> 3c 11 00 0f 85 1b 04 00 00 48 8b 68 20 48 b8 00 00 00 00 00 fc
RSP: 0018:ffffc90008fcfc30 EFLAGS: 00010002
RAX: 0000000000000000 RBX: ffffe8fff6aff000 RCX: 0000000000000004
RDX: dffffc0000000000 RSI: 000ffffffffff000 RDI: 0000000000000020
RBP: ffff88823ffe38c0 R08: 0000000000000001 R09: 0000000000000003
R10: fffff520011f9f74 R11: 0000000000000397 R12: 0000607f3ccff000
R13: ffff88823ffe3c08 R14: ffff8880b9e54e48 R15: ffff8880b9e52000
FS:  00007f05319c2700(0000) GS:ffff8880b9f00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000020000040 CR3: 000000004781f000 CR4: 00000000001506e0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 tun_free_netdev+0x6e/0x130 drivers/net/tun.c:2203
 netdev_run_todo+0x5aa/0x910 net/core/dev.c:10575
 __tun_chr_ioctl.isra.0+0xcf7/0x3b30 drivers/net/tun.c:3297
 vfs_ioctl fs/ioctl.c:51 [inline]
 __do_sys_ioctl fs/ioctl.c:1069 [inline]
 __se_sys_ioctl fs/ioctl.c:1055 [inline]
 __x64_sys_ioctl+0x11f/0x190 fs/ioctl.c:1055
 do_syscall_64+0x3a/0xb0 arch/x86/entry/common.c:47
 entry_SYSCALL_64_after_hwframe+0x44/0xae
RIP: 0033:0x4665e9
Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f05319c2188 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
RAX: ffffffffffffffda RBX: 000000000056c038 RCX: 00000000004665e9
RDX: 0000000020000040 RSI: 00000000400454ca RDI: 0000000000000004
RBP: 00000000004bfcc4 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 000000000056c038
R13: 00007ffe97cbb38f R14: 00007f05319c2300 R15: 0000000000022000
Modules linked in:
---[ end trace 00ded0160fba1d7c ]---
RIP: 0010:pcpu_get_page_chunk mm/percpu.c:261 [inline]
RIP: 0010:pcpu_chunk_addr_search mm/percpu.c:1579 [inline]
RIP: 0010:free_percpu mm/percpu.c:2099 [inline]
RIP: 0010:free_percpu+0x491/0x940 mm/percpu.c:2081
Code: 3c 02 00 0f 85 df 03 00 00 49 8b 7d 00 48 01 df e8 34 1b 08 00 48 ba 00 00 00 00 00 fc ff df 48 8d 78 20 48 89 f9 48 c1 e9 03 <80> 3c 11 00 0f 85 1b 04 00 00 48 8b 68 20 48 b8 00 00 00 00 00 fc
RSP: 0018:ffffc90008fcfc30 EFLAGS: 00010002
RAX: 0000000000000000 RBX: ffffe8fff6aff000 RCX: 0000000000000004
RDX: dffffc0000000000 RSI: 000ffffffffff000 RDI: 0000000000000020
RBP: ffff88823ffe38c0 R08: 0000000000000001 R09: 0000000000000003
R10: fffff520011f9f74 R11: 0000000000000397 R12: 0000607f3ccff000
R13: ffff88823ffe3c08 R14: ffff8880b9e54e48 R15: ffff8880b9e52000
FS:  00007f05319c2700(0000) GS:ffff8880b9f00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000020000040 CR3: 000000004781f000 CR4: 00000000001506e0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400

