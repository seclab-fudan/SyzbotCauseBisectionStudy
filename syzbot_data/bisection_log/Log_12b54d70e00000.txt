bisecting cause commit starting from 60c1769a45f4b6beddcc48843739d7d41b88dc1c
building syzkaller on 439d7b14af89ad3af89add849b6505f4e672b5af
testing commit 60c1769a45f4b6beddcc48843739d7d41b88dc1c with gcc (GCC) 8.1.0
run #0: crashed: INFO: trying to register non-static key in bond_3ad_update_ad_actor_settings
run #1: crashed: INFO: trying to register non-static key in bond_3ad_update_ad_actor_settings
run #2: crashed: INFO: trying to register non-static key in bond_3ad_update_ad_actor_settings
run #3: crashed: INFO: trying to register non-static key in bond_3ad_update_ad_actor_settings
run #4: crashed: INFO: trying to register non-static key in bond_3ad_update_ad_actor_settings
run #5: crashed: INFO: trying to register non-static key in bond_3ad_update_ad_actor_settings
run #6: crashed: INFO: task hung in mpage_prepare_extent_to_map
run #7: crashed: INFO: task hung in mpage_prepare_extent_to_map
run #8: crashed: INFO: task hung in mpage_prepare_extent_to_map
run #9: crashed: INFO: task hung in mpage_prepare_extent_to_map
testing release v5.3
testing commit 4d856f72c10ecb060868ed10ff1b1453943fc6c8 with gcc (GCC) 8.1.0
all runs: OK
# git bisect start 60c1769a45f4b6beddcc48843739d7d41b88dc1c v5.3
Bisecting: 10938 revisions left to test after this (roughly 14 steps)
[018c6837f3e63b45163d55a1668d9f8e6fdecf6e] Merge tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rdma/rdma
testing commit 018c6837f3e63b45163d55a1668d9f8e6fdecf6e with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 018c6837f3e63b45163d55a1668d9f8e6fdecf6e
Bisecting: 5510 revisions left to test after this (roughly 13 steps)
[08b8ec631357165ae1eedd90b817863989f6be4a] Merge remote-tracking branch 'pci/next'
testing commit 08b8ec631357165ae1eedd90b817863989f6be4a with gcc (GCC) 8.1.0
all runs: crashed: INFO: trying to register non-static key in bond_3ad_update_ad_actor_settings
# git bisect bad 08b8ec631357165ae1eedd90b817863989f6be4a
Bisecting: 2713 revisions left to test after this (roughly 11 steps)
[ae6fcfbf5f03de3407b809aaee319330d3dc7f8b] vsock/virtio: discard packets if credit is not respected
testing commit ae6fcfbf5f03de3407b809aaee319330d3dc7f8b with gcc (GCC) 8.1.0
all runs: OK
# git bisect good ae6fcfbf5f03de3407b809aaee319330d3dc7f8b
Bisecting: 1444 revisions left to test after this (roughly 10 steps)
[5edd97614fbe3602f8f6a804bab02b92074a1614] Merge remote-tracking branch 'arm-perf/for-next/perf'
testing commit 5edd97614fbe3602f8f6a804bab02b92074a1614 with gcc (GCC) 8.1.0
all runs: crashed: INFO: trying to register non-static key in bond_3ad_update_ad_actor_settings
# git bisect bad 5edd97614fbe3602f8f6a804bab02b92074a1614
Bisecting: 633 revisions left to test after this (roughly 9 steps)
[531e93d11470aa2e14e6a3febef50d9bc7bab7a1] Merge git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net
testing commit 531e93d11470aa2e14e6a3febef50d9bc7bab7a1 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 531e93d11470aa2e14e6a3febef50d9bc7bab7a1
Bisecting: 309 revisions left to test after this (roughly 8 steps)
[a8a31fdccabb244dd788090c6974784401f7c5a8] Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
testing commit a8a31fdccabb244dd788090c6974784401f7c5a8 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good a8a31fdccabb244dd788090c6974784401f7c5a8
Bisecting: 151 revisions left to test after this (roughly 7 steps)
[a955e70083c03d33a55de1dd6b190c6e281b9bbf] Merge remote-tracking branch 'usb-gadget-fixes/fixes'
testing commit a955e70083c03d33a55de1dd6b190c6e281b9bbf with gcc (GCC) 8.1.0
all runs: crashed: INFO: trying to register non-static key in bond_3ad_update_ad_actor_settings
# git bisect bad a955e70083c03d33a55de1dd6b190c6e281b9bbf
Bisecting: 85 revisions left to test after this (roughly 6 steps)
[fc11078dd3514c65eabce166b8431a56d8a667cb] Merge git://git.kernel.org/pub/scm/linux/kernel/git/pablo/nf
testing commit fc11078dd3514c65eabce166b8431a56d8a667cb with gcc (GCC) 8.1.0
all runs: crashed: INFO: trying to register non-static key in bond_3ad_update_ad_actor_settings
# git bisect bad fc11078dd3514c65eabce166b8431a56d8a667cb
Bisecting: 35 revisions left to test after this (roughly 5 steps)
[52b33b4f8186669ab88b56cf5b2812e3996ef289] Merge tag 'ipvs-fixes-for-v5.4' of https://git.kernel.org/pub/scm/linux/kernel/git/horms/ipvs
testing commit 52b33b4f8186669ab88b56cf5b2812e3996ef289 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 52b33b4f8186669ab88b56cf5b2812e3996ef289
Bisecting: 17 revisions left to test after this (roughly 4 steps)
[f536dffc0b79738c3104af999318279dccbaa261] net/smc: fix closing of fallback SMC sockets
testing commit f536dffc0b79738c3104af999318279dccbaa261 with gcc (GCC) 8.1.0
all runs: crashed: INFO: trying to register non-static key in bond_3ad_update_ad_actor_settings
# git bisect bad f536dffc0b79738c3104af999318279dccbaa261
Bisecting: 8 revisions left to test after this (roughly 3 steps)
[2bce1ebed17da54c65042ec2b962e3234bad5b47] macsec: fix refcnt leak in module exit routine
testing commit 2bce1ebed17da54c65042ec2b962e3234bad5b47 with gcc (GCC) 8.1.0
all runs: crashed: INFO: trying to register non-static key in bond_3ad_update_ad_actor_settings
# git bisect bad 2bce1ebed17da54c65042ec2b962e3234bad5b47
Bisecting: 4 revisions left to test after this (roughly 2 steps)
[5343da4c17429efaa5fb1594ea96aee1a283e694] net: core: limit nested device depth
testing commit 5343da4c17429efaa5fb1594ea96aee1a283e694 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 5343da4c17429efaa5fb1594ea96aee1a283e694
Bisecting: 2 revisions left to test after this (roughly 1 step)
[65de65d9033750d2cf1b336c9d6e9da3a8b5cc6e] bonding: fix unexpected IFF_BONDING bit unset
testing commit 65de65d9033750d2cf1b336c9d6e9da3a8b5cc6e with gcc (GCC) 8.1.0
all runs: crashed: BUG: MAX_LOCKDEP_KEYS too low!
# git bisect bad 65de65d9033750d2cf1b336c9d6e9da3a8b5cc6e
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[ab92d68fc22f9afab480153bd82a20f6e2533769] net: core: add generic lockdep keys
testing commit ab92d68fc22f9afab480153bd82a20f6e2533769 with gcc (GCC) 8.1.0
all runs: crashed: BUG: MAX_LOCKDEP_KEYS too low!
# git bisect bad ab92d68fc22f9afab480153bd82a20f6e2533769
ab92d68fc22f9afab480153bd82a20f6e2533769 is the first bad commit
commit ab92d68fc22f9afab480153bd82a20f6e2533769
Author: Taehee Yoo <ap420073@gmail.com>
Date:   Mon Oct 21 18:47:51 2019 +0000

    net: core: add generic lockdep keys
    
    Some interface types could be nested.
    (VLAN, BONDING, TEAM, MACSEC, MACVLAN, IPVLAN, VIRT_WIFI, VXLAN, etc..)
    These interface types should set lockdep class because, without lockdep
    class key, lockdep always warn about unexisting circular locking.
    
    In the current code, these interfaces have their own lockdep class keys and
    these manage itself. So that there are so many duplicate code around the
    /driver/net and /net/.
    This patch adds new generic lockdep keys and some helper functions for it.
    
    This patch does below changes.
    a) Add lockdep class keys in struct net_device
       - qdisc_running, xmit, addr_list, qdisc_busylock
       - these keys are used as dynamic lockdep key.
    b) When net_device is being allocated, lockdep keys are registered.
       - alloc_netdev_mqs()
    c) When net_device is being free'd llockdep keys are unregistered.
       - free_netdev()
    d) Add generic lockdep key helper function
       - netdev_register_lockdep_key()
       - netdev_unregister_lockdep_key()
       - netdev_update_lockdep_key()
    e) Remove unnecessary generic lockdep macro and functions
    f) Remove unnecessary lockdep code of each interfaces.
    
    After this patch, each interface modules don't need to maintain
    their lockdep keys.
    
    Signed-off-by: Taehee Yoo <ap420073@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

:040000 040000 48b70c86ecac7d18f25995cfd834afc9716a893d cd0d4024b2242c910f727046de63cb6d70340a11 M	drivers
:040000 040000 0015f24c6d9c1710c7d74e2aa35a48934b1194a3 6ce529d9331493da9f35c05763ac76d78336455a M	include
:040000 040000 2beb5bddec99cb7fb2fed15ecee03862639a37fe 3da40dacf9853f8e54e6de8cf5b373bf32e05ec4 M	net
revisions tested: 16, total time: 3h37m3.819831546s (build: 1h35m45.393365773s, test: 1h55m36.547775444s)
first bad commit: ab92d68fc22f9afab480153bd82a20f6e2533769 net: core: add generic lockdep keys
cc: ["a@unstable.cc" "alex.aring@gmail.com" "allison@lohutok.net" "andrew@lunn.ch" "andy@greyhouse.net" "ap420073@gmail.com" "aroulin@cumulusnetworks.com" "ast@domdv.de" "b.a.t.m.a.n@lists.open-mesh.org" "bridge@lists.linux-foundation.org" "cleech@redhat.com" "daniel@iogearbox.net" "davem@davemloft.net" "dcaratti@redhat.com" "dsa@cumulusnetworks.com" "edumazet@google.com" "f.fainelli@gmail.com" "fw@strlen.de" "gbastien@versatic.net" "gregkh@linuxfoundation.org" "gustavo@embeddedor.com" "haiyangz@microsoft.com" "idosch@mellanox.com" "info@metux.net" "j.vosburgh@gmail.com" "j@w1.fi" "jakub.kicinski@netronome.com" "jhs@mojatatu.com" "jiri@resnulli.us" "johan.hedberg@gmail.com" "johannes.berg@intel.com" "john.hurley@netronome.com" "jwi@linux.ibm.com" "kstewart@linuxfoundation.org" "kvalo@codeaurora.org" "kys@microsoft.com" "linmiaohe@huawei.com" "linux-bluetooth@vger.kernel.org" "linux-hams@vger.kernel.org" "linux-hyperv@vger.kernel.org" "linux-kernel@vger.kernel.org" "linux-ppp@vger.kernel.org" "linux-wireless@vger.kernel.org" "linux-wpan@vger.kernel.org" "liuhangbin@gmail.com" "marcel@holtmann.org" "mareklindner@neomailbox.ch" "mcroce@redhat.com" "mkubecek@suse.cz" "mmanning@vyatta.att-mail.com"]
crash: BUG: MAX_LOCKDEP_KEYS too low!
BUG: MAX_LOCKDEP_KEYS too low!
turning off the locking correctness validator.
CPU: 0 PID: 31831 Comm: syz-executor.3 Not tainted 5.4.0-rc3+ #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Call Trace:
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x113/0x167 lib/dump_stack.c:113
 register_lock_class.cold.69+0x1a/0x26 kernel/locking/lockdep.c:1222
 __lock_acquire+0xff/0x4ef0 kernel/locking/lockdep.c:3837
 lock_acquire+0x194/0x410 kernel/locking/lockdep.c:4487
 __raw_spin_lock_bh include/linux/spinlock_api_smp.h:135 [inline]
 _raw_spin_lock_bh+0x31/0x40 kernel/locking/spinlock.c:175
 spin_lock_bh include/linux/spinlock.h:343 [inline]
 netif_addr_lock_bh include/linux/netdevice.h:4066 [inline]
 __dev_mc_add+0x27/0xb0 net/core/dev_addr_lists.c:765
 dev_mc_add+0xb/0x10 net/core/dev_addr_lists.c:783
 igmp6_group_added+0x2da/0x370 net/ipv6/mcast.c:672
 __ipv6_dev_mc_inc+0x5f5/0x980 net/ipv6/mcast.c:931
 ipv6_dev_mc_inc+0xb/0x10 net/ipv6/mcast.c:938
 ipv6_add_dev+0x882/0xed0 net/ipv6/addrconf.c:456
 addrconf_notify+0x4de/0x1fe0 net/ipv6/addrconf.c:3491
 notifier_call_chain+0x8a/0x160 kernel/notifier.c:95
 __raw_notifier_call_chain kernel/notifier.c:396 [inline]
 raw_notifier_call_chain+0x11/0x20 kernel/notifier.c:403
 call_netdevice_notifiers_info+0x28/0x60 net/core/dev.c:1668
 call_netdevice_notifiers_extack net/core/dev.c:1680 [inline]
 call_netdevice_notifiers net/core/dev.c:1694 [inline]
 register_netdevice+0x82e/0x1020 net/core/dev.c:8945
 bond_newlink+0x29/0x60 drivers/net/bonding/bond_netlink.c:458
 __rtnl_newlink+0xcb9/0x1400 net/core/rtnetlink.c:3197
 rtnl_newlink+0x61/0x90 net/core/rtnetlink.c:3255
 rtnetlink_rcv_msg+0x34f/0x8f0 net/core/rtnetlink.c:5224
 netlink_rcv_skb+0x13c/0x380 net/netlink/af_netlink.c:2477
 rtnetlink_rcv+0x10/0x20 net/core/rtnetlink.c:5242
 netlink_unicast_kernel net/netlink/af_netlink.c:1302 [inline]
 netlink_unicast+0x43f/0x630 net/netlink/af_netlink.c:1328
 netlink_sendmsg+0x75d/0xc40 net/netlink/af_netlink.c:1917
 sock_sendmsg_nosec net/socket.c:637 [inline]
 sock_sendmsg+0xb5/0xf0 net/socket.c:657
 ___sys_sendmsg+0x647/0x950 net/socket.c:2311
 __sys_sendmsg+0xd9/0x180 net/socket.c:2356
 __do_sys_sendmsg net/socket.c:2365 [inline]
 __se_sys_sendmsg net/socket.c:2363 [inline]
 __x64_sys_sendmsg+0x73/0xb0 net/socket.c:2363
 do_syscall_64+0xca/0x5d0 arch/x86/entry/common.c:290
 entry_SYSCALL_64_after_hwframe+0x49/0xbe
RIP: 0033:0x459f39
Code: ad b6 fb ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 0f 83 7b b6 fb ff c3 66 2e 0f 1f 84 00 00 00 00
RSP: 002b:00007f9b6e09bc78 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 0000000000459f39
RDX: 0000000000000000 RSI: 0000000020000100 RDI: 0000000000000003
RBP: 000000000075bf20 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 00007f9b6e09c6d4
R13: 00000000004c8318 R14: 00000000004de5e8 R15: 00000000ffffffff
kobject: 'batman_adv' (00000000bcff84b6): kobject_add_internal: parent: 'bond995', set: '<NULL>'

