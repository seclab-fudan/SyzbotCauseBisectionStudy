bisecting cause commit starting from 9e6dfe8045f85f9b5aade47e4192482927e2791a
building syzkaller on 32329ceb4bbf58a21007c90edf2fb7ed242345db
testing commit 9e6dfe8045f85f9b5aade47e4192482927e2791a with gcc (GCC) 8.1.0
all runs: crashed: BUG: spinlock recursion in release_sock
testing release v5.2
testing commit 0ecfebd2b52404ae0c54a878c872bb93363ada36 with gcc (GCC) 8.1.0
all runs: OK
# git bisect start 9e6dfe8045f85f9b5aade47e4192482927e2791a v5.2
Bisecting: 7852 revisions left to test after this (roughly 13 steps)
[43c95d3694cc448fdf50bd53b7ff3a5bb4655883] Merge tag 'pinctrl-v5.3-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl
testing commit 43c95d3694cc448fdf50bd53b7ff3a5bb4655883 with gcc (GCC) 8.1.0
run #0: OK
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: crashed: general protection fault in send_hsr_supervision_frame
# git bisect bad 43c95d3694cc448fdf50bd53b7ff3a5bb4655883
Bisecting: 4619 revisions left to test after this (roughly 12 steps)
[8f6ccf6159aed1f04c6d179f61f6fb2691261e84] Merge tag 'clone3-v5.3' of git://git.kernel.org/pub/scm/linux/kernel/git/brauner/linux
testing commit 8f6ccf6159aed1f04c6d179f61f6fb2691261e84 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 8f6ccf6159aed1f04c6d179f61f6fb2691261e84
Bisecting: 2306 revisions left to test after this (roughly 11 steps)
[753c8d9b7d81206bb5d011b28abe829d364b028e] Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
testing commit 753c8d9b7d81206bb5d011b28abe829d364b028e with gcc (GCC) 8.1.0
run #0: OK
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: crashed: general protection fault in send_hsr_supervision_frame
run #8: OK
run #9: crashed: general protection fault in send_hsr_supervision_frame
# git bisect bad 753c8d9b7d81206bb5d011b28abe829d364b028e
Bisecting: 1156 revisions left to test after this (roughly 10 steps)
[2f9b0d93a9d3ec64558537ab5d7cff820886afa4] net: ethernet: ti: cpsw: Fix suspend/resume break
testing commit 2f9b0d93a9d3ec64558537ab5d7cff820886afa4 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 2f9b0d93a9d3ec64558537ab5d7cff820886afa4
Bisecting: 578 revisions left to test after this (roughly 9 steps)
[354d0fab649d47045517cf7cae03d653a4dcb3b8] net: hns3: add default value for tc_size and tc_offset
testing commit 354d0fab649d47045517cf7cae03d653a4dcb3b8 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 354d0fab649d47045517cf7cae03d653a4dcb3b8
Bisecting: 289 revisions left to test after this (roughly 8 steps)
[52c0609258658ff35b85c654c568a50abd602ac6] bnxt_en: rename some xdp functions
testing commit 52c0609258658ff35b85c654c568a50abd602ac6 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 52c0609258658ff35b85c654c568a50abd602ac6
Bisecting: 169 revisions left to test after this (roughly 7 steps)
[e858faf556d4e14c750ba1e8852783c6f9520a0e] tcp: Reset bytes_acked and bytes_received when disconnecting
testing commit e858faf556d4e14c750ba1e8852783c6f9520a0e with gcc (GCC) 8.1.0
all runs: OK
# git bisect good e858faf556d4e14c750ba1e8852783c6f9520a0e
Bisecting: 84 revisions left to test after this (roughly 6 steps)
[427545b3046326cd7b4dbbd7869f08737df2ad2b] nfp: tls: count TSO segments separately for the TLS offload
testing commit 427545b3046326cd7b4dbbd7869f08737df2ad2b with gcc (GCC) 8.1.0
run #0: OK
run #1: OK
run #2: OK
run #3: crashed: general protection fault in send_hsr_supervision_frame
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 427545b3046326cd7b4dbbd7869f08737df2ad2b
Bisecting: 48 revisions left to test after this (roughly 5 steps)
[bf0bdd1343efbbf65b4d53aef1fce14acbd79d50] xdp: fix race on generic receive path
testing commit bf0bdd1343efbbf65b4d53aef1fce14acbd79d50 with gcc (GCC) 8.1.0
run #0: basic kernel testing failed: failed to copy test binary to VM: failed to run ["scp" "-P" "22" "-F" "/dev/null" "-o" "UserKnownHostsFile=/dev/null" "-o" "BatchMode=yes" "-o" "IdentitiesOnly=yes" "-o" "StrictHostKeyChecking=no" "-o" "ConnectTimeout=10" "-i" "/syzkaller/jobs/linux/workdir/image/key" "/tmp/syz-executor614602534" "root@10.128.15.202:./syz-executor614602534"]: exit status 1
ssh: connect to host 10.128.15.202 port 22: Connection timed out
lost connection

run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect good bf0bdd1343efbbf65b4d53aef1fce14acbd79d50
Bisecting: 24 revisions left to test after this (roughly 5 steps)
[7650b1a9bd693d133a3ec0548ba63e828f34e3ec] Merge branch 'mp-inner-L3'
testing commit 7650b1a9bd693d133a3ec0548ba63e828f34e3ec with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 7650b1a9bd693d133a3ec0548ba63e828f34e3ec
Bisecting: 11 revisions left to test after this (roughly 4 steps)
[88e2f2846d901e1d61e99ac1d06544d41f478430] Merge branch 'Add-MPLS-actions-to-TC'
testing commit 88e2f2846d901e1d61e99ac1d06544d41f478430 with gcc (GCC) 8.1.0
run #0: OK
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: crashed: general protection fault in send_hsr_supervision_frame
run #9: crashed: general protection fault in send_hsr_supervision_frame
# git bisect bad 88e2f2846d901e1d61e99ac1d06544d41f478430
Bisecting: 6 revisions left to test after this (roughly 3 steps)
[6413139dfc641aaaa30580b59696a5f7ea274194] skbuff: increase verbosity when dumping skb data
testing commit 6413139dfc641aaaa30580b59696a5f7ea274194 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 6413139dfc641aaaa30580b59696a5f7ea274194
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[ed246cee09b9865145a2e1e34f63ec0e31dd83a5] net: core: move pop MPLS functionality from OvS to core helper
testing commit ed246cee09b9865145a2e1e34f63ec0e31dd83a5 with gcc (GCC) 8.1.0
run #0: OK
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: crashed: general protection fault in send_hsr_supervision_frame
# git bisect bad ed246cee09b9865145a2e1e34f63ec0e31dd83a5
Bisecting: 0 revisions left to test after this (roughly 1 step)
[8822e270d697010e6a4fd42a319dbefc33db91e1] net: core: move push MPLS functionality from OvS to core helper
testing commit 8822e270d697010e6a4fd42a319dbefc33db91e1 with gcc (GCC) 8.1.0
run #0: OK
run #1: OK
run #2: OK
run #3: OK
run #4: crashed: general protection fault in send_hsr_supervision_frame
run #5: OK
run #6: OK
run #7: OK
run #8: crashed: general protection fault in send_hsr_supervision_frame
run #9: crashed: general protection fault in send_hsr_supervision_frame
# git bisect bad 8822e270d697010e6a4fd42a319dbefc33db91e1
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[af144a983402f7fd324ce556d9f9011a8b3e01fe] Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net
testing commit af144a983402f7fd324ce556d9f9011a8b3e01fe with gcc (GCC) 8.1.0
all runs: OK
# git bisect good af144a983402f7fd324ce556d9f9011a8b3e01fe
8822e270d697010e6a4fd42a319dbefc33db91e1 is the first bad commit
commit 8822e270d697010e6a4fd42a319dbefc33db91e1
Author: John Hurley <john.hurley@netronome.com>
Date:   Sun Jul 7 15:01:54 2019 +0100

    net: core: move push MPLS functionality from OvS to core helper
    
    Open vSwitch provides code to push an MPLS header to a packet. In
    preparation for supporting this in TC, move the push code to an skb helper
    that can be reused.
    
    Signed-off-by: John Hurley <john.hurley@netronome.com>
    Reviewed-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Reviewed-by: Willem de Bruijn <willemb@google.com>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

:040000 040000 eff9d5f8339400e1ca6dc8a6e3d3cc0c95e62e20 3695e909ef5514d21f93dbf8258baa3a5be5e0a5 M	include
:040000 040000 ee87adad47b4c722bf01d1fa775256fae255b8e4 5a336263dc2c98b3868a12ceca96c684ceca1670 M	net
revisions tested: 17, total time: 4h36m51.669889774s (build: 1h37m32.266530773s, test: 2h53m44.618663548s)
first bad commit: 8822e270d697010e6a4fd42a319dbefc33db91e1 net: core: move push MPLS functionality from OvS to core helper
cc: ["davem@davemloft.net" "jakub.kicinski@netronome.com" "john.hurley@netronome.com" "simon.horman@netronome.com" "willemb@google.com" "xiyou.wangcong@gmail.com"]
crash: general protection fault in send_hsr_supervision_frame
kasan: CONFIG_KASAN_INLINE enabled
kasan: GPF could be caused by NULL-ptr deref or user memory access
general protection fault: 0000 [#1] PREEMPT SMP KASAN
CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.2.0-rc6+ #1
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
RIP: 0010:send_hsr_supervision_frame+0x30/0xf60 net/hsr/hsr_device.c:255
Code: 89 e5 41 57 41 56 41 55 49 89 fd 41 54 41 89 d4 48 89 c2 53 48 c1 ea 03 48 83 ec 50 48 89 45 d0 48 b8 00 00 00 00 00 fc ff df <80> 3c 02 00 89 75 c8 0f 85 83 0c 00 00 48 b8 00 00 00 00 00 fc ff
RSP: 0018:ffff8880aea09c68 EFLAGS: 00010282
RAX: dffffc0000000000 RBX: ffff8880a127cec0 RCX: 1ffff1101227ecd4
RDX: 0000000000000002 RSI: 0000000000000017 RDI: 0000000000000000
RBP: ffff8880aea09ce0 R08: ffffed1015d46c80 R09: ffffed1015d46c7f
R10: ffffed1015d46c7f R11: ffff8880aea363fb R12: 0000000000000000
R13: 0000000000000000 R14: ffff8880aea09db8 R15: ffff8880aea24b80
FS:  0000000000000000(0000) GS:ffff8880aea00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007fb1c7de5000 CR3: 000000009f67a000 CR4: 00000000001406f0
Call Trace:
 <IRQ>
 hsr_announce+0xd9/0x2b0 net/hsr/hsr_device.c:339
 call_timer_fn+0x14d/0x510 kernel/time/timer.c:1322
 expire_timers kernel/time/timer.c:1366 [inline]
 __run_timers kernel/time/timer.c:1685 [inline]
 run_timer_softirq+0xc6f/0x1330 kernel/time/timer.c:1698
 __do_softirq+0x260/0x958 kernel/softirq.c:292
 invoke_softirq kernel/softirq.c:373 [inline]
 irq_exit+0x17f/0x1c0 kernel/softirq.c:413
 exiting_irq arch/x86/include/asm/apic.h:536 [inline]
 smp_apic_timer_interrupt+0x13e/0x540 arch/x86/kernel/apic/apic.c:1068
 apic_timer_interrupt+0xf/0x20 arch/x86/entry/entry_64.S:806
 </IRQ>
RIP: 0010:native_safe_halt+0x12/0x20 arch/x86/include/asm/irqflags.h:61
Code: 11 ff ff ff 4c 89 e7 e8 2c 8e ef fa eb 97 90 90 90 90 90 90 90 90 90 90 55 48 89 e5 e9 07 00 00 00 0f 00 2d c0 1b 5e 00 fb f4 <5d> c3 66 90 66 2e 0f 1f 84 00 00 00 00 00 55 48 89 e5 e9 07 00 00
RSP: 0018:ffffffff88207ce0 EFLAGS: 00000282 ORIG_RAX: ffffffffffffff13
RAX: dffffc0000000000 RBX: ffffffff8827a040 RCX: 0000000000000000
RDX: 1ffffffff10643e1 RSI: 0000000000000006 RDI: ffffffff88321f08
RBP: ffffffff88207ce0 R08: 0000000000000006 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000
R13: ffffffff88321ef8 R14: 0000000000000000 R15: ffffffff88f6e578
 arch_safe_halt arch/x86/include/asm/paravirt.h:156 [inline]
 default_idle+0x51/0x310 arch/x86/kernel/process.c:580
 arch_cpu_idle+0xa/0x10 arch/x86/kernel/process.c:571
 default_idle_call+0x6d/0x90 kernel/sched/idle.c:94
 cpuidle_idle_call kernel/sched/idle.c:154 [inline]
 do_idle+0x3e4/0x590 kernel/sched/idle.c:263
 cpu_startup_entry+0x18/0x20 kernel/sched/idle.c:354
 rest_init+0x1a4/0x279 init/main.c:451
 arch_call_rest_init+0x9/0xc
 start_kernel+0x6bd/0x6f8 init/main.c:761
 x86_64_start_reservations+0x29/0x2b arch/x86/kernel/head64.c:470
 x86_64_start_kernel+0x76/0x79 arch/x86/kernel/head64.c:451
 secondary_startup_64+0xa4/0xb0 arch/x86/kernel/head_64.S:243
Modules linked in:
---[ end trace f192ee72138fbc32 ]---
RIP: 0010:send_hsr_supervision_frame+0x30/0xf60 net/hsr/hsr_device.c:255
Code: 89 e5 41 57 41 56 41 55 49 89 fd 41 54 41 89 d4 48 89 c2 53 48 c1 ea 03 48 83 ec 50 48 89 45 d0 48 b8 00 00 00 00 00 fc ff df <80> 3c 02 00 89 75 c8 0f 85 83 0c 00 00 48 b8 00 00 00 00 00 fc ff
RSP: 0018:ffff8880aea09c68 EFLAGS: 00010282
RAX: dffffc0000000000 RBX: ffff8880a127cec0 RCX: 1ffff1101227ecd4
RDX: 0000000000000002 RSI: 0000000000000017 RDI: 0000000000000000
RBP: ffff8880aea09ce0 R08: ffffed1015d46c80 R09: ffffed1015d46c7f
R10: ffffed1015d46c7f R11: ffff8880aea363fb R12: 0000000000000000
R13: 0000000000000000 R14: ffff8880aea09db8 R15: ffff8880aea24b80
FS:  0000000000000000(0000) GS:ffff8880aea00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007fb1c7de5000 CR3: 000000009f67a000 CR4: 00000000001406f0

