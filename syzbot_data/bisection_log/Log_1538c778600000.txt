bisecting cause commit starting from abf02e2964b3aaf1d5197c5d7c671e771b0e109e
building syzkaller on 34bf9440bd06034f86b5d9ac8afbf078129cbdae
testing commit abf02e2964b3aaf1d5197c5d7c671e771b0e109e with gcc (GCC) 8.1.0
all runs: crashed: memory leak in fdb_create
testing release v5.1
testing commit e93c9c99a629c61837d5a7fc2120cd2b6c70dbdd with gcc (GCC) 8.1.0
run #0: crashed: memory leak in batadv_tvlv_handler_register
run #1: crashed: memory leak in batadv_tvlv_handler_register
run #2: crashed: memory leak in batadv_tvlv_handler_register
run #3: crashed: memory leak in batadv_tvlv_handler_register
run #4: crashed: memory leak in hsr_add_port
run #5: crashed: memory leak in batadv_tvlv_handler_register
run #6: crashed: memory leak in hsr_add_port
run #7: crashed: memory leak in batadv_tvlv_handler_register
run #8: crashed: memory leak in hsr_add_port
run #9: crashed: memory leak in hsr_add_port
testing release v5.0
testing commit 1c163f4c7b3f621efff9b28a47abb36f7378d783 with gcc (GCC) 8.1.0
run #0: crashed: memory leak in batadv_tvlv_handler_register
run #1: crashed: memory leak in batadv_tvlv_handler_register
run #2: crashed: memory leak in batadv_tvlv_handler_register
run #3: crashed: memory leak in batadv_tvlv_handler_register
run #4: crashed: memory leak in hsr_add_port
run #5: crashed: memory leak in hsr_add_port
run #6: crashed: memory leak in hsr_add_port
run #7: crashed: memory leak in batadv_tvlv_handler_register
run #8: crashed: memory leak in hsr_add_port
run #9: crashed: memory leak in batadv_tvlv_handler_register
testing release v4.20
testing commit 8fe28cb58bcb235034b64cbbb7550a8a43fd88be with gcc (GCC) 8.1.0
all runs: crashed: memory leak in fdb_create
testing release v4.19
testing commit 84df9525b0c27f3ebc2ebb1864fa62a97fdedb7d with gcc (GCC) 8.1.0
run #0: crashed: memory leak in fdb_create
run #1: crashed: memory leak in fdb_create
run #2: crashed: memory leak in fdb_create
run #3: crashed: memory leak in fdb_create
run #4: crashed: memory leak in fdb_create
run #5: crashed: memory leak in fdb_create
run #6: crashed: memory leak in fdb_create
run #7: crashed: memory leak in fdb_create
run #8: crashed: memory leak in kobject_set_name_vargs
run #9: crashed: memory leak in fdb_create
testing release v4.18
testing commit 94710cac0ef4ee177a63b5227664b38c95bbf703 with gcc (GCC) 8.1.0
all runs: crashed: memory leak in corrupted
testing release v4.17
testing commit 29dcea88779c856c7dc92040a0c01233263101d4 with gcc (GCC) 8.1.0
all runs: crashed: memory leak in corrupted
testing release v4.16
testing commit 0adb32858b0bddf4ada5f364a84ed60b196dbcda with gcc (GCC) 8.1.0
all runs: crashed: memory leak in fdb_create
testing release v4.15
testing commit d8a5b80568a9cb66810e75b182018e9edb68e8ff with gcc (GCC) 8.1.0
all runs: crashed: WARNING: kobject bug in device_add
testing release v4.14
testing commit bebc6082da0a9f5d47a1ea2edc099bf671058bd4 with gcc (GCC) 8.1.0
all runs: crashed: WARNING: kobject bug in device_add
testing release v4.13
testing commit 569dbb88e80deb68974ef6fdd6a13edb9d686261 with gcc (GCC) 8.1.0
run #0: crashed: WARNING: kobject bug in device_add
run #1: crashed: WARNING: kobject bug in device_add
run #2: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #3: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #4: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #5: crashed: WARNING: kernel stack regs has bad 'bp' value
run #6: crashed: WARNING: kernel stack regs has bad 'bp' value
run #7: crashed: WARNING: kobject bug in device_add
run #8: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #9: crashed: WARNING: kernel stack regs has bad 'bp' value
testing release v4.12
testing commit 6f7da290413ba713f0cdd9ff1a2a9bb129ef4f6c with gcc (GCC) 8.1.0
run #0: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #1: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #2: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #3: crashed: memory leak in copy_process
run #4: crashed: WARNING: kernel stack regs has bad 'bp' value
run #5: crashed: memory leak in copy_process
run #6: crashed: WARNING: kernel stack regs has bad 'bp' value
run #7: crashed: WARNING: kernel stack regs has bad 'bp' value
run #8: crashed: WARNING: kernel stack regs has bad 'bp' value
run #9: crashed: memory leak in copy_process
testing release v4.11
testing commit a351e9b9fc24e982ec2f0e76379a49826036da12 with gcc (GCC) 7.3.0
all runs: crashed: memory leak in copy_process
testing release v4.10
testing commit c470abd4fde40ea6a0846a2beab642a578c0b8cd with gcc (GCC) 5.5.0
all runs: crashed: memory leak in copy_process
testing release v4.9
testing commit 69973b830859bc6529a7a0468ba0d80ee5117826 with gcc (GCC) 5.5.0
run #0: crashed: memory leak in copy_process
run #1: crashed: memory leak in copy_process
run #2: crashed: memory leak in copy_process
run #3: crashed: memory leak in copy_process
run #4: crashed: memory leak in copy_process
run #5: crashed: memory leak in copy_process
run #6: crashed: memory leak in copy_process
run #7: crashed: memory leak in __neigh_create
run #8: crashed: memory leak in copy_process
run #9: crashed: memory leak in copy_process
testing release v4.8
testing commit c8d2bc9bc39ebea8437fd974fdbc21847bb897a3 with gcc (GCC) 5.5.0
run #0: crashed: memory leak in batadv_tvlv_handler_register
run #1: crashed: memory leak in batadv_tvlv_handler_register
run #2: crashed: memory leak in batadv_tvlv_handler_register
run #3: crashed: memory leak in batadv_tvlv_handler_register
run #4: crashed: memory leak in batadv_tvlv_handler_register
run #5: OK
run #6: crashed: memory leak in batadv_tvlv_handler_register
run #7: crashed: memory leak in batadv_tvlv_handler_register
run #8: crashed: memory leak in batadv_tvlv_handler_register
run #9: crashed: memory leak in batadv_tvlv_handler_register
testing release v4.7
testing commit 523d939ef98fd712632d93a5a2b588e477a7565e with gcc (GCC) 5.5.0
run #0: crashed: memory leak in batadv_tvlv_handler_register
run #1: crashed: memory leak in batadv_tvlv_handler_register
run #2: crashed: memory leak in batadv_tvlv_handler_register
run #3: crashed: memory leak in batadv_tvlv_handler_register
run #4: crashed: memory leak in batadv_tvlv_handler_register
run #5: crashed: memory leak in batadv_tvlv_handler_register
run #6: crashed: memory leak in batadv_tvlv_handler_register
run #7: crashed: memory leak in batadv_tvlv_handler_register
run #8: crashed: memory leak in batadv_tvlv_handler_register
run #9: OK
testing release v4.6
testing commit 2dcd0af568b0cf583645c8a317dd12e344b1c72a with gcc (GCC) 5.5.0
all runs: OK
# git bisect start v4.7 v4.6
Bisecting: 6716 revisions left to test after this (roughly 13 steps)
[0694f0c9e20c47063e4237e5f6649ae5ce5a369a] radix tree test suite: remove dependencies on height
testing commit 0694f0c9e20c47063e4237e5f6649ae5ce5a369a with gcc (GCC) 5.5.0
run #0: crashed: memory leak in next_bio
run #1: crashed: memory leak in next_bio
run #2: crashed: memory leak in next_bio
run #3: crashed: memory leak in next_bio
run #4: crashed: memory leak in next_bio
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 0694f0c9e20c47063e4237e5f6649ae5ce5a369a
Bisecting: 3281 revisions left to test after this (roughly 12 steps)
[a7fd20d1c476af4563e66865213474a2f9f473a4] Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next
testing commit a7fd20d1c476af4563e66865213474a2f9f473a4 with gcc (GCC) 5.5.0
all runs: OK
# git bisect good a7fd20d1c476af4563e66865213474a2f9f473a4
Bisecting: 1640 revisions left to test after this (roughly 11 steps)
[b3d424f1a534949bce27847aa871b3ce75c60f4d] tile: mm: use hugetlb_bad_size()
testing commit b3d424f1a534949bce27847aa871b3ce75c60f4d with gcc (GCC) 5.5.0
run #0: crashed: memory leak in next_bio
run #1: crashed: memory leak in next_bio
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad b3d424f1a534949bce27847aa871b3ce75c60f4d
Bisecting: 770 revisions left to test after this (roughly 10 steps)
[f7df9be067160eef52f04bd2f137a20683fb1c12] Merge tag 'armsoc-dt' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc
testing commit f7df9be067160eef52f04bd2f137a20683fb1c12 with gcc (GCC) 5.5.0
run #0: crashed: memory leak in next_bio
run #1: crashed: memory leak in next_bio
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad f7df9be067160eef52f04bd2f137a20683fb1c12
Bisecting: 453 revisions left to test after this (roughly 9 steps)
[10bd9eb7dddb5046399cbfa6cf24a1f302fd7fce] Merge tag 'davinci-for-v4.7/dt-part2' of git://git.kernel.org/pub/scm/linux/kernel/git/nsekhar/linux-davinci into next/dt
testing commit 10bd9eb7dddb5046399cbfa6cf24a1f302fd7fce with gcc (GCC) 5.5.0
all runs: OK
# git bisect good 10bd9eb7dddb5046399cbfa6cf24a1f302fd7fce
Bisecting: 223 revisions left to test after this (roughly 8 steps)
[9e17632c0a146891c90a4353a160cfcf71f34b8f] Merge branch 'work.misc' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs
testing commit 9e17632c0a146891c90a4353a160cfcf71f34b8f with gcc (GCC) 5.5.0
run #0: crashed: memory leak in next_bio
run #1: crashed: memory leak in next_bio
run #2: crashed: memory leak in next_bio
run #3: crashed: memory leak in next_bio
run #4: crashed: memory leak in next_bio
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 9e17632c0a146891c90a4353a160cfcf71f34b8f
Bisecting: 114 revisions left to test after this (roughly 7 steps)
[0c60de3f73cddde6a83979c64f63cb1101f5326c] gpio: xgene: Enable ACPI support for X-Gene GFC GPIO driver
testing commit 0c60de3f73cddde6a83979c64f63cb1101f5326c with gcc (GCC) 5.5.0
/syzkaller/jobs/linux/kernel/net/openvswitch/conntrack.c:540: undefined reference to `nf_nat_icmp_reply_translation'
# git bisect skip 0c60de3f73cddde6a83979c64f63cb1101f5326c
Bisecting: 114 revisions left to test after this (roughly 7 steps)
[5e0ec14e2f84b62182d9be00f2595302424a7e03] pinctrl: sirf/atlas7: fix printk spelling
testing commit 5e0ec14e2f84b62182d9be00f2595302424a7e03 with gcc (GCC) 5.5.0
all runs: OK
# git bisect good 5e0ec14e2f84b62182d9be00f2595302424a7e03
Bisecting: 106 revisions left to test after this (roughly 7 steps)
[a8fa91a74fc385da5d52fd1008c8fd322154cad8] gpio/qoriq: select IRQ_DOMAIN
testing commit a8fa91a74fc385da5d52fd1008c8fd322154cad8 with gcc (GCC) 5.5.0
/syzkaller/jobs/linux/kernel/net/openvswitch/conntrack.c:540: undefined reference to `nf_nat_icmp_reply_translation'
# git bisect skip a8fa91a74fc385da5d52fd1008c8fd322154cad8
Bisecting: 106 revisions left to test after this (roughly 7 steps)
[04cf31a759ef575f750a63777cee95500e410994] ftrace: Make ftrace_location_range() global
testing commit 04cf31a759ef575f750a63777cee95500e410994 with gcc (GCC) 5.5.0
run #0: basic kernel testing failed: failed to copy test binary to VM: failed to run ["scp" "-P" "22" "-F" "/dev/null" "-o" "UserKnownHostsFile=/dev/null" "-o" "BatchMode=yes" "-o" "IdentitiesOnly=yes" "-o" "StrictHostKeyChecking=no" "-o" "ConnectTimeout=10" "-i" "/syzkaller/jobs/linux/workdir/image/key" "/tmp/syz-executor280778212" "root@10.128.1.42:./syz-executor280778212"]: exit status 1
ssh: connect to host 10.128.1.42 port 22: Connection timed out
lost connection

run #1: basic kernel testing failed: failed to copy test binary to VM: failed to run ["scp" "-P" "22" "-F" "/dev/null" "-o" "UserKnownHostsFile=/dev/null" "-o" "BatchMode=yes" "-o" "IdentitiesOnly=yes" "-o" "StrictHostKeyChecking=no" "-o" "ConnectTimeout=10" "-i" "/syzkaller/jobs/linux/workdir/image/key" "/tmp/syz-executor205951987" "root@10.128.10.56:./syz-executor205951987"]: exit status 1
ssh: connect to host 10.128.10.56 port 22: Connection timed out
lost connection

run #2: basic kernel testing failed: failed to copy test binary to VM: failed to run ["scp" "-P" "22" "-F" "/dev/null" "-o" "UserKnownHostsFile=/dev/null" "-o" "BatchMode=yes" "-o" "IdentitiesOnly=yes" "-o" "StrictHostKeyChecking=no" "-o" "ConnectTimeout=10" "-i" "/syzkaller/jobs/linux/workdir/image/key" "/tmp/syz-executor214434486" "root@10.128.10.61:./syz-executor214434486"]: exit status 1
ssh: connect to host 10.128.10.61 port 22: Connection timed out
lost connection

run #3: crashed: INFO: rcu detected stall in corrupted
run #4: crashed: INFO: rcu detected stall in corrupted
run #5: crashed: INFO: rcu detected stall in cleanup_net
run #6: crashed: INFO: rcu detected stall in cleanup_net
run #7: crashed: INFO: rcu detected stall in cleanup_net
run #8: crashed: INFO: rcu detected stall in cleanup_net
run #9: crashed: INFO: rcu detected stall in cleanup_net
# git bisect bad 04cf31a759ef575f750a63777cee95500e410994
04cf31a759ef575f750a63777cee95500e410994 is the first bad commit
commit 04cf31a759ef575f750a63777cee95500e410994
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Thu Mar 24 22:04:01 2016 +1100

    ftrace: Make ftrace_location_range() global
    
    In order to support live patching on powerpc we would like to call
    ftrace_location_range(), so make it global.
    
    Signed-off-by: Torsten Duwe <duwe@suse.de>
    Signed-off-by: Balbir Singh <bsingharora@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

:040000 040000 29dab062e10671aa0bfa2e89ece0962ad60ba0b3 60bf4174cf6e4adf61c6859b71fa6fbdda01f81a M	include
:040000 040000 cb38245ea419520fe260a96c743544532eb6c240 15ac83f09134ca6a5d072949f37c11be1cc6a962 M	kernel
revisions tested: 28, total time: 5h34m4.223498179s (build: 1h35m37.832249735s, test: 3h50m31.045326964s)
first bad commit: 04cf31a759ef575f750a63777cee95500e410994 ftrace: Make ftrace_location_range() global
cc: ["bsingharora@gmail.com" "duwe@suse.de" "linux-kernel@vger.kernel.org" "mingo@redhat.com" "mpe@ellerman.id.au" "rostedt@goodmis.org"]
crash: INFO: rcu detected stall in cleanup_net
kmemleak: 566 new suspected memory leaks (see /sys/kernel/debug/kmemleak)
IPv6: ADDRCONF(NETDEV_CHANGE): nr3: link becomes ready
INFO: rcu_preempt self-detected stall on CPU
	1-...: (1 GPs behind) idle=76b/140000000000001/0 softirq=36278/36278 fqs=9971 
	 (t=10000 jiffies g=1265 c=1264 q=6145)
Task dump for CPU 1:
kworker/u4:2    R  running task        0    68      2 0x00000008
Workqueue: netns cleanup_net
 0000000000000002 ffff88012c103dc0 ffffffff8117fac6 0000000000000001
 ffffffff8305f240 ffff88012c103dd8 ffffffff81181f42 0000000000000002
 ffff88012c103e08 ffffffff811ae3f9 ffff88012c117200 ffffffff8305f240
Call Trace:
 <IRQ>  [<ffffffff8117fac6>] sched_show_task+0xb6/0x120 kernel/sched/core.c:5036
 [<ffffffff81181f42>] dump_cpu_task+0x32/0x40 kernel/sched/core.c:8717
 [<ffffffff811ae3f9>] rcu_dump_cpu_stacks+0x89/0xe0 kernel/rcu/tree.c:1247
 [<ffffffff811b2768>] print_cpu_stall kernel/rcu/tree.c:1354 [inline]
 [<ffffffff811b2768>] check_cpu_stall kernel/rcu/tree.c:1418 [inline]
 [<ffffffff811b2768>] __rcu_pending kernel/rcu/tree.c:3906 [inline]
 [<ffffffff811b2768>] rcu_pending kernel/rcu/tree.c:3970 [inline]
 [<ffffffff811b2768>] rcu_check_callbacks+0x4c8/0x890 kernel/rcu/tree.c:2795
 [<ffffffff811b7a94>] update_process_times+0x34/0x60 kernel/time/timer.c:1420
 [<ffffffff811c5a51>] tick_sched_handle.isra.16+0x31/0x40 kernel/time/tick-sched.c:152
 [<ffffffff811c5a98>] tick_sched_timer+0x38/0x70 kernel/time/tick-sched.c:1088
 [<ffffffff811b8243>] __run_hrtimer kernel/time/hrtimer.c:1248 [inline]
 [<ffffffff811b8243>] __hrtimer_run_queues+0x93/0x210 kernel/time/hrtimer.c:1312
 [<ffffffff811b8957>] hrtimer_interrupt+0xa7/0x1a0 kernel/time/hrtimer.c:1346
 [<ffffffff810a9651>] local_apic_timer_interrupt+0x31/0x50 arch/x86/kernel/apic/apic.c:907
 [<ffffffff810aa0c8>] smp_apic_timer_interrupt+0x38/0x50 arch/x86/kernel/apic/apic.c:931
 [<ffffffff8245ceb2>] apic_timer_interrupt+0x82/0x90 arch/x86/entry/entry_64.S:687
 <EOI>  [<ffffffff81197498>] ? rep_nop arch/x86/include/asm/processor.h:562 [inline]
 <EOI>  [<ffffffff81197498>] ? cpu_relax arch/x86/include/asm/processor.h:567 [inline]
 <EOI>  [<ffffffff81197498>] ? virt_spin_lock arch/x86/include/asm/qspinlock.h:57 [inline]
 <EOI>  [<ffffffff81197498>] ? native_queued_spin_lock_slowpath+0x18/0x1b0 kernel/locking/qspinlock.c:304
 [<ffffffff8206af8d>] spin_lock include/linux/spinlock.h:302 [inline]
 [<ffffffff8206af8d>] nf_conntrack_lock+0xd/0x50 net/netfilter/nf_conntrack_core.c:74
 [<ffffffff8207e023>] ctnl_untimeout.isra.4+0xc3/0xf0 net/netfilter/nfnetlink_cttimeout.c:315
 [<ffffffff8207e078>] cttimeout_net_exit+0x28/0x80 net/netfilter/nfnetlink_cttimeout.c:581
 [<ffffffff81fed023>] ops_exit_list.isra.4+0x33/0x60 net/core/net_namespace.c:134
 [<ffffffff81fede9b>] cleanup_net+0x19b/0x260 net/core/net_namespace.c:431
 [<ffffffff8116d420>] process_one_work+0x150/0x400 kernel/workqueue.c:2036
 [<ffffffff8116d719>] worker_thread+0x49/0x470 kernel/workqueue.c:2170
 [<ffffffff811731b4>] kthread+0xc4/0xe0 drivers/block/aoe/aoecmd.c:1312
 [<ffffffff8245c4cf>] ret_from_fork+0x3f/0x70 arch/x86/entry/entry_64.S:468
INFO: rcu_sched detected stalls on CPUs/tasks:
	1-...: (1 GPs behind) idle=76b/140000000000000/0 softirq=35942/36278 fqs=9951 
	(detected by 0, t=10003 jiffies, g=-117, c=-118, q=1)
Task dump for CPU 1:
kworker/u4:2    R  running task        0    68      2 0x00000008
Workqueue: netns cleanup_net
 ffffffff82457dc6 ffff8800ac757b08 ffff88012b04cf40 ffff88012b0f6080
 ffff88012b208000 ffff88012b207d58 ffff88012b207d50 ffff88012b0f6080
 ffff88012b207d70 ffff88012b207c10 ffffffff824583e4 7fffffffffffffff
Call Trace:

