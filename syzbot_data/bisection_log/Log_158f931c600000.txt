bisecting cause commit starting from ee1c7bd33e66376067fd6306b730789ee2ae53e4
building syzkaller on ef801a3eab3f5c84fa7f61fd739c9fcb45925caa
testing commit ee1c7bd33e66376067fd6306b730789ee2ae53e4 with gcc (GCC) 8.1.0
all runs: crashed: general protection fault in packet_lookup_frame
testing release v5.2
testing commit 0ecfebd2b52404ae0c54a878c872bb93363ada36 with gcc (GCC) 8.1.0
all runs: crashed: general protection fault in packet_lookup_frame
testing release v5.1
testing commit e93c9c99a629c61837d5a7fc2120cd2b6c70dbdd with gcc (GCC) 8.1.0
all runs: crashed: general protection fault in packet_lookup_frame
testing release v5.0
testing commit 1c163f4c7b3f621efff9b28a47abb36f7378d783 with gcc (GCC) 8.1.0
all runs: crashed: general protection fault in packet_lookup_frame
testing release v4.20
testing commit 8fe28cb58bcb235034b64cbbb7550a8a43fd88be with gcc (GCC) 8.1.0
run #0: crashed: general protection fault in packet_lookup_frame
run #1: crashed: general protection fault in packet_lookup_frame
run #2: crashed: general protection fault in packet_lookup_frame
run #3: crashed: general protection fault in packet_lookup_frame
run #4: crashed: general protection fault in packet_lookup_frame
run #5: crashed: general protection fault in packet_lookup_frame
run #6: crashed: general protection fault in packet_lookup_frame
run #7: crashed: general protection fault in packet_lookup_frame
run #8: crashed: general protection fault in corrupted
run #9: crashed: general protection fault in packet_lookup_frame
testing release v4.19
testing commit 84df9525b0c27f3ebc2ebb1864fa62a97fdedb7d with gcc (GCC) 8.1.0
all runs: crashed: general protection fault in packet_lookup_frame
testing release v4.18
testing commit 94710cac0ef4ee177a63b5227664b38c95bbf703 with gcc (GCC) 8.1.0
all runs: crashed: general protection fault in packet_lookup_frame
testing release v4.17
testing commit 29dcea88779c856c7dc92040a0c01233263101d4 with gcc (GCC) 8.1.0
all runs: crashed: general protection fault in packet_lookup_frame
testing release v4.16
testing commit 0adb32858b0bddf4ada5f364a84ed60b196dbcda with gcc (GCC) 8.1.0
all runs: crashed: general protection fault in packet_lookup_frame
testing release v4.15
testing commit d8a5b80568a9cb66810e75b182018e9edb68e8ff with gcc (GCC) 8.1.0
all runs: crashed: general protection fault in packet_lookup_frame
testing release v4.14
testing commit bebc6082da0a9f5d47a1ea2edc099bf671058bd4 with gcc (GCC) 8.1.0
all runs: crashed: general protection fault in packet_lookup_frame
testing release v4.13
testing commit 569dbb88e80deb68974ef6fdd6a13edb9d686261 with gcc (GCC) 8.1.0
all runs: crashed: general protection fault in packet_lookup_frame
testing release v4.12
testing commit 6f7da290413ba713f0cdd9ff1a2a9bb129ef4f6c with gcc (GCC) 8.1.0
all runs: crashed: general protection fault in packet_lookup_frame
testing release v4.11
testing commit a351e9b9fc24e982ec2f0e76379a49826036da12 with gcc (GCC) 7.3.0
all runs: crashed: general protection fault in packet_lookup_frame
testing release v4.10
testing commit c470abd4fde40ea6a0846a2beab642a578c0b8cd with gcc (GCC) 5.5.0
all runs: crashed: general protection fault in packet_lookup_frame
testing release v4.9
testing commit 69973b830859bc6529a7a0468ba0d80ee5117826 with gcc (GCC) 5.5.0
all runs: crashed: general protection fault in packet_lookup_frame
testing release v4.8
testing commit c8d2bc9bc39ebea8437fd974fdbc21847bb897a3 with gcc (GCC) 5.5.0
all runs: crashed: general protection fault in packet_lookup_frame
testing release v4.7
testing commit 523d939ef98fd712632d93a5a2b588e477a7565e with gcc (GCC) 5.5.0
all runs: crashed: general protection fault in packet_lookup_frame
testing release v4.6
testing commit 2dcd0af568b0cf583645c8a317dd12e344b1c72a with gcc (GCC) 5.5.0
all runs: crashed: general protection fault in packet_lookup_frame
testing release v4.5
testing commit b562e44f507e863c6792946e4e1b1449fbbac85d with gcc (GCC) 5.5.0
run #0: crashed: BUG: unable to handle kernel
run #1: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #2: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #3: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #4: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #5: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #6: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #7: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #8: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #9: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
testing release v4.4
testing commit afd2ff9b7e1b367172f18ba7f693dfb62bdcb2dc with gcc (GCC) 5.5.0
run #0: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #1: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #2: crashed: BUG: unable to handle kernel
run #3: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #4: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #5: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #6: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #7: crashed: BUG: unable to handle kernel
run #8: crashed: BUG: unable to handle kernel
run #9: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
testing release v4.3
testing commit 6a13feb9c82803e2b815eca72fa7a9f5561d7861 with gcc (GCC) 5.5.0
run #0: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #1: crashed: BUG: unable to handle kernel
run #2: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #3: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #4: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #5: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #6: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #7: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #8: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #9: crashed: BUG: unable to handle kernel
testing release v4.2
testing commit 64291f7db5bd8150a74ad2036f1037e6a0428df2 with gcc (GCC) 5.5.0
all runs: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
testing release v4.1
testing commit b953c0d234bc72e8489d3bf51a276c5c4ec85345 with gcc (GCC) 5.5.0
run #0: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #1: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #2: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #3: crashed: BUG: unable to handle kernel
run #4: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #5: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #6: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #7: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #8: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
run #9: crashed: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
revisions tested: 24, total time: 3h32m5.166891304s (build: 1h47m47.95103053s, test: 1h37m11.637010504s)
the crash already happened on the oldest tested release
crash: BUG: unable to handle kernel NULL pointer dereference in packet_lookup_frame
net_ratelimit: 20 callbacks suppressed
syz-executor.2: packet size is too short (0 <= 14)
syz-executor.5: packet size is too short (0 <= 14)
syz-executor.4: packet size is too short (0 <= 14)
syz-executor.1: packet size is too short (0 <= 14)
BUG: unable to handle kernel NULL pointer dereference at           (null)
IP: [<ffffffff82336f00>] packet_lookup_frame.isra.50+0x10/0x50 net/packet/af_packet.c:499
PGD b0a01067 PUD b1ae0067 PMD 0 
Oops: 0000 [#1] [   72.688595] kobject: 'loop3' (ffff8800bac5b0a0): kobject_uevent_env
kobject: 'loop3' (ffff8800bac5b0a0): fill_kobj_path: path = '/devices/virtual/block/loop3'
PREEMPT SMP 
Modules linked in:
CPU: 0 PID: 8541 Comm: syz-executor.0 Not tainted 4.1.0 #1
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
task: ffff8800b0bfaa90 ti: ffff8800af758000 task.ti: ffff8800af758000
RIP: 0010:[<ffffffff82336f00>]  [<ffffffff82336f00>] packet_lookup_frame.isra.50+0x10/0x50 net/packet/af_packet.c:499
RSP: 0018:ffff8800af75bb70  EFLAGS: 00010206
RAX: 0000000000000000 RBX: ffff8800af75be28 RCX: 0000000000000000
RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff8800b09df000
RBP: ffff8800af75bc48 R08: 0000000000000000 R09: 0000000000000001
R10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000000
R13: 0000000000000000 R14: ffff8800b09df000 R15: ffff8800b8ace000
FS:  00007f842b733700(0000) GS:ffff88012c000000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000000 CR3: 00000000af700000 CR4: 00000000001407f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Stack:
 ffffffff82339052 ffff8800af75bc28 ffff8800b0bfb078 0000000081814300
 0000000000000000 ffff8800b09df6a0 0000000000000002 ffff8800af75bbc0
 000005ee00000000 ffff8800af750000 0000000000000000 ffff8800b09df000
Call Trace:
 [<ffffffff820d6365>] sock_sendmsg_nosec net/socket.c:613 [inline]
 [<ffffffff820d6365>] sock_sendmsg+0x35/0x40 net/socket.c:623
 [<ffffffff820d6b50>] ___sys_sendmsg+0x110/0x2d0 net/socket.c:1955
 [<ffffffff820d7e4f>] __sys_sendmmsg+0x8f/0x1a0 net/socket.c:2040
 [<ffffffff820d7f6d>] SYSC_sendmmsg net/socket.c:2068 [inline]
 [<ffffffff820d7f6d>] SyS_sendmmsg+0xd/0x20 net/socket.c:2063
 [<ffffffff8264c772>] system_call_fastpath+0x16/0x7a
Code: b3 f9 82 be b1 01 00 00 31 c0 48 89 e5 48 c7 c7 de 32 f8 82 e8 c2 5e e3 fe 0f 0b 41 89 d2 44 89 c0 31 d2 41 f7 f2 89 c0 0f af ca <48> 03 0c c6 48 89 c8 8b 97 3c 07 00 00 85 d2 74 05 83 fa 01 75 
RIP  [<ffffffff82336f00>] packet_lookup_frame.isra.50+0x10/0x50 net/packet/af_packet.c:499
 RSP <ffff8800af75bb70>
CR2: 0000000000000000
---[ end trace ab2c6ee37df673cd ]---

