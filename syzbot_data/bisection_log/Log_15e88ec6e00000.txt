bisecting cause commit starting from 36487907f34131c7e3df5b1e6b30b4e3dfcdc0af
building syzkaller on d646e21ff436cd2a40b23314436cd53f21ae9500
testing commit 36487907f34131c7e3df5b1e6b30b4e3dfcdc0af with gcc (GCC) 8.1.0
kernel signature: a432a4af86904732a548db624168350ad50f27bf
run #0: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #1: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #2: crashed: WARNING in mark_lock
run #3: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #4: crashed: WARNING in mark_lock
run #5: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #6: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #7: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #8: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #9: crashed: WARNING: bad unlock balance in sch_direct_xmit
testing release v5.4
testing commit 219d54332a09e8d8741c1e1982f5eae56099de85 with gcc (GCC) 8.1.0
kernel signature: 6ed89686d2ed5316e8998aa6eb1b303c2fb6ccef
run #0: crashed: WARNING in mark_lock
run #1: crashed: WARNING in mark_lock
run #2: crashed: WARNING in mark_lock
run #3: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #4: crashed: WARNING in mark_lock
run #5: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #6: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #7: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #8: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #9: OK
testing release v5.3
testing commit 4d856f72c10ecb060868ed10ff1b1453943fc6c8 with gcc (GCC) 8.1.0
kernel signature: 68ccba0f6707c1656e08a6e667e88928e6c68c01
all runs: OK
# git bisect start 219d54332a09e8d8741c1e1982f5eae56099de85 4d856f72c10ecb060868ed10ff1b1453943fc6c8
Bisecting: 7882 revisions left to test after this (roughly 13 steps)
[a9f8b38a071b468276a243ea3ea5a0636e848cf2] Merge tag 'for-linus-5.4-1' of git://github.com/cminyard/linux-ipmi
testing commit a9f8b38a071b468276a243ea3ea5a0636e848cf2 with gcc (GCC) 8.1.0
kernel signature: 81a81fd1ce872ae1fdd9a062fbf391b6a5f7fbb8
all runs: OK
# git bisect good a9f8b38a071b468276a243ea3ea5a0636e848cf2
Bisecting: 3941 revisions left to test after this (roughly 12 steps)
[0a3775e4f883912944481cf2ef36eb6383a9cc74] ocfs2: wait for recovering done after direct unlock request
testing commit 0a3775e4f883912944481cf2ef36eb6383a9cc74 with gcc (GCC) 8.1.0
kernel signature: 64091580d04a0f98c63bce13205a1aa1d58b06dc
all runs: OK
# git bisect good 0a3775e4f883912944481cf2ef36eb6383a9cc74
Bisecting: 1972 revisions left to test after this (roughly 11 steps)
[63f9bff56beb718ac0a2eb8398a98220b1e119dc] Merge tag 'mips_fixes_5.4_2' of git://git.kernel.org/pub/scm/linux/kernel/git/mips/linux
testing commit 63f9bff56beb718ac0a2eb8398a98220b1e119dc with gcc (GCC) 8.1.0
kernel signature: c8304bc1b5e581eda27465fccea7d88be0dd39d9
all runs: OK
# git bisect good 63f9bff56beb718ac0a2eb8398a98220b1e119dc
Bisecting: 988 revisions left to test after this (roughly 10 steps)
[65a5bf1c790039dc194507563478137b4314a59d] Merge tag 'pm-5.4-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm
testing commit 65a5bf1c790039dc194507563478137b4314a59d with gcc (GCC) 8.1.0
kernel signature: d09c071ce54dfc320fb6bef90d95df96244f5d32
all runs: OK
# git bisect good 65a5bf1c790039dc194507563478137b4314a59d
Bisecting: 441 revisions left to test after this (roughly 9 steps)
[0058b0a506e40d9a2c62015fe92eb64a44d78cd9] Merge git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net
testing commit 0058b0a506e40d9a2c62015fe92eb64a44d78cd9 with gcc (GCC) 8.1.0
kernel signature: e5f9d00eae955affa7c4d9e9fa2f52b3d463d1fe
run #0: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #1: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #2: crashed: WARNING in mark_lock
run #3: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #4: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #5: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #6: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #7: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #8: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #9: crashed: WARNING: bad unlock balance in sch_direct_xmit
# git bisect bad 0058b0a506e40d9a2c62015fe92eb64a44d78cd9
Bisecting: 272 revisions left to test after this (roughly 8 steps)
[9d2345057538bb97b1e556508ad69983f446462f] Merge tag 'hwmon-for-v5.4-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging
testing commit 9d2345057538bb97b1e556508ad69983f446462f with gcc (GCC) 8.1.0
kernel signature: e2ca3b33f34fd9463e32c2e3c2cd6074a01f9b18
run #0: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #1: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #2: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #3: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #4: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #5: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #6: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #7: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #8: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #9: OK
# git bisect bad 9d2345057538bb97b1e556508ad69983f446462f
Bisecting: 136 revisions left to test after this (roughly 7 steps)
[451fe015b2857de3d8027ef606284a205e177724] ixgbe: Remove duplicate clear_bit() call
testing commit 451fe015b2857de3d8027ef606284a205e177724 with gcc (GCC) 8.1.0
kernel signature: 51c50882b55c27f351a1f4e4a6a234e626a397e6
run #0: crashed: WARNING in mark_lock
run #1: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #2: crashed: WARNING in mark_lock
run #3: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #4: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #5: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #6: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #7: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #8: OK
run #9: OK
# git bisect bad 451fe015b2857de3d8027ef606284a205e177724
Bisecting: 71 revisions left to test after this (roughly 6 steps)
[1a51a47491a5a23f0625b03ad6dc84cf39bf6a82] Merge git://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf
testing commit 1a51a47491a5a23f0625b03ad6dc84cf39bf6a82 with gcc (GCC) 8.1.0
kernel signature: f5cd17bb8ffe1fe91d0a8cf58e8095d740dc67c1
run #0: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #1: crashed: WARNING in mark_lock
run #2: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #3: crashed: WARNING in mark_lock
run #4: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #5: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #6: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #7: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #8: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #9: crashed: WARNING: bad unlock balance in sch_direct_xmit
# git bisect bad 1a51a47491a5a23f0625b03ad6dc84cf39bf6a82
Bisecting: 32 revisions left to test after this (roughly 5 steps)
[76db2d466f6a929a04775f0f87d837e3bcba44e8] net: phy: smsc: LAN8740: add PHY_RST_AFTER_CLK_EN flag
testing commit 76db2d466f6a929a04775f0f87d837e3bcba44e8 with gcc (GCC) 8.1.0
kernel signature: 7395ff37a0850fbf67fda18109eb52d6f8e60250
all runs: OK
# git bisect good 76db2d466f6a929a04775f0f87d837e3bcba44e8
Bisecting: 16 revisions left to test after this (roughly 4 steps)
[f536dffc0b79738c3104af999318279dccbaa261] net/smc: fix closing of fallback SMC sockets
testing commit f536dffc0b79738c3104af999318279dccbaa261 with gcc (GCC) 8.1.0
kernel signature: 0de9ba1bf44722faf958bb6d7b89006daf29295c
run #0: crashed: WARNING in mark_lock
run #1: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #2: crashed: WARNING in mark_lock
run #3: crashed: WARNING in mark_lock
run #4: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #5: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #6: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #7: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #8: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #9: OK
# git bisect bad f536dffc0b79738c3104af999318279dccbaa261
Bisecting: 7 revisions left to test after this (roughly 3 steps)
[32b6d34fedc2229cdf6a047fdbc0704085441915] net: core: add ignore flag to netdev_adjacent structure
testing commit 32b6d34fedc2229cdf6a047fdbc0704085441915 with gcc (GCC) 8.1.0
kernel signature: 40e4c59a7712cc4cb9317e09bd4c6e54c5c0317c
run #0: crashed: WARNING in mark_lock
run #1: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #2: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #3: crashed: WARNING in mark_lock
run #4: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #5: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #6: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #7: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #8: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #9: crashed: WARNING: bad unlock balance in sch_direct_xmit
# git bisect bad 32b6d34fedc2229cdf6a047fdbc0704085441915
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[65de65d9033750d2cf1b336c9d6e9da3a8b5cc6e] bonding: fix unexpected IFF_BONDING bit unset
testing commit 65de65d9033750d2cf1b336c9d6e9da3a8b5cc6e with gcc (GCC) 8.1.0
kernel signature: 72636c35f75b0631b97ad2f0b7ea8e89938c34e3
run #0: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #1: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #2: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #3: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #4: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #5: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #6: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #7: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #8: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #9: OK
# git bisect bad 65de65d9033750d2cf1b336c9d6e9da3a8b5cc6e
Bisecting: 1 revision left to test after this (roughly 1 step)
[5343da4c17429efaa5fb1594ea96aee1a283e694] net: core: limit nested device depth
testing commit 5343da4c17429efaa5fb1594ea96aee1a283e694 with gcc (GCC) 8.1.0
kernel signature: c812376a72d65f901e32f60900a12818771f45fe
all runs: OK
# git bisect good 5343da4c17429efaa5fb1594ea96aee1a283e694
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[ab92d68fc22f9afab480153bd82a20f6e2533769] net: core: add generic lockdep keys
testing commit ab92d68fc22f9afab480153bd82a20f6e2533769 with gcc (GCC) 8.1.0
kernel signature: 466fc73a7e9eef3bac2a9f3101e0f87885eb6c41
run #0: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #1: crashed: WARNING in mark_lock
run #2: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #3: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #4: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #5: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #6: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #7: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #8: crashed: WARNING: bad unlock balance in sch_direct_xmit
run #9: crashed: WARNING in mark_lock
# git bisect bad ab92d68fc22f9afab480153bd82a20f6e2533769
ab92d68fc22f9afab480153bd82a20f6e2533769 is the first bad commit
commit ab92d68fc22f9afab480153bd82a20f6e2533769
Author: Taehee Yoo <ap420073@gmail.com>
Date:   Mon Oct 21 18:47:51 2019 +0000

    net: core: add generic lockdep keys
    
    Some interface types could be nested.
    (VLAN, BONDING, TEAM, MACSEC, MACVLAN, IPVLAN, VIRT_WIFI, VXLAN, etc..)
    These interface types should set lockdep class because, without lockdep
    class key, lockdep always warn about unexisting circular locking.
    
    In the current code, these interfaces have their own lockdep class keys and
    these manage itself. So that there are so many duplicate code around the
    /driver/net and /net/.
    This patch adds new generic lockdep keys and some helper functions for it.
    
    This patch does below changes.
    a) Add lockdep class keys in struct net_device
       - qdisc_running, xmit, addr_list, qdisc_busylock
       - these keys are used as dynamic lockdep key.
    b) When net_device is being allocated, lockdep keys are registered.
       - alloc_netdev_mqs()
    c) When net_device is being free'd llockdep keys are unregistered.
       - free_netdev()
    d) Add generic lockdep key helper function
       - netdev_register_lockdep_key()
       - netdev_unregister_lockdep_key()
       - netdev_update_lockdep_key()
    e) Remove unnecessary generic lockdep macro and functions
    f) Remove unnecessary lockdep code of each interfaces.
    
    After this patch, each interface modules don't need to maintain
    their lockdep keys.
    
    Signed-off-by: Taehee Yoo <ap420073@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 drivers/net/bonding/bond_main.c                   |   1 -
 drivers/net/ethernet/netronome/nfp/nfp_net_repr.c |  18 ---
 drivers/net/hamradio/bpqether.c                   |  22 ----
 drivers/net/hyperv/netvsc_drv.c                   |   2 -
 drivers/net/ipvlan/ipvlan_main.c                  |   2 -
 drivers/net/macsec.c                              |   5 -
 drivers/net/macvlan.c                             |  12 --
 drivers/net/ppp/ppp_generic.c                     |   2 -
 drivers/net/team/team.c                           |   2 -
 drivers/net/vrf.c                                 |   1 -
 drivers/net/wireless/intersil/hostap/hostap_hw.c  |  25 -----
 include/linux/netdevice.h                         |  35 +++---
 net/8021q/vlan_dev.c                              |  27 -----
 net/batman-adv/soft-interface.c                   |  32 ------
 net/bluetooth/6lowpan.c                           |   8 --
 net/bridge/br_device.c                            |   8 --
 net/core/dev.c                                    | 127 ++++++++--------------
 net/core/rtnetlink.c                              |   1 +
 net/dsa/master.c                                  |   5 -
 net/dsa/slave.c                                   |  12 --
 net/ieee802154/6lowpan/core.c                     |   8 --
 net/l2tp/l2tp_eth.c                               |   1 -
 net/netrom/af_netrom.c                            |  23 ----
 net/rose/af_rose.c                                |  23 ----
 net/sched/sch_generic.c                           |  17 +--
 25 files changed, 63 insertions(+), 356 deletions(-)
culprit signature: 466fc73a7e9eef3bac2a9f3101e0f87885eb6c41
parent  signature: c812376a72d65f901e32f60900a12818771f45fe
revisions tested: 17, total time: 4h27m58.284087646s (build: 1h44m15.736586436s, test: 2h42m1.360199798s)
first bad commit: ab92d68fc22f9afab480153bd82a20f6e2533769 net: core: add generic lockdep keys
cc: ["a@unstable.cc" "alex.aring@gmail.com" "allison@lohutok.net" "andrew@lunn.ch" "andy@greyhouse.net" "ap420073@gmail.com" "ast@domdv.de" "b.a.t.m.a.n@lists.open-mesh.org" "bridge@lists.linux-foundation.org" "cleech@redhat.com" "daniel@iogearbox.net" "davem@davemloft.net" "dsa@cumulusnetworks.com" "f.fainelli@gmail.com" "fw@strlen.de" "gregkh@linuxfoundation.org" "gustavo@embeddedor.com" "haiyangz@microsoft.com" "info@metux.net" "j.vosburgh@gmail.com" "j@w1.fi" "jakub.kicinski@netronome.com" "jhs@mojatatu.com" "jiri@resnulli.us" "johan.hedberg@gmail.com" "johannes.berg@intel.com" "jwi@linux.ibm.com" "kstewart@linuxfoundation.org" "kvalo@codeaurora.org" "kys@microsoft.com" "linmiaohe@huawei.com" "linux-bluetooth@vger.kernel.org" "linux-hams@vger.kernel.org" "linux-hyperv@vger.kernel.org" "linux-kernel@vger.kernel.org" "linux-ppp@vger.kernel.org" "linux-wireless@vger.kernel.org" "linux-wpan@vger.kernel.org" "liuhangbin@gmail.com" "marcel@holtmann.org" "mareklindner@neomailbox.ch" "mkubecek@suse.cz" "mmanning@vyatta.att-mail.com" "netdev@vger.kernel.org" "nikolay@cumulusnetworks.com" "oss-drivers@netronome.com" "paulus@samba.org" "ralf@linux-mips.org" "roopa@cumulusnetworks.com" "sashal@kernel.org"]
crash: WARNING in mark_lock
------------[ cut here ]------------
DEBUG_LOCKS_WARN_ON(1)
WARNING: CPU: 0 PID: 0 at kernel/locking/lockdep.c:167 hlock_class kernel/locking/lockdep.c:167 [inline]
WARNING: CPU: 0 PID: 0 at kernel/locking/lockdep.c:167 mark_lock+0x7c4/0x11d0 kernel/locking/lockdep.c:3643
Kernel panic - not syncing: panic_on_warn set ...
CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.4.0-rc3-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x113/0x167 lib/dump_stack.c:113
 panic+0x22a/0x4e3 kernel/panic.c:221
 __warn.cold.11+0x25/0x30 kernel/panic.c:582
 report_bug+0x1b0/0x270 lib/bug.c:195
 fixup_bug arch/x86/kernel/traps.c:179 [inline]
 do_error_trap+0x11b/0x200 arch/x86/kernel/traps.c:272
 do_invalid_op+0x36/0x40 arch/x86/kernel/traps.c:291
 invalid_op+0x23/0x30 arch/x86/entry/entry_64.S:1028
RIP: 0010:hlock_class kernel/locking/lockdep.c:167 [inline]
RIP: 0010:mark_lock+0x7c4/0x11d0 kernel/locking/lockdep.c:3643
Code: d2 0f 85 09 09 00 00 44 8b 1d 68 a3 5c 08 45 85 db 0f 85 1d fa ff ff 48 c7 c6 e0 a0 8a 87 48 c7 c7 20 a1 8a 87 e8 7e f9 ec ff <0f> 0b e9 03 fa ff ff 48 c7 c7 34 ec ad 89 48 b8 00 00 00 00 00 fc
RSP: 0018:ffff8880ae809380 EFLAGS: 00010086
RAX: 0000000000000000 RBX: 0000000000000004 RCX: 0000000000000000
RDX: 0000000000000000 RSI: 0000000000000004 RDI: 0000000000000000
RBP: ffff8880ae8093d0 R08: fffffbfff11b2389 R09: fffffbfff11b2389
R10: fffffbfff11b2388 R11: ffffffff88d91c43 R12: ffffffff88c7a100
R13: 0000000000000000 R14: ffffffff88c7aaaa R15: ffffffff88c7aa88
 mark_usage kernel/locking/lockdep.c:3566 [inline]
 __lock_acquire+0x1974/0x4ef0 kernel/locking/lockdep.c:3909
 lock_acquire+0x194/0x410 kernel/locking/lockdep.c:4487
 __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
 _raw_spin_lock+0x2d/0x40 kernel/locking/spinlock.c:151
 spin_lock include/linux/spinlock.h:338 [inline]
 __netif_tx_lock include/linux/netdevice.h:3898 [inline]
 sch_direct_xmit+0x215/0x1110 net/sched/sch_generic.c:311
 __dev_xmit_skb net/core/dev.c:3400 [inline]
 __dev_queue_xmit+0x1fc8/0x3050 net/core/dev.c:3761
 dev_queue_xmit+0xb/0x10 net/core/dev.c:3825
 neigh_hh_output include/net/neighbour.h:500 [inline]
 neigh_output include/net/neighbour.h:509 [inline]
 ip6_finish_output2+0xc34/0x22f0 net/ipv6/ip6_output.c:116
 __ip6_finish_output+0x36c/0x930 net/ipv6/ip6_output.c:142
 ip6_finish_output+0x27/0x170 net/ipv6/ip6_output.c:152
 NF_HOOK_COND include/linux/netfilter.h:294 [inline]
 ip6_output+0x1bf/0x630 net/ipv6/ip6_output.c:175
 dst_output include/net/dst.h:436 [inline]
 NF_HOOK include/linux/netfilter.h:305 [inline]
 mld_sendpack+0x870/0xcb0 net/ipv6/mcast.c:1682
 mld_send_initial_cr.part.32+0xd7/0x110 net/ipv6/mcast.c:2099
 mld_send_initial_cr net/ipv6/mcast.c:2083 [inline]
 mld_dad_timer_expire+0x29/0x140 net/ipv6/mcast.c:2118
 call_timer_fn+0x169/0x570 kernel/time/timer.c:1404
 expire_timers kernel/time/timer.c:1449 [inline]
 __run_timers kernel/time/timer.c:1773 [inline]
 run_timer_softirq+0xd58/0x1330 kernel/time/timer.c:1786
 __do_softirq+0x262/0x9a8 kernel/softirq.c:292
 invoke_softirq kernel/softirq.c:373 [inline]
 irq_exit+0x19a/0x1d0 kernel/softirq.c:413
 exiting_irq arch/x86/include/asm/apic.h:536 [inline]
 smp_apic_timer_interrupt+0x1a6/0x5f0 arch/x86/kernel/apic/apic.c:1137
 apic_timer_interrupt+0xf/0x20 arch/x86/entry/entry_64.S:830
 </IRQ>
RIP: 0010:native_safe_halt+0x12/0x20 arch/x86/include/asm/irqflags.h:61
Code: fe ff ff 48 89 df e8 4d a1 6f fa eb 9c 90 90 90 90 90 90 90 90 90 90 90 55 48 89 e5 e9 07 00 00 00 0f 00 2d 30 41 5b 00 fb f4 <5d> c3 66 90 66 2e 0f 1f 84 00 00 00 00 00 55 48 89 e5 e9 07 00 00
RSP: 0018:ffffffff88c07ce0 EFLAGS: 00000286 ORIG_RAX: ffffffffffffff13
RAX: dffffc0000000000 RBX: ffffffff88c7a100 RCX: 0000000000000000
RDX: 1ffffffff11a58ff RSI: 0000000000000006 RDI: ffffffff88d2c7f8
RBP: ffffffff88c07ce0 R08: 0000000000000006 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000000 R12: fffffbfff11a58fd
R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
 arch_safe_halt arch/x86/include/asm/paravirt.h:144 [inline]
 default_idle+0x51/0x340 arch/x86/kernel/process.c:580
 arch_cpu_idle+0xa/0x10 arch/x86/kernel/process.c:571
 default_idle_call+0x87/0xa0 kernel/sched/idle.c:94
 cpuidle_idle_call kernel/sched/idle.c:154 [inline]
 do_idle+0x4c6/0x6d0 kernel/sched/idle.c:263
 cpu_startup_entry+0x18/0x20 kernel/sched/idle.c:355
 rest_init+0x1a4/0x279 init/main.c:451
 arch_call_rest_init+0x9/0xc
 start_kernel+0x72b/0x766 init/main.c:784
 x86_64_start_reservations+0x29/0x2b arch/x86/kernel/head64.c:472
 x86_64_start_kernel+0x76/0x79 arch/x86/kernel/head64.c:453
 secondary_startup_64+0xa4/0xb0 arch/x86/kernel/head_64.S:241
Kernel Offset: disabled
Rebooting in 86400 seconds..

