ci2 starts bisection 2022-09-19 17:58:22.197974806 +0000 UTC m=+22126.563835494
bisecting cause commit starting from 521a547ced6477c54b4b0cc206000406c221b4d6
building syzkaller on dd9a85ff356d74a765888403f1b70faece9e642b
testing commit 521a547ced6477c54b4b0cc206000406c221b4d6 gcc
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: cf7e651a1f2e00a363c19c456f2c9e1db85c9e4fdc6378d3e28e9e4a0a6bd2dc
run #0: crashed: INFO: rcu detected stall in corrupted
run #1: crashed: INFO: rcu detected stall in corrupted
run #2: crashed: INFO: rcu detected stall in corrupted
run #3: crashed: INFO: rcu detected stall in corrupted
run #4: crashed: INFO: rcu detected stall in corrupted
run #5: crashed: INFO: rcu detected stall in corrupted
run #6: crashed: INFO: rcu detected stall in corrupted
run #7: crashed: INFO: rcu detected stall in corrupted
run #8: crashed: INFO: rcu detected stall in corrupted
run #9: crashed: INFO: rcu detected stall in corrupted
run #10: crashed: INFO: rcu detected stall in corrupted
run #11: crashed: INFO: rcu detected stall in corrupted
run #12: crashed: INFO: rcu detected stall in corrupted
run #13: crashed: INFO: rcu detected stall in corrupted
run #14: crashed: INFO: rcu detected stall in corrupted
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
testing release v5.19
testing commit 3d7cb6b04c3f3115719235cc6866b10326de34cd gcc
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 39b1317ffffd7fd75369b026814000db52b86eb0460fdd70c12e2f06b8b6b955
run #0: crashed: general protection fault in corrupted
run #1: crashed: kernel panic: stack is corrupted in __lock_acquire
run #2: crashed: BUG: unable to handle kernel paging request in iput
run #3: crashed: kernel panic: stack is corrupted in __lock_acquire
run #4: crashed: kernel panic: stack is corrupted in __lock_acquire
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
testing release v5.18
testing commit 4b0986a3613c92f4ec1bdc7f60ec66fea135991f gcc
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: fd8dcc5586e3071fbf2536faf523fc1f1f0d8129a856f074c0ae39a694b167d1
run #0: crashed: WARNING: bad unlock balance in corrupted
run #1: crashed: BUG: unable to handle kernel paging request in evict
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
reproducer seems to be flaky
testing release v5.17
testing commit f443e374ae131c168a065ea1748feac6b2e76613 gcc
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: c32534e7b08e7acc7344939b70d14eae65b7d35b4b9ea239fb0503d9a9ffb841
run #0: basic kernel testing failed: BUG: program execution failed: executor NUM: exit status NUM
run #1: crashed: BUG: unable to handle kernel paging request in truncate_inode_pages_final
run #2: crashed: BUG: unable to handle kernel paging request in truncate_inode_pages_final
run #3: crashed: BUG: unable to handle kernel paging request in iput
run #4: crashed: BUG: unable to handle kernel paging request in truncate_inode_pages_final
run #5: crashed: WARNING: suspicious RCU usage in inode_wait_for_writeback
run #6: crashed: BUG: unable to handle kernel paging request in iput
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
testing release v5.16
testing commit df0cc57e057f18e44dac8e6c18aba47ab53202f9 gcc
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 3b831ca12b2eb0bbdcb65db94c2f7974d0d93a715e19c85096386fa2c030a972
run #0: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #1: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #2: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #3: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #4: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #5: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #6: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #7: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #8: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #9: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #10: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #11: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #12: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #13: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #14: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #15: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #16: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #17: crashed: KASAN: vmalloc-out-of-bounds Write in end_buffer_read_sync
run #18: crashed: KASAN: vmalloc-out-of-bounds Write in end_buffer_read_sync
run #19: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
testing release v5.15
testing commit 8bb7eca972ad531c9b149c0a51ab43a417385813 gcc
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: a9033d8c74e7d4820386e1cfca94c1511e40fe9a976a82a88e73a0a286133a4e
run #0: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #1: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #2: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #3: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #4: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #5: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #6: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #7: crashed: KASAN: vmalloc-out-of-bounds Write in end_buffer_read_sync
run #8: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #9: crashed: BUG: unable to handle kernel paging request in inode_wait_for_writeback
run #10: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #11: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #12: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #13: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #14: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #15: crashed: invalid opcode in corrupted
run #16: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #17: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #18: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
run #19: crashed: KASAN: out-of-bounds Write in end_buffer_read_sync
testing release v5.14
testing commit 7d2a07b769330c34b4deabeed939325c77a7ec2f gcc
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: e69d07dfbf98fb8b3a95d43aa46f1ae7a583021ce9e24763c6b4b988a7fe30d8
all runs: OK
# git bisect start 8bb7eca972ad531c9b149c0a51ab43a417385813 7d2a07b769330c34b4deabeed939325c77a7ec2f
Bisecting: 6693 revisions left to test after this (roughly 13 steps)
[477f70cd2a67904e04c2c2b9bd0fa2e95222f2f6] Merge tag 'drm-next-2021-08-31-1' of git://anongit.freedesktop.org/drm/drm

testing commit 477f70cd2a67904e04c2c2b9bd0fa2e95222f2f6 gcc
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 5fdf302e775f49b5ed8ceb30a87f8eeeed791fbdca3bbc8fc310d8c61ae3c2c4
run #0: crashed: KASAN: use-after-free Read in __d_alloc
run #1: crashed: KASAN: use-after-free Read in __d_alloc
run #2: crashed: KASAN: use-after-free Read in __d_alloc
run #3: crashed: KASAN: use-after-free Read in __d_alloc
run #4: crashed: KASAN: use-after-free Read in __d_alloc
run #5: crashed: KASAN: use-after-free Read in __d_alloc
run #6: crashed: KASAN: use-after-free Read in __d_alloc
run #7: crashed: KASAN: use-after-free Read in __d_alloc
run #8: crashed: KASAN: use-after-free Read in __d_alloc
run #9: crashed: KASAN: use-after-free Read in __d_alloc
run #10: crashed: KASAN: use-after-free Read in __d_alloc
run #11: crashed: KASAN: use-after-free Read in __d_alloc
run #12: crashed: KASAN: use-after-free Read in __d_alloc
run #13: crashed: KASAN: use-after-free Read in __d_alloc
run #14: crashed: KASAN: use-after-free Read in __d_alloc
run #15: crashed: KASAN: use-after-free Read in __d_alloc
run #16: crashed: KASAN: use-after-free Read in __d_alloc
run #17: crashed: KASAN: use-after-free Read in __d_alloc
run #18: crashed: KASAN: use-after-free Read in __d_alloc
run #19: OK
# git bisect bad 477f70cd2a67904e04c2c2b9bd0fa2e95222f2f6
Bisecting: 3024 revisions left to test after this (roughly 12 steps)
[9e9fb7655ed585da8f468e29221f0ba194a5f613] Merge tag 'net-next-5.15' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net-next

testing commit 9e9fb7655ed585da8f468e29221f0ba194a5f613 gcc
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
arch/x86/kernel/setup.c:916:6: error: implicit declaration of function 'acpi_mps_check' [-Werror=implicit-function-declaration]
arch/x86/kernel/setup.c:1110:2: error: implicit declaration of function 'acpi_table_upgrade' [-Werror=implicit-function-declaration]
arch/x86/kernel/setup.c:1112:2: error: implicit declaration of function 'acpi_boot_table_init' [-Werror=implicit-function-declaration]
arch/x86/kernel/setup.c:1120:2: error: implicit declaration of function 'early_acpi_boot_init'; did you mean 'early_cpu_init'? [-Werror=implicit-function-declaration]
arch/x86/kernel/setup.c:1162:2: error: implicit declaration of function 'acpi_boot_init' [-Werror=implicit-function-declaration]
# git bisect skip 9e9fb7655ed585da8f468e29221f0ba194a5f613
Bisecting: 3024 revisions left to test after this (roughly 12 steps)
[7a47c52142c18a9239c5afea2c9656c68d3f22e7] s390/ccwgroup: Drop if with an always false condition

testing commit 7a47c52142c18a9239c5afea2c9656c68d3f22e7 gcc
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: a4f37555ea572644a5041abcfd3741e403853dfd366d5c49ce10a5fc2947a837
all runs: OK
# git bisect good 7a47c52142c18a9239c5afea2c9656c68d3f22e7
Bisecting: 3021 revisions left to test after this (roughly 12 steps)
[05e45887382c4c0f9522515759b34991aa17e69d] rtw88: wow: build wow function only if CONFIG_PM is on

testing commit 05e45887382c4c0f9522515759b34991aa17e69d gcc
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 7a0ab8c713aef12bd9e60ca7717fd4f965873dec5350f643a59b8dc95fa82be2
run #0: crashed: BUG: sleeping function called from invalid context in lock_sock_nested
run #1: crashed: WARNING: ODEBUG bug in netdev_run_todo
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad 05e45887382c4c0f9522515759b34991aa17e69d
Bisecting: 153 revisions left to test after this (roughly 7 steps)
[8887ca5474bd9ddb56cabc88856bb035774e0041] net: phy: at803x: simplify custom phy id matching

testing commit 8887ca5474bd9ddb56cabc88856bb035774e0041 gcc
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 248c5180c21d2ebc83f16bafd9b767316f383fcbdc123aca7cc6e71918eb9a4b
run #0: basic kernel testing failed: possible deadlock in fs_reclaim_acquire
run #1: basic kernel testing failed: BUG: sleeping function called from invalid context in stack_depot_save
run #2: basic kernel testing failed: possible deadlock in fs_reclaim_acquire
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect good 8887ca5474bd9ddb56cabc88856bb035774e0041
Bisecting: 76 revisions left to test after this (roughly 6 steps)
[123abc06e74f49d9b173a93cb2b797fb85f50ba3] net: dsa: add support for bridge TX forwarding offload

testing commit 123abc06e74f49d9b173a93cb2b797fb85f50ba3 gcc
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 141ca8ebb0daf02a652e3db759af6b1eab0dde316247e4c5fad1538f4ba51416
run #0: crashed: BUG: sleeping function called from invalid context in lock_sock_nested
run #1: crashed: BUG: sleeping function called from invalid context in lock_sock_nested
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad 123abc06e74f49d9b173a93cb2b797fb85f50ba3
Bisecting: 38 revisions left to test after this (roughly 5 steps)
[649502a337544840f1fbab8660603e08e86e2f41] dt-bindings: net: fsl,fec: improve the binding a bit

testing commit 649502a337544840f1fbab8660603e08e86e2f41 gcc
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 95dcd1b72193395e888981c22d2fd50e9d4560d69992a007f8a9ad5a9fbfa9eb
all runs: OK
# git bisect good 649502a337544840f1fbab8660603e08e86e2f41
Bisecting: 18 revisions left to test after this (roughly 4 steps)
[71e88cfb92601a50e965389a507a71df12056b20] nfp: flower-ct: calculate required key_layers

testing commit 71e88cfb92601a50e965389a507a71df12056b20 gcc
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 46622821bf27ffdb21e06b0c3369df4f72ffc0f0a3cbdf6908043a15f3dc8adc
run #0: basic kernel testing failed: possible deadlock in fs_reclaim_acquire
run #1: basic kernel testing failed: BUG: sleeping function called from invalid context in stack_depot_save
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect good 71e88cfb92601a50e965389a507a71df12056b20
Bisecting: 9 revisions left to test after this (roughly 3 steps)
[1a33b18b3bd9748c9c712a23e788bf1f1c4a7025] compat: make linux/compat.h available everywhere

testing commit 1a33b18b3bd9748c9c712a23e788bf1f1c4a7025 gcc
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: bb2db02db6652c2619a261fdc3acc22573aab65cbcd29526613b4f7961d515b7
run #0: basic kernel testing failed: BUG: sleeping function called from invalid context in lock_sock_nested
run #1: crashed: BUG: sleeping function called from invalid context in lock_sock_nested
run #2: crashed: WARNING: ODEBUG bug in netdev_run_todo
run #3: crashed: WARNING: ODEBUG bug in netdev_run_todo
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad 1a33b18b3bd9748c9c712a23e788bf1f1c4a7025
Bisecting: 4 revisions left to test after this (roughly 2 steps)
[400a5e5f15a6a64bd4aed59af703efe748a8778a] nfp: flower-ct: add offload calls to the nfp

testing commit 400a5e5f15a6a64bd4aed59af703efe748a8778a gcc
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 46622821bf27ffdb21e06b0c3369df4f72ffc0f0a3cbdf6908043a15f3dc8adc
run #0: crashed: BUG: sleeping function called from invalid context in lock_sock_nested
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad 400a5e5f15a6a64bd4aed59af703efe748a8778a
Bisecting: 1 revision left to test after this (roughly 1 step)
[d94a63b480c1c3f71adf8cc2731573122b704be7] nfp: flower-ct: add actions into flow_pay for offload

testing commit d94a63b480c1c3f71adf8cc2731573122b704be7 gcc
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 46622821bf27ffdb21e06b0c3369df4f72ffc0f0a3cbdf6908043a15f3dc8adc
run #0: basic kernel testing failed: possible deadlock in fs_reclaim_acquire
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect good d94a63b480c1c3f71adf8cc2731573122b704be7
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[453cdc3083a61ab6d9b81c57251b2b241d56d704] nfp: flower-ct: add flow_pay to the offload table

testing commit 453cdc3083a61ab6d9b81c57251b2b241d56d704 gcc
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 46622821bf27ffdb21e06b0c3369df4f72ffc0f0a3cbdf6908043a15f3dc8adc
run #0: basic kernel testing failed: possible deadlock in fs_reclaim_acquire
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect good 453cdc3083a61ab6d9b81c57251b2b241d56d704
400a5e5f15a6a64bd4aed59af703efe748a8778a is the first bad commit
commit 400a5e5f15a6a64bd4aed59af703efe748a8778a
Author: Louis Peens <louis.peens@corigine.com>
Date:   Thu Jul 22 09:58:07 2021 +0200

    nfp: flower-ct: add offload calls to the nfp
    
    Add the offload parts (ADD_FLOW/DEL_FLOW) calls to add and delete
    the flows from the nfp.
    
    Signed-off-by: Louis Peens <louis.peens@corigine.com>
    Signed-off-by: Yinjun Zhang <yinjun.zhang@corigine.com>
    Signed-off-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 drivers/net/ethernet/netronome/nfp/flower/conntrack.c | 12 ++++++++++++
 drivers/net/ethernet/netronome/nfp/flower/main.h      |  3 +++
 drivers/net/ethernet/netronome/nfp/flower/offload.c   |  2 +-
 3 files changed, 16 insertions(+), 1 deletion(-)

culprit signature: 46622821bf27ffdb21e06b0c3369df4f72ffc0f0a3cbdf6908043a15f3dc8adc
parent  signature: 46622821bf27ffdb21e06b0c3369df4f72ffc0f0a3cbdf6908043a15f3dc8adc
Reproducer flagged being flaky
revisions tested: 18, total time: 7h40m36.394411229s (build: 4h11m47.844260634s, test: 3h25m44.094003658s)
first bad commit: 400a5e5f15a6a64bd4aed59af703efe748a8778a nfp: flower-ct: add offload calls to the nfp
recipients (to): ["davem@davemloft.net" "louis.peens@corigine.com" "simon.horman@corigine.com" "yinjun.zhang@corigine.com"]
recipients (cc): []
crash: BUG: sleeping function called from invalid context in lock_sock_nested
BUG: sleeping function called from invalid context at net/core/sock.c:3161
in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 5775, name: syz-executor.4
1 lock held by syz-executor.4/5775:
 #0: ffffffff8c1eb6e0 (hci_sk_list.lock){++++}-{2:2}, at: hci_sock_dev_event+0x374/0x5c0 net/bluetooth/hci_sock.c:763
Preemption disabled at:
[<0000000000000000>] 0x0
CPU: 0 PID: 5775 Comm: syz-executor.4 Not tainted 5.14.0-rc1-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 08/26/2022
Call Trace:
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x57/0x7d lib/dump_stack.c:105
 ___might_sleep.cold+0x1f1/0x237 kernel/sched/core.c:9154
 lock_sock_nested+0x1e/0xf0 net/core/sock.c:3161
 lock_sock include/net/sock.h:1613 [inline]
 hci_sock_dev_event+0x3ea/0x5c0 net/bluetooth/hci_sock.c:765
 hci_unregister_dev+0x29b/0xfb0 net/bluetooth/hci_core.c:4033
 vhci_release+0x62/0xd0 drivers/bluetooth/hci_vhci.c:340
 __fput+0x209/0x870 fs/file_table.c:280
 task_work_run+0xc0/0x160 kernel/task_work.c:164
 exit_task_work include/linux/task_work.h:32 [inline]
 do_exit+0x9fe/0x24e0 kernel/exit.c:825
 do_group_exit+0xe7/0x290 kernel/exit.c:922
 __do_sys_exit_group kernel/exit.c:933 [inline]
 __se_sys_exit_group kernel/exit.c:931 [inline]
 __x64_sys_exit_group+0x35/0x40 kernel/exit.c:931
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x35/0x80 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x44/0xae
RIP: 0033:0x7fe697c88409
Code: Unable to access opcode bytes at RIP 0x7fe697c883df.
RSP: 002b:00007ffdebf47238 EFLAGS: 00000246 ORIG_RAX: 00000000000000e7
RAX: ffffffffffffffda RBX: 00007ffdebf47a18 RCX: 00007fe697c88409
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000043
RBP: 0000000000000000 R08: 0000000000000025 R09: 00007ffdebf47a18
R10: 0000000000000200 R11: 0000000000000246 R12: 00007fe697ce25ae
R13: 0000000000000010 R14: 0000000000000000 R15: 0000000000000000

======================================================

