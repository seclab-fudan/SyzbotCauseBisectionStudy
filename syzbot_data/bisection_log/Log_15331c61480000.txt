ci starts bisection 2023-01-18 00:00:17.634242743 +0000 UTC m=+10413.846534819
bisecting cause commit starting from 87b93b678e95c7d93fe6a55b0e0fbda26d8c7760
building syzkaller on a63719e71f9e7c2496a8eef09aa58118deb0c0bc
ensuring issue is reproducible on original commit 87b93b678e95c7d93fe6a55b0e0fbda26d8c7760

testing commit 87b93b678e95c7d93fe6a55b0e0fbda26d8c7760 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 771ca90b5b3dcd62db4a556c5caf38e56b6e09e5f4250e5bf733d2f4f1b3b506
all runs: crashed: possible deadlock in release_sock
testing release v6.1
testing commit 830b3c68c1fb1e9176028d02ef86f3cf76aa2476 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: e6f427ec7e2c6de70b737f4c9abb8fbc70bfdbaaa87506e6a44aa8f847e9cc55
all runs: OK
# git bisect start 87b93b678e95c7d93fe6a55b0e0fbda26d8c7760 830b3c68c1fb1e9176028d02ef86f3cf76aa2476
Bisecting: 7819 revisions left to test after this (roughly 13 steps)
[1ca06f1c1acecbe02124f14a37cce347b8c1a90c] Merge tag 'xtensa-20221213' of https://github.com/jcmvbkbc/linux-xtensa

testing commit 1ca06f1c1acecbe02124f14a37cce347b8c1a90c gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: e1ea1c6b614516ecca059b89cbdce7904c96703ed7bb561be8130aee833df01b
all runs: OK
# git bisect good 1ca06f1c1acecbe02124f14a37cce347b8c1a90c
Bisecting: 4093 revisions left to test after this (roughly 12 steps)
[0948a9ef1d59d1bc7fae29f32058e463bbff4a6c] Merge branches 'acpi-resource' and 'acpi-video'

testing commit 0948a9ef1d59d1bc7fae29f32058e463bbff4a6c gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 43d541ee795b753a7500ede70545dff7ec04e156ecaeae7f922bfe776cc9c151
all runs: OK
# git bisect good 0948a9ef1d59d1bc7fae29f32058e463bbff4a6c
Bisecting: 2041 revisions left to test after this (roughly 11 steps)
[4f292c4de4f6fb83776c0ff22674121eb6ddfa2f] Merge tag 'x86_mm_for_6.2_v2' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip

testing commit 4f292c4de4f6fb83776c0ff22674121eb6ddfa2f gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 24aacc41c42c54dec9c9fecfe15a398896ba0d0fda98204eabd632fb6dd68a60
all runs: OK
# git bisect good 4f292c4de4f6fb83776c0ff22674121eb6ddfa2f
Bisecting: 1006 revisions left to test after this (roughly 10 steps)
[7a693ea78e3c48605a2d849fd241ff15561f10d5] Merge tag 'pwm/for-6.2-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/thierry.reding/linux-pwm

testing commit 7a693ea78e3c48605a2d849fd241ff15561f10d5 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 00c5c0a3f1d36a5337d54e13600db0baae8420ee73c136c1594325b10bf6e5c2
all runs: OK
# git bisect good 7a693ea78e3c48605a2d849fd241ff15561f10d5
Bisecting: 503 revisions left to test after this (roughly 9 steps)
[22a341b43036415718f2d50f5f98b2f891fe17e9] f2fs: should use a temp extent_info for lookup

testing commit 22a341b43036415718f2d50f5f98b2f891fe17e9 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 9db320951240927e4717ec0da4a387084b9555527fa63ca99a3d917972188731
all runs: OK
# git bisect good 22a341b43036415718f2d50f5f98b2f891fe17e9
Bisecting: 252 revisions left to test after this (roughly 8 steps)
[696e1a48b1a1b01edad542a1ef293665864a4dd0] netfilter: nft_payload: incorrect arithmetics when fetching VLAN header bits

testing commit 696e1a48b1a1b01edad542a1ef293665864a4dd0 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 3aeb543b9adf94407a429a2fdf5723cce2dde455175bf863a194a42f9874ab61
all runs: OK
# git bisect good 696e1a48b1a1b01edad542a1ef293665864a4dd0
Bisecting: 124 revisions left to test after this (roughly 7 steps)
[1fe4fd6f5cad346e598593af36caeadc4f5d4fa9] Merge tag 'xfs-6.2-fixes-2' of git://git.kernel.org/pub/scm/fs/xfs/xfs-linux

testing commit 1fe4fd6f5cad346e598593af36caeadc4f5d4fa9 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: dd078472e503151b20e27073f59a0e3b129c381ffadeb16a6c487d2d6546bcb8
all runs: OK
# git bisect good 1fe4fd6f5cad346e598593af36caeadc4f5d4fa9
Bisecting: 63 revisions left to test after this (roughly 6 steps)
[cf4d5be89c0ad339108e672a2f973bf276bd5d2c] Merge tag 'core-urgent-2023-01-12' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip

testing commit cf4d5be89c0ad339108e672a2f973bf276bd5d2c gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 096cf7ac339bf0d8dbfe1c4c58a5b3cb7f6eb90b8f635f60dcc4b34669f77797
all runs: OK
# git bisect good cf4d5be89c0ad339108e672a2f973bf276bd5d2c
Bisecting: 28 revisions left to test after this (roughly 5 steps)
[d9fc1511728c15df49ff18e49a494d00f78b7cd4] Merge tag 'net-6.2-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net

testing commit d9fc1511728c15df49ff18e49a494d00f78b7cd4 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 6aa17743b65c17bb259c7eaae01a9195c3afc72f6f28bd943eb79bfc1d894776
all runs: OK
# git bisect good d9fc1511728c15df49ff18e49a494d00f78b7cd4
Bisecting: 14 revisions left to test after this (roughly 4 steps)
[4bb4db7f3187c6e3de6b229ffc87cdb30a2d22b6] net: nfc: Fix use-after-free in local_cleanup()

testing commit 4bb4db7f3187c6e3de6b229ffc87cdb30a2d22b6 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: f63da644d6ed7a4f8f5b5ab9f47182a1b7dbbc96e0a0cc9e0809817b14b59254
all runs: OK
# git bisect good 4bb4db7f3187c6e3de6b229ffc87cdb30a2d22b6
Bisecting: 7 revisions left to test after this (roughly 3 steps)
[da263fcb86ae1ca40b5329e64ad7d7f69d260477] Merge branch 'mptcp-userspace-pm-create-sockets-for-the-right-family'

testing commit da263fcb86ae1ca40b5329e64ad7d7f69d260477 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 50dd91f443484ab42b93345bc0eb116dd0238562a0d8d5b4f064f55b6b8a6242
all runs: OK
# git bisect good da263fcb86ae1ca40b5329e64ad7d7f69d260477
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[3a415d59c1dbec9d772dbfab2d2520d98360caae] net/sched: sch_taprio: fix possible use-after-free

testing commit 3a415d59c1dbec9d772dbfab2d2520d98360caae gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: a5876417be665431d0c25d03bac2dda71f7088a87e0e851abc0485c6634ffe02
all runs: OK
# git bisect good 3a415d59c1dbec9d772dbfab2d2520d98360caae
Bisecting: 1 revision left to test after this (roughly 1 step)
[0b2c59720e65885a394a017d0cf9cab118914682] l2tp: close all race conditions in l2tp_tunnel_register()

testing commit 0b2c59720e65885a394a017d0cf9cab118914682 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: bf59dcbc6559498e504cc28f1a25325bf9b763b215483465d7cc3a71e925e2f2
all runs: crashed: possible deadlock in release_sock
# git bisect bad 0b2c59720e65885a394a017d0cf9cab118914682
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[c4d48a58f32c5972174a1d01c33b296fe378cce0] l2tp: convert l2tp_tunnel_list to idr

testing commit c4d48a58f32c5972174a1d01c33b296fe378cce0 gcc
compiler: gcc (Debian 10.2.1-6) 10.2.1 20210110, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 12230a19432a2903c21bfe41e9629a8e3b81a10b98dd190ed0a68547dce4cd98
all runs: OK
# git bisect good c4d48a58f32c5972174a1d01c33b296fe378cce0
0b2c59720e65885a394a017d0cf9cab118914682 is the first bad commit
commit 0b2c59720e65885a394a017d0cf9cab118914682
Author: Cong Wang <cong.wang@bytedance.com>
Date:   Fri Jan 13 19:01:37 2023 -0800

    l2tp: close all race conditions in l2tp_tunnel_register()
    
    The code in l2tp_tunnel_register() is racy in several ways:
    
    1. It modifies the tunnel socket _after_ publishing it.
    
    2. It calls setup_udp_tunnel_sock() on an existing socket without
       locking.
    
    3. It changes sock lock class on fly, which triggers many syzbot
       reports.
    
    This patch amends all of them by moving socket initialization code
    before publishing and under sock lock. As suggested by Jakub, the
    l2tp lockdep class is not necessary as we can just switch to
    bh_lock_sock_nested().
    
    Fixes: 37159ef2c1ae ("l2tp: fix a lockdep splat")
    Fixes: 6b9f34239b00 ("l2tp: fix races in tunnel creation")
    Reported-by: syzbot+52866e24647f9a23403f@syzkaller.appspotmail.com
    Reported-by: syzbot+94cc2a66fc228b23f360@syzkaller.appspotmail.com
    Reported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Guillaume Nault <gnault@redhat.com>
    Cc: Jakub Sitnicki <jakub@cloudflare.com>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Tom Parkin <tparkin@katalix.com>
    Signed-off-by: Cong Wang <cong.wang@bytedance.com>
    Reviewed-by: Guillaume Nault <gnault@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/l2tp/l2tp_core.c | 28 ++++++++++++++--------------
 1 file changed, 14 insertions(+), 14 deletions(-)

culprit signature: bf59dcbc6559498e504cc28f1a25325bf9b763b215483465d7cc3a71e925e2f2
parent  signature: 12230a19432a2903c21bfe41e9629a8e3b81a10b98dd190ed0a68547dce4cd98
revisions tested: 16, total time: 4h41m37.696733391s (build: 2h27m3.102681772s, test: 2h12m22.477458415s)
first bad commit: 0b2c59720e65885a394a017d0cf9cab118914682 l2tp: close all race conditions in l2tp_tunnel_register()
recipients (to): ["cong.wang@bytedance.com" "davem@davemloft.net" "gnault@redhat.com"]
recipients (cc): []
crash: possible deadlock in release_sock
======================================================
WARNING: possible circular locking dependency detected
6.2.0-rc3-syzkaller #0 Not tainted
------------------------------------------------------
syz-executor.0/5598 is trying to acquire lock:
ffff8880285bd7b0 (slock-AF_INET){+.-.}-{2:2}, at: spin_lock_bh include/linux/spinlock.h:355 [inline]
ffff8880285bd7b0 (slock-AF_INET){+.-.}-{2:2}, at: release_sock+0x1a/0x170 net/core/sock.c:3483

but task is already holding lock:
ffff8880285bdab8 (clock-AF_INET){++..}-{2:2}, at: l2tp_tunnel_register+0x24f/0xec0 net/l2tp/l2tp_core.c:1484

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #2 (clock-AF_INET){++..}-{2:2}:
       __raw_read_lock_bh include/linux/rwlock_api_smp.h:176 [inline]
       _raw_read_lock_bh+0x3f/0x70 kernel/locking/spinlock.c:252
       sock_i_uid+0x1a/0xa0 net/core/sock.c:2564
       sk_reuseport_match net/ipv4/inet_connection_sock.c:401 [inline]
       inet_csk_get_port+0x5eb/0x21d0 net/ipv4/inet_connection_sock.c:532
       inet_csk_listen_start+0x18b/0x400 net/ipv4/inet_connection_sock.c:1237
       inet_listen+0x1c8/0x500 net/ipv4/af_inet.c:228
       __sys_listen+0x151/0x200 net/socket.c:1810
       __do_sys_listen net/socket.c:1819 [inline]
       __se_sys_listen net/socket.c:1817 [inline]
       __x64_sys_listen+0x4f/0x70 net/socket.c:1817
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

-> #1 (&tcp_hashinfo.bhash[i].lock){+.-.}-{2:2}:
       __raw_spin_lock include/linux/spinlock_api_smp.h:133 [inline]
       _raw_spin_lock+0x2e/0x40 kernel/locking/spinlock.c:154
       spin_lock include/linux/spinlock.h:350 [inline]
       __inet_inherit_port+0x260/0x1890 net/ipv4/inet_hashtables.c:230
       tcp_v4_syn_recv_sock+0xa07/0x1200 net/ipv4/tcp_ipv4.c:1628
       tcp_check_req+0x384/0x1650 net/ipv4/tcp_minisocks.c:803
       tcp_v4_rcv+0x1d3b/0x3040 net/ipv4/tcp_ipv4.c:2070
       ip_protocol_deliver_rcu+0x7d/0x330 net/ipv4/ip_input.c:205
       ip_local_deliver_finish+0x29c/0x400 net/ipv4/ip_input.c:233
       dst_input include/net/dst.h:454 [inline]
       ip_sublist_rcv_finish+0x88/0x250 net/ipv4/ip_input.c:580
       ip_list_rcv_finish net/ipv4/ip_input.c:630 [inline]
       ip_sublist_rcv+0x436/0x840 net/ipv4/ip_input.c:638
       ip_list_rcv+0x2a5/0x3e0 net/ipv4/ip_input.c:673
       __netif_receive_skb_list_ptype net/core/dev.c:5525 [inline]
       __netif_receive_skb_list_core+0x490/0x8a0 net/core/dev.c:5573
       __netif_receive_skb_list net/core/dev.c:5625 [inline]
       netif_receive_skb_list_internal+0x5f3/0xc90 net/core/dev.c:5716
       gro_normal_list include/net/gro.h:433 [inline]
       gro_normal_list include/net/gro.h:429 [inline]
       napi_complete_done+0x1ca/0x810 net/core/dev.c:6056
       virtqueue_napi_complete drivers/net/virtio_net.c:405 [inline]
       virtnet_poll+0xabc/0x10f0 drivers/net/virtio_net.c:1682
       __napi_poll+0x9e/0x5c0 net/core/dev.c:6485
       napi_poll net/core/dev.c:6552 [inline]
       net_rx_action+0x8c8/0xcc0 net/core/dev.c:6663
       __do_softirq+0x1fb/0xadc kernel/softirq.c:571
       invoke_softirq kernel/softirq.c:445 [inline]
       __irq_exit_rcu+0x123/0x180 kernel/softirq.c:650
       irq_exit_rcu+0x9/0x20 kernel/softirq.c:662
       common_interrupt+0xad/0xd0 arch/x86/kernel/irq.c:240
       asm_common_interrupt+0x26/0x40 arch/x86/include/asm/idtentry.h:640
       native_safe_halt arch/x86/include/asm/irqflags.h:51 [inline]
       arch_safe_halt arch/x86/include/asm/irqflags.h:89 [inline]
       acpi_safe_halt drivers/acpi/processor_idle.c:112 [inline]
       acpi_idle_do_entry+0x185/0x200 drivers/acpi/processor_idle.c:570
       acpi_idle_enter+0x2c7/0x4c0 drivers/acpi/processor_idle.c:707
       cpuidle_enter_state+0x156/0xc40 drivers/cpuidle/cpuidle.c:239
       cpuidle_enter+0x49/0xa0 drivers/cpuidle/cpuidle.c:356
       call_cpuidle kernel/sched/idle.c:155 [inline]
       cpuidle_idle_call kernel/sched/idle.c:236 [inline]
       do_idle+0x3f7/0x590 kernel/sched/idle.c:303
       cpu_startup_entry+0x18/0x20 kernel/sched/idle.c:400
       rest_init+0x148/0x210 init/main.c:732
       arch_call_rest_init+0xe/0x13 init/main.c:894
       start_kernel+0x313/0x331 init/main.c:1148
       secondary_startup_64_no_verify+0xce/0xdb

-> #0 (slock-AF_INET){+.-.}-{2:2}:
       check_prev_add kernel/locking/lockdep.c:3097 [inline]
       check_prevs_add kernel/locking/lockdep.c:3216 [inline]
       validate_chain kernel/locking/lockdep.c:3831 [inline]
       __lock_acquire+0x2a43/0x56d0 kernel/locking/lockdep.c:5055
       lock_acquire kernel/locking/lockdep.c:5668 [inline]
       lock_acquire+0x1e3/0x630 kernel/locking/lockdep.c:5633
       __raw_spin_lock_bh include/linux/spinlock_api_smp.h:126 [inline]
       _raw_spin_lock_bh+0x33/0x40 kernel/locking/spinlock.c:178
       spin_lock_bh include/linux/spinlock.h:355 [inline]
       release_sock+0x1a/0x170 net/core/sock.c:3483
       l2tp_tunnel_register+0x753/0xec0 net/l2tp/l2tp_core.c:1487
       l2tp_nl_cmd_tunnel_create+0x364/0x9a0 net/l2tp/l2tp_netlink.c:245
       genl_family_rcv_msg_doit.isra.0+0x1b8/0x290 net/netlink/genetlink.c:968
       genl_family_rcv_msg net/netlink/genetlink.c:1048 [inline]
       genl_rcv_msg+0x3c9/0x6c0 net/netlink/genetlink.c:1065
       netlink_rcv_skb+0x12a/0x390 net/netlink/af_netlink.c:2564
       genl_rcv+0x23/0x30 net/netlink/genetlink.c:1076
       netlink_unicast_kernel net/netlink/af_netlink.c:1330 [inline]
       netlink_unicast+0x437/0x710 net/netlink/af_netlink.c:1356
       netlink_sendmsg+0x786/0xc30 net/netlink/af_netlink.c:1932
       sock_sendmsg_nosec net/socket.c:714 [inline]
       sock_sendmsg+0xaf/0xe0 net/socket.c:734
       ____sys_sendmsg+0x5f7/0x8a0 net/socket.c:2476
       ___sys_sendmsg+0xdb/0x160 net/socket.c:2530
       __sys_sendmsg+0xc7/0x160 net/socket.c:2559
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

other info that might help us debug this:

Chain exists of:
  slock-AF_INET --> &tcp_hashinfo.bhash[i].lock --> clock-AF_INET

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(clock-AF_INET);
                               lock(&tcp_hashinfo.bhash[i].lock);
                               lock(clock-AF_INET);
  lock(slock-AF_INET);

 *** DEADLOCK ***

4 locks held by syz-executor.0/5598:
 #0: ffffffff8d082350 (cb_lock){++++}-{3:3}, at: genl_rcv+0x14/0x30 net/netlink/genetlink.c:1075
 #1: ffffffff8d082408 (genl_mutex){+.+.}-{3:3}, at: genl_lock net/netlink/genetlink.c:33 [inline]
 #1: ffffffff8d082408 (genl_mutex){+.+.}-{3:3}, at: genl_rcv_msg+0x3dc/0x6c0 net/netlink/genetlink.c:1063
 #2: ffff8880285bd830 (sk_lock-AF_INET){+.+.}-{0:0}, at: lock_sock include/net/sock.h:1725 [inline]
 #2: ffff8880285bd830 (sk_lock-AF_INET){+.+.}-{0:0}, at: l2tp_tunnel_register+0x23b/0xec0 net/l2tp/l2tp_core.c:1483
 #3: ffff8880285bdab8 (clock-AF_INET){++..}-{2:2}, at: l2tp_tunnel_register+0x24f/0xec0 net/l2tp/l2tp_core.c:1484

stack backtrace:
CPU: 1 PID: 5598 Comm: syz-executor.0 Not tainted 6.2.0-rc3-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/12/2023
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x5b/0x81 lib/dump_stack.c:106
 check_noncircular+0x25f/0x2e0 kernel/locking/lockdep.c:2177
 check_prev_add kernel/locking/lockdep.c:3097 [inline]
 check_prevs_add kernel/locking/lockdep.c:3216 [inline]
 validate_chain kernel/locking/lockdep.c:3831 [inline]
 __lock_acquire+0x2a43/0x56d0 kernel/locking/lockdep.c:5055
 lock_acquire kernel/locking/lockdep.c:5668 [inline]
 lock_acquire+0x1e3/0x630 kernel/locking/lockdep.c:5633
 __raw_spin_lock_bh include/linux/spinlock_api_smp.h:126 [inline]
 _raw_spin_lock_bh+0x33/0x40 kernel/locking/spinlock.c:178
 spin_lock_bh include/linux/spinlock.h:355 [inline]
 release_sock+0x1a/0x170 net/core/sock.c:3483
 l2tp_tunnel_register+0x753/0xec0 net/l2tp/l2tp_core.c:1487
 l2tp_nl_cmd_tunnel_create+0x364/0x9a0 net/l2tp/l2tp_netlink.c:245
 genl_family_rcv_msg_doit.isra.0+0x1b8/0x290 net/netlink/genetlink.c:968
 genl_family_rcv_msg net/netlink/genetlink.c:1048 [inline]
 genl_rcv_msg+0x3c9/0x6c0 net/netlink/genetlink.c:1065
 netlink_rcv_skb+0x12a/0x390 net/netlink/af_netlink.c:2564
 genl_rcv+0x23/0x30 net/netlink/genetlink.c:1076
 netlink_unicast_kernel net/netlink/af_netlink.c:1330 [inline]
 netlink_unicast+0x437/0x710 net/netlink/af_netlink.c:1356
 netlink_sendmsg+0x786/0xc30 net/netlink/af_netlink.c:1932
 sock_sendmsg_nosec net/socket.c:714 [inline]
 sock_sendmsg+0xaf/0xe0 net/socket.c:734
 ____sys_sendmsg+0x5f7/0x8a0 net/socket.c:2476
 ___sys_sendmsg+0xdb/0x160 net/socket.c:2530
 __sys_sendmsg+0xc7/0x160 net/socket.c:2559
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7ff4de68c0c9
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 f1 19 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007ff4df392168 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
RAX: ffffffffffffffda RBX: 00007ff4de7abf80 RCX: 00007ff4de68c0c9
RDX: 0000000000000000 RSI: 0000000020000240 RDI: 0000000000000003
RBP: 00007ff4de6e7ae9 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 00007fff133511bf R14: 00007ff4df392300 R15: 0000000000022000
 </TASK>

