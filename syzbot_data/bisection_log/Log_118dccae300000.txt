bisecting cause commit starting from 3e12361b6d23f793580a50a6008633501c56ea1d
building syzkaller on 6c236867ce33c0c16b102e02a08226d7eb9b2046
testing commit 3e12361b6d23f793580a50a6008633501c56ea1d
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: 529260992d8236af0bab2c81e02cc5b3c638d03f2c48cfe17f86a6bbfd869b63
run #0: crashed: KASAN: use-after-free Read in scatterwalk_copychunks
run #1: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #2: crashed: KASAN: use-after-free Read in __crypto_xor
run #3: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #4: crashed: KASAN: use-after-free Read in scatterwalk_copychunks
run #5: crashed: KASAN: use-after-free Read in __crypto_xor
run #6: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #7: crashed: KASAN: use-after-free Read in scatterwalk_copychunks
run #8: crashed: KASAN: use-after-free Read in __crypto_xor
run #9: crashed: KASAN: use-after-free Read in scatterwalk_copychunks
run #10: crashed: KASAN: use-after-free Read in __crypto_xor
run #11: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #12: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #13: crashed: KASAN: use-after-free Read in __crypto_xor
run #14: crashed: KASAN: use-after-free Read in __crypto_xor
run #15: crashed: KASAN: use-after-free Read in __crypto_xor
run #16: crashed: KASAN: use-after-free Read in __crypto_xor
run #17: crashed: KASAN: use-after-free Read in __crypto_xor
run #18: crashed: no output from test machine
run #19: crashed: no output from test machine
testing release v5.13
testing commit 62fb9874f5da54fdb243003b386128037319b219
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: 909f5b513362d755e99068620c19525cb2afd91ca8725228219fd46574a48866
run #0: crashed: KASAN: use-after-free Read in __crypto_xor
run #1: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #2: crashed: KASAN: use-after-free Read in __crypto_xor
run #3: crashed: KASAN: use-after-free Read in __crypto_xor
run #4: crashed: KASAN: use-after-free Read in __crypto_xor
run #5: crashed: KASAN: use-after-free Read in __crypto_xor
run #6: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #7: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #8: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #9: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
testing release v5.12
testing commit 9f4ad9e425a1d3b6a34617b8ea226d56a119a717
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: bb4e26dd8f4a005b0fd76547575ef29621d4d502b5251ddaf0a5696974104629
run #0: crashed: KASAN: slab-out-of-bounds Read in scatterwalk_copychunks
run #1: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #2: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #3: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #4: crashed: KASAN: use-after-free Read in __crypto_xor
run #5: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #6: crashed: KASAN: use-after-free Read in __crypto_xor
run #7: crashed: no output from test machine
run #8: crashed: no output from test machine
run #9: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
testing release v5.11
testing commit f40ddce88593482919761f74910f42f4b84c004b
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: 3222e6ed80513dd888ba5df1ed0bb0fed90b38311471a07f8ebfef14f678fd42
run #0: crashed: KASAN: use-after-free Read in __crypto_xor
run #1: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #2: crashed: KASAN: use-after-free Read in scatterwalk_copychunks
run #3: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #4: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #5: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #6: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #7: crashed: KASAN: use-after-free Read in __crypto_xor
run #8: crashed: KASAN: use-after-free Read in __crypto_xor
run #9: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
testing release v5.10
testing commit 2c85ebc57b3e1817b6ce1a6b703928e113a90442
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: 35c88fb67e0626f0232c5254d6e9f188ff33bdc5ecf75a2e20b39b0354577e82
run #0: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #1: crashed: KASAN: use-after-free Read in __crypto_xor
run #2: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #3: crashed: KASAN: use-after-free Read in __crypto_xor
run #4: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #5: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #6: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #7: crashed: KASAN: use-after-free Read in __crypto_xor
run #8: crashed: KASAN: use-after-free Read in __crypto_xor
run #9: crashed: no output from test machine
testing release v5.9
testing commit bbf5c979011a099af5dc76498918ed7df445635b
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: 4753fc6113ccf19b73886623e431f1d42203e5df7900561c23ce4babeaf8f756
run #0: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #1: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #2: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #3: crashed: KASAN: use-after-free Read in __crypto_xor
run #4: crashed: KASAN: use-after-free Read in __crypto_xor
run #5: crashed: KASAN: use-after-free Read in __crypto_xor
run #6: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #7: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #8: crashed: no output from test machine
run #9: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
testing release v5.8
testing commit bcf876870b95592b52519ed4aafcf9d95999bc9c
compiler: gcc (GCC) 8.4.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: 64bef9c619e4f9660afe7c971d6b25d7fe2654ae1e3be1137534ef774e1b1619
run #0: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #1: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #2: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #3: crashed: KASAN: use-after-free Read in scatterwalk_copychunks
run #4: crashed: KASAN: use-after-free Read in __crypto_xor
run #5: crashed: KASAN: use-after-free Read in __crypto_xor
run #6: crashed: KASAN: use-after-free Read in __crypto_xor
run #7: crashed: KASAN: use-after-free Read in __crypto_xor
run #8: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #9: crashed: KASAN: use-after-free Read in __crypto_xor
testing release v5.7
testing commit 3d77e6a8804abcc0504c904bd6e5cdf3a5cf8162
compiler: gcc version 8.4.1 20210217 (GCC), GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: f76fe31c01316385978519b5b4e89add706a0c3d5fe63afc28097ce825bd70af
all runs: OK
# git bisect start bcf876870b95592b52519ed4aafcf9d95999bc9c 3d77e6a8804abcc0504c904bd6e5cdf3a5cf8162
Bisecting: 8752 revisions left to test after this (roughly 13 steps)
[694b5a5d313f3997764b67d52bab66ec7e59e714] Merge tag 'arm-soc-5.8' of git://git.kernel.org/pub/scm/linux/kernel/git/soc/soc

testing commit 694b5a5d313f3997764b67d52bab66ec7e59e714
compiler: gcc version 8.4.1 20210217 (GCC), GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: 2af513036d7bbc070a91132b60254ca3d03a71c966ed0e6dac60d0a6703d8d88
run #0: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #1: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #2: crashed: KASAN: use-after-free Read in __crypto_xor
run #3: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #4: crashed: KASAN: use-after-free Read in __crypto_xor
run #5: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #6: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #7: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #8: crashed: no output from test machine
run #9: crashed: no output from test machine
# git bisect bad 694b5a5d313f3997764b67d52bab66ec7e59e714
Bisecting: 4417 revisions left to test after this (roughly 12 steps)
[2e63f6ce7ed2c4ff83ba30ad9ccad422289a6c63] Merge branch 'uaccess.comedi' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs

testing commit 2e63f6ce7ed2c4ff83ba30ad9ccad422289a6c63
compiler: gcc version 8.4.1 20210217 (GCC), GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: 5ac85afd45025a85439f51bafa51c3084d8647ddaea167b1c95dfdead59737ef
all runs: OK
# git bisect good 2e63f6ce7ed2c4ff83ba30ad9ccad422289a6c63
Bisecting: 2208 revisions left to test after this (roughly 11 steps)
[5df42c8267418bfb8da54cc4772b397ea4c88aea] ice: fix MAC write command

testing commit 5df42c8267418bfb8da54cc4772b397ea4c88aea
compiler: gcc version 8.4.1 20210217 (GCC), GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: 7a5ffc26a362d44d8a1b69857477c5e49e92b3d4944cfc9e2d228c0e6299ffb5
all runs: OK
# git bisect good 5df42c8267418bfb8da54cc4772b397ea4c88aea
Bisecting: 1032 revisions left to test after this (roughly 10 steps)
[a98f670e41a99f53acb1fb33cee9c6abbb2e6f23] Merge tag 'media/v5.8-1' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media

testing commit a98f670e41a99f53acb1fb33cee9c6abbb2e6f23
compiler: gcc version 8.4.1 20210217 (GCC), GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: 013049a236619e40f9d04003626dc113f91034e71fa776b12e62c97cc89d6b28
run #0: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #1: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #2: crashed: KASAN: use-after-free Read in __crypto_xor
run #3: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #4: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #5: crashed: KASAN: use-after-free Read in __crypto_xor
run #6: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #7: crashed: KASAN: use-after-free Read in __crypto_xor
run #8: crashed: KASAN: use-after-free Read in __crypto_xor
run #9: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
# git bisect bad a98f670e41a99f53acb1fb33cee9c6abbb2e6f23
Bisecting: 636 revisions left to test after this (roughly 9 steps)
[c444eb564fb16645c172d550359cb3d75fe8a040] mm: thp: make the THP mapcount atomic against __split_huge_pmd_locked()

testing commit c444eb564fb16645c172d550359cb3d75fe8a040
compiler: gcc version 8.4.1 20210217 (GCC), GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: 9f17664e957a7ed7d4964c0ed5f0f64eb14e3bbdea5585cf6ddcebb5d809144f
all runs: OK
# git bisect good c444eb564fb16645c172d550359cb3d75fe8a040
Bisecting: 318 revisions left to test after this (roughly 8 steps)
[3b5af3171e2d5a73ae6f04965ed653d039904eb6] media: cec: silence shift wrapping warning in __cec_s_log_addrs()

testing commit 3b5af3171e2d5a73ae6f04965ed653d039904eb6
compiler: gcc version 8.4.1 20210217 (GCC), GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: db696aeb5e2e579ff2fec384b6036b67970a311f5f7dfcb3cd946b7e47884174
all runs: boot failed: kernel panic: VFS: Unable to mount root fs on unknown-block(8,1)
# git bisect skip 3b5af3171e2d5a73ae6f04965ed653d039904eb6
Bisecting: 318 revisions left to test after this (roughly 8 steps)
[abb242f57196dbaa108271575353a0453f6834ef] mm: memcontrol: fix stat-corrupting race in charge moving

testing commit abb242f57196dbaa108271575353a0453f6834ef
compiler: gcc version 8.4.1 20210217 (GCC), GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: 9dd99a8015723d5f129666b75c39c17b1b32958fb494a53b1aacb3b5c25c1a4b
run #0: crashed: KASAN: use-after-free Write in pcrypt_aead_enc
run #1: crashed: KASAN: use-after-free Read in __crypto_xor
run #2: crashed: KASAN: use-after-free Read in __crypto_xor
run #3: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #4: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #5: crashed: KASAN: use-after-free Read in __crypto_xor
run #6: crashed: KASAN: use-after-free Read in __crypto_xor
run #7: crashed: no output from test machine
run #8: crashed: no output from test machine
run #9: crashed: no output from test machine
# git bisect bad abb242f57196dbaa108271575353a0453f6834ef
Bisecting: 41 revisions left to test after this (roughly 5 steps)
[3334a45eb9e2bb040c880ef65e1d72357a0a008b] mm/page_alloc: use ac->high_zoneidx for classzone_idx

testing commit 3334a45eb9e2bb040c880ef65e1d72357a0a008b
compiler: gcc version 8.4.1 20210217 (GCC), GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: ba10f2b37ca2518f89da6e377f6508e7493e3bc3036c47b136d440f0fa115227
all runs: OK
# git bisect good 3334a45eb9e2bb040c880ef65e1d72357a0a008b
Bisecting: 20 revisions left to test after this (roughly 4 steps)
[a980df33e9351e5474c06ec0fd96b2f409e2ff22] khugepaged: drain all LRU caches before scanning pages

testing commit a980df33e9351e5474c06ec0fd96b2f409e2ff22
compiler: gcc version 8.4.1 20210217 (GCC), GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: f051ddc11a3664023401355810963263a3cce965e1624ea6249ec3da0f1d7b3f
run #0: crashed: KASAN: use-after-free Read in __crypto_xor
run #1: crashed: KASAN: slab-out-of-bounds Read in scatterwalk_copychunks
run #2: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #3: crashed: KASAN: use-after-free Read in scatterwalk_copychunks
run #4: crashed: KASAN: use-after-free Read in scatterwalk_copychunks
run #5: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #6: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #7: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #8: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #9: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
# git bisect bad a980df33e9351e5474c06ec0fd96b2f409e2ff22
Bisecting: 10 revisions left to test after this (roughly 3 steps)
[305dacf77952e6e62405f916654f38423c78ab2f] padata: remove exit routine

testing commit 305dacf77952e6e62405f916654f38423c78ab2f
compiler: gcc version 8.4.1 20210217 (GCC), GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: 2f1bebbd15ffce51af0df798b6cd758bcabd1ee618ee8c9045905aebb3714584
all runs: OK
# git bisect good 305dacf77952e6e62405f916654f38423c78ab2f
Bisecting: 5 revisions left to test after this (roughly 3 steps)
[e44431498f5fbf427f139aa413cf381b4fa3a600] mm: parallelize deferred_init_memmap()

testing commit e44431498f5fbf427f139aa413cf381b4fa3a600
compiler: gcc version 8.4.1 20210217 (GCC), GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: e76da64cbd0bc5417ec751dd33ad79041d5a31d9e6f91195c9f15409ee789d75
run #0: crashed: KASAN: use-after-free Read in __crypto_xor
run #1: crashed: KASAN: use-after-free Read in __crypto_xor
run #2: crashed: KASAN: use-after-free Read in __crypto_xor
run #3: crashed: KASAN: use-after-free Read in __crypto_xor
run #4: crashed: KASAN: use-after-free Read in __crypto_xor
run #5: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #6: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #7: crashed: KASAN: use-after-free Read in scatterwalk_copychunks
run #8: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #9: crashed: KASAN: use-after-free Read in __crypto_xor
# git bisect bad e44431498f5fbf427f139aa413cf381b4fa3a600
Bisecting: 1 revision left to test after this (roughly 1 step)
[004ed42638f4428e70ead59d170f3d17ff761a0f] padata: add basic support for multithreaded jobs

testing commit 004ed42638f4428e70ead59d170f3d17ff761a0f
compiler: gcc version 8.4.1 20210217 (GCC), GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: 12dbab348c9a7e5f1b402a8eb712c4fad5ecfc8ddfd6b2659926d4d34fca81e8
run #0: crashed: KASAN: use-after-free Read in __crypto_xor
run #1: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #2: crashed: KASAN: use-after-free Read in __crypto_xor
run #3: crashed: KASAN: use-after-free Read in __crypto_xor
run #4: crashed: KASAN: use-after-free Read in __crypto_xor
run #5: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #6: crashed: KASAN: use-after-free Read in __crypto_xor
run #7: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #8: crashed: KASAN: use-after-free Read in __crypto_xor
run #9: crashed: no output from test machine
# git bisect bad 004ed42638f4428e70ead59d170f3d17ff761a0f
Bisecting: 0 revisions left to test after this (roughly 1 step)
[4611ce22468895acd61fee9ac1da810d60617d9a] padata: allocate work structures for parallel jobs from a pool

testing commit 4611ce22468895acd61fee9ac1da810d60617d9a
compiler: gcc version 8.4.1 20210217 (GCC), GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: adc1acf11d0bbec7d3d79ad3e369573929570256cfcd08e90355144a1103f346
run #0: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #1: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #2: crashed: KASAN: use-after-free Read in __crypto_xor
run #3: crashed: KASAN: use-after-free Read in __crypto_xor
run #4: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #5: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #6: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #7: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #8: crashed: KASAN: slab-out-of-bounds Read in __crypto_xor
run #9: crashed: no output from test machine
# git bisect bad 4611ce22468895acd61fee9ac1da810d60617d9a
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[f1b192b117cd418bacf42a9583d7a01855a18fe5] padata: initialize earlier

testing commit f1b192b117cd418bacf42a9583d7a01855a18fe5
compiler: gcc version 8.4.1 20210217 (GCC), GNU ld (GNU Binutils for Debian) 2.35.1
kernel signature: 1af68684db3b1ccf4f9076334868d1fad2ea336cd0d71519cda1edf1519af788
all runs: OK
# git bisect good f1b192b117cd418bacf42a9583d7a01855a18fe5
4611ce22468895acd61fee9ac1da810d60617d9a is the first bad commit
commit 4611ce22468895acd61fee9ac1da810d60617d9a
Author: Daniel Jordan <daniel.m.jordan@oracle.com>
Date:   Wed Jun 3 15:59:39 2020 -0700

    padata: allocate work structures for parallel jobs from a pool
    
    padata allocates per-CPU, per-instance work structs for parallel jobs.  A
    do_parallel call assigns a job to a sequence number and hashes the number
    to a CPU, where the job will eventually run using the corresponding work.
    
    This approach fit with how padata used to bind a job to each CPU
    round-robin, makes less sense after commit bfde23ce200e6 ("padata: unbind
    parallel jobs from specific CPUs") because a work isn't bound to a
    particular CPU anymore, and isn't needed at all for multithreaded jobs
    because they don't have sequence numbers.
    
    Replace the per-CPU works with a preallocated pool, which allows sharing
    them between existing padata users and the upcoming multithreaded user.
    The pool will also facilitate setting NUMA-aware concurrency limits with
    later users.
    
    The pool is sized according to the number of possible CPUs.  With this
    limit, MAX_OBJ_NUM no longer makes sense, so remove it.
    
    If the global pool is exhausted, a parallel job is run in the current task
    instead to throttle a system trying to do too much in parallel.
    
    Signed-off-by: Daniel Jordan <daniel.m.jordan@oracle.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Tested-by: Josh Triplett <josh@joshtriplett.org>
    Cc: Alexander Duyck <alexander.h.duyck@linux.intel.com>
    Cc: Alex Williamson <alex.williamson@redhat.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: Jason Gunthorpe <jgg@ziepe.ca>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Kirill Tkhai <ktkhai@virtuozzo.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Pavel Machek <pavel@ucw.cz>
    Cc: Pavel Tatashin <pasha.tatashin@soleen.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Robert Elliott <elliott@hpe.com>
    Cc: Shile Zhang <shile.zhang@linux.alibaba.com>
    Cc: Steffen Klassert <steffen.klassert@secunet.com>
    Cc: Steven Sistare <steven.sistare@oracle.com>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Zi Yan <ziy@nvidia.com>
    Link: http://lkml.kernel.org/r/20200527173608.2885243-4-daniel.m.jordan@oracle.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

 include/linux/padata.h |   8 +---
 kernel/padata.c        | 118 ++++++++++++++++++++++++++++++++-----------------
 2 files changed, 78 insertions(+), 48 deletions(-)

culprit signature: adc1acf11d0bbec7d3d79ad3e369573929570256cfcd08e90355144a1103f346
parent  signature: 1af68684db3b1ccf4f9076334868d1fad2ea336cd0d71519cda1edf1519af788
revisions tested: 22, total time: 5h24m3.071085806s (build: 2h13m16.344543606s, test: 3h8m2.070439983s)
first bad commit: 4611ce22468895acd61fee9ac1da810d60617d9a padata: allocate work structures for parallel jobs from a pool
recipients (to): ["akpm@linux-foundation.org" "daniel.m.jordan@oracle.com" "josh@joshtriplett.org" "torvalds@linux-foundation.org"]
recipients (cc): []
crash: no output from test machine

