bisecting cause commit starting from 952923ddc01120190dcf671e7b354364ce1d1362
building syzkaller on c885789257c76ea4479ea36282f5e0a2c7861e26
testing commit 952923ddc01120190dcf671e7b354364ce1d1362
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 4ad8e93dd02e478aba7779a3e59e8819aaae702f1ebf27b42821784ea870eff7
run #0: crashed: KASAN: use-after-free Read in filp_close
run #1: crashed: KASAN: use-after-free Read in filp_close
run #2: crashed: KASAN: use-after-free Read in filp_close
run #3: crashed: KASAN: use-after-free Read in filp_close
run #4: crashed: KASAN: use-after-free Read in filp_close
run #5: crashed: KASAN: use-after-free Read in filp_close
run #6: crashed: KASAN: use-after-free Read in filp_close
run #7: crashed: KASAN: use-after-free Read in filp_close
run #8: crashed: KASAN: use-after-free Read in filp_close
run #9: crashed: KASAN: use-after-free Read in filp_close
run #10: crashed: KASAN: use-after-free Read in filp_close
run #11: crashed: KASAN: use-after-free Read in filp_close
run #12: crashed: KASAN: use-after-free Read in filp_close
run #13: crashed: KASAN: use-after-free Read in filp_close
run #14: boot failed: INFO: task hung in add_early_randomness
run #15: boot failed: INFO: task hung in add_early_randomness
run #16: boot failed: INFO: task hung in add_early_randomness
run #17: boot failed: INFO: task hung in add_early_randomness
run #18: boot failed: INFO: task hung in add_early_randomness
run #19: boot failed: INFO: task hung in add_early_randomness
testing release v5.18
testing commit 4b0986a3613c92f4ec1bdc7f60ec66fea135991f
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 4905e1d0ccbf620d0440f9abf7914ccef595872b662178f99302b0a929cfb33f
all runs: OK
# git bisect start 952923ddc01120190dcf671e7b354364ce1d1362 4b0986a3613c92f4ec1bdc7f60ec66fea135991f
Bisecting: 6899 revisions left to test after this (roughly 13 steps)
[2518f226c60d8e04d18ba4295500a5b0b8ac7659] Merge tag 'drm-next-2022-05-25' of git://anongit.freedesktop.org/drm/drm

testing commit 2518f226c60d8e04d18ba4295500a5b0b8ac7659
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: a51e62ac6e44737a5876e31239383d29bd7cf768074a85963562f3ee2d0e1086
all runs: OK
# git bisect good 2518f226c60d8e04d18ba4295500a5b0b8ac7659
Bisecting: 3430 revisions left to test after this (roughly 12 steps)
[6b0e34a0307e046c0662d7dcaba2a2c9993c4339] Merge tag 'clk-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/clk/linux

testing commit 6b0e34a0307e046c0662d7dcaba2a2c9993c4339
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: fc2157b66418f6b1c687038726644a946ebf276128e1cd670ad89dfd96162982
all runs: OK
# git bisect good 6b0e34a0307e046c0662d7dcaba2a2c9993c4339
Bisecting: 1733 revisions left to test after this (roughly 11 steps)
[58f9d52ff689a262bec7f5713c07f5a79e115168] Merge tag 'net-5.19-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net

testing commit 58f9d52ff689a262bec7f5713c07f5a79e115168
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 0392c975d1e266fd6afb7a18f1720aebcdb7d1c71dc963f4818180c10b67953d
all runs: OK
# git bisect good 58f9d52ff689a262bec7f5713c07f5a79e115168
Bisecting: 861 revisions left to test after this (roughly 10 steps)
[932c2989b59008e530ffcc7c7e6ef507a28b28ca] Merge tag 'tty-5.19-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty

testing commit 932c2989b59008e530ffcc7c7e6ef507a28b28ca
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 9d93d6517c95e2dee0042026751dd9f5df1a9750e87e29efd0e1799807243923
run #0: boot failed: INFO: task hung in add_early_randomness
run #1: boot failed: INFO: task hung in add_early_randomness
run #2: boot failed: INFO: task hung in add_early_randomness
run #3: boot failed: INFO: task hung in add_early_randomness
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect good 932c2989b59008e530ffcc7c7e6ef507a28b28ca
Bisecting: 458 revisions left to test after this (roughly 9 steps)
[90de6805267f8c79cd2b1a36805071e257c39b5c] habanalabs: use separate structure info for each error collect data

testing commit 90de6805267f8c79cd2b1a36805071e257c39b5c
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 4b8b96dbaa8c89ea221690da08ed2e9b0ef99db5d36999e00c3de20c9a98bb55
all runs: OK
# git bisect good 90de6805267f8c79cd2b1a36805071e257c39b5c
Bisecting: 229 revisions left to test after this (roughly 8 steps)
[d1833463dd132b3ff83dfab76c0249fcf46d1656] perf list: Update event description for IBM z15 to latest level

testing commit d1833463dd132b3ff83dfab76c0249fcf46d1656
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 3e9822ec1abf3bff2420c71497ed8e7786d07d82c96e303d5960cc62e719c2fd
failed: failed to create VM pool: failed to create GCE image: create image operation failed: &{Code:PERMISSIONS_ERROR Location: Message:Required 'read' permission for 'disks/ci-upstream-kasan-gce-root-bisect-job-bisect-job-image.tar.gz' ForceSendFields:[] NullFields:[]}.
# git bisect skip d1833463dd132b3ff83dfab76c0249fcf46d1656
Bisecting: 229 revisions left to test after this (roughly 8 steps)
[0cb46f8c7c72cb56badcf1f6b5f0ba1138a0f98c] usb: ehci-omap: drop unused ehci_read() function

testing commit 0cb46f8c7c72cb56badcf1f6b5f0ba1138a0f98c
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: ad52ba1334318bc9fa7e86e4f781ee5412ace6342a2d550cc8168b645eafa058
all runs: OK
# git bisect good 0cb46f8c7c72cb56badcf1f6b5f0ba1138a0f98c
Bisecting: 189 revisions left to test after this (roughly 8 steps)
[21873bd66b6e6040d95d0a33525ea6933bdc6c71] Merge tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux

testing commit 21873bd66b6e6040d95d0a33525ea6933bdc6c71
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 4059ac4e1bba2e44c2f871d5f3f67646a5bb9002ea0e4cd5e1b7502f3c66efb0
run #0: boot failed: INFO: task hung in add_early_randomness
run #1: boot failed: INFO: task hung in add_early_randomness
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect good 21873bd66b6e6040d95d0a33525ea6933bdc6c71
Bisecting: 88 revisions left to test after this (roughly 7 steps)
[1f952675835bfe18d6ae494a5581724d68c52352] Merge tag 'ntfs3_for_5.19' of https://github.com/Paragon-Software-Group/linux-ntfs3

testing commit 1f952675835bfe18d6ae494a5581724d68c52352
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: a1f5adb1e0566d975644ae54761c8c1b9b57208346a2ef9f533750576a258010
run #0: OK
run #1: boot failed: INFO: task hung in add_early_randomness
run #2: boot failed: INFO: task hung in add_early_randomness
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect good 1f952675835bfe18d6ae494a5581724d68c52352
Bisecting: 55 revisions left to test after this (roughly 6 steps)
[23df9ba64bb9e26cfee6b34f5c3ece49a8a61ee1] Merge tag 'for-5.19/parisc-2' of git://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux

testing commit 23df9ba64bb9e26cfee6b34f5c3ece49a8a61ee1
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: fa2677a7e552b2eed4bd38a1a2c4779efaac30ef520648afc7f110827bce9902
run #0: boot failed: INFO: task hung in add_early_randomness
run #1: boot failed: INFO: task hung in add_early_randomness
run #2: boot failed: INFO: task hung in add_early_randomness
run #3: boot failed: INFO: task hung in add_early_randomness
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect good 23df9ba64bb9e26cfee6b34f5c3ece49a8a61ee1
Bisecting: 27 revisions left to test after this (roughly 5 steps)
[a7ef9b455c7ca8f07a5b4bd967a3c39c7434d43f] KVM: x86: hyper-v: fix type of valid_bank_mask

testing commit a7ef9b455c7ca8f07a5b4bd967a3c39c7434d43f
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: a534041f728b3562c297086fec56ae80f07e75b1213e033c7f1f25cb41db2b8e
all runs: OK
# git bisect good a7ef9b455c7ca8f07a5b4bd967a3c39c7434d43f
Bisecting: 13 revisions left to test after this (roughly 4 steps)
[d66016c5cd3d4c474cd24622c511dcd358645613] Merge tag '5.19-rc-smb3-client-fixes-part2' of git://git.samba.org/sfrench/cifs-2.6

testing commit d66016c5cd3d4c474cd24622c511dcd358645613
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: b2c6a2bc2621664e93c4faafd98c4553215becbeb1b0040fcbfc7e0442d8dbd1
run #0: boot failed: INFO: task hung in add_early_randomness
run #1: boot failed: INFO: task hung in add_early_randomness
run #2: boot failed: INFO: task hung in add_early_randomness
run #3: boot failed: INFO: task hung in add_early_randomness
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect good d66016c5cd3d4c474cd24622c511dcd358645613
Bisecting: 8 revisions left to test after this (roughly 3 steps)
[70f8d9c5750bbb0ca4ef7e23d6abcb05e6061138] move mount-related externs from fs.h to mount.h

testing commit 70f8d9c5750bbb0ca4ef7e23d6abcb05e6061138
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 24d62bc6adad65c427134deb6bedef7aaa4bde44300dd4b99564f206f27324f1
all runs: OK
# git bisect good 70f8d9c5750bbb0ca4ef7e23d6abcb05e6061138
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[cbd76edeabd5ed078391abb2323b7aee790cdc04] Merge tag 'pull-18-rc1-work.mount' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs

testing commit cbd76edeabd5ed078391abb2323b7aee790cdc04
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: dc1073d452fe6e9ce91a69b7a1153d69c400542eadc488417fa5af6c936d3335
run #0: crashed: KASAN: use-after-free Read in filp_close
run #1: crashed: KASAN: use-after-free Read in filp_close
run #2: crashed: KASAN: use-after-free Read in filp_close
run #3: crashed: KASAN: use-after-free Read in filp_close
run #4: crashed: KASAN: use-after-free Read in filp_close
run #5: crashed: KASAN: use-after-free Read in filp_close
run #6: crashed: KASAN: use-after-free Read in filp_close
run #7: crashed: KASAN: use-after-free Read in filp_close
run #8: boot failed: INFO: task hung in add_early_randomness
run #9: boot failed: INFO: task hung in add_early_randomness
# git bisect bad cbd76edeabd5ed078391abb2323b7aee790cdc04
Bisecting: 1 revision left to test after this (roughly 1 step)
[6319194ec57b0452dcda4589d24c4e7db299c5bf] Unify the primitives for file descriptor closing

testing commit 6319194ec57b0452dcda4589d24c4e7db299c5bf
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 74aa8f110fa53b132e7298edeed2899c072ae8e7951766aef690f6e94c273e1f
all runs: crashed: KASAN: use-after-free Read in filp_close
# git bisect bad 6319194ec57b0452dcda4589d24c4e7db299c5bf
Bisecting: 1 revision left to test after this (roughly 1 step)
[4329490a78b66ae44a9c93e433da375284162e3d] io_uring_enter(): don't leave f.flags uninitialized

testing commit 4329490a78b66ae44a9c93e433da375284162e3d
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 0ca45ce8238525f0c43f33a60173f5214690db16d4c707955a70e2197b65f0b0
all runs: OK
# git bisect good 4329490a78b66ae44a9c93e433da375284162e3d
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[81132a39c152ca09832b9e4cb748129cee5f55ec] fs: remove fget_many and fput_many interface

testing commit 81132a39c152ca09832b9e4cb748129cee5f55ec
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 804d917c5dd7da7ec6e0a822b540aedbc74cc9e95ee11dbe70f44614ca7dce74
all runs: OK
# git bisect good 81132a39c152ca09832b9e4cb748129cee5f55ec
6319194ec57b0452dcda4589d24c4e7db299c5bf is the first bad commit
commit 6319194ec57b0452dcda4589d24c4e7db299c5bf
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Thu May 12 17:08:03 2022 -0400

    Unify the primitives for file descriptor closing
    
    Currently we have 3 primitives for removing an opened file from descriptor
    table - pick_file(), __close_fd_get_file() and close_fd_get_file().  Their
    calling conventions are rather odd and there's a code duplication for no
    good reason.  They can be unified -
    
    1) have __range_close() cap max_fd in the very beginning; that way
    we don't need separate way for pick_file() to report being past the end
    of descriptor table.
    
    2) make {__,}close_fd_get_file() return file (or NULL) directly, rather
    than returning it via struct file ** argument.  Don't bother with
    (bogus) return value - nobody wants that -ENOENT.
    
    3) make pick_file() return NULL on unopened descriptor - the only caller
    that used to care about the distinction between descriptor past the end
    of descriptor table and finding NULL in descriptor table doesn't give
    a damn after (1).
    
    4) lift ->files_lock out of pick_file()
    
    That actually simplifies the callers, as well as the primitives themselves.
    Code duplication is also gone...
    
    Reviewed-by: Christian Brauner (Microsoft) <brauner@kernel.org>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

 drivers/android/binder.c |  2 +-
 fs/file.c                | 77 ++++++++++++++++++------------------------------
 fs/internal.h            |  2 +-
 fs/io_uring.c            |  7 ++---
 include/linux/fdtable.h  |  2 +-
 5 files changed, 34 insertions(+), 56 deletions(-)

culprit signature: 74aa8f110fa53b132e7298edeed2899c072ae8e7951766aef690f6e94c273e1f
parent  signature: 804d917c5dd7da7ec6e0a822b540aedbc74cc9e95ee11dbe70f44614ca7dce74
revisions tested: 19, total time: 5h14m20.093037897s (build: 2h4m20.233095113s, test: 3h7m38.427551174s)
first bad commit: 6319194ec57b0452dcda4589d24c4e7db299c5bf Unify the primitives for file descriptor closing
recipients (to): ["arve@android.com" "axboe@kernel.dk" "brauner@kernel.org" "brauner@kernel.org" "gregkh@linuxfoundation.org" "hridya@google.com" "io-uring@vger.kernel.org" "joel@joelfernandes.org" "maco@android.com" "surenb@google.com" "tkjos@android.com" "viro@zeniv.linux.org.uk"]
recipients (cc): ["asml.silence@gmail.com" "linux-fsdevel@vger.kernel.org" "linux-kernel@vger.kernel.org" "viro@zeniv.linux.org.uk"]
crash: KASAN: use-after-free Read in filp_close
==================================================================
BUG: KASAN: use-after-free in instrument_atomic_read include/linux/instrumented.h:71 [inline]
BUG: KASAN: use-after-free in atomic_long_read include/linux/atomic/atomic-instrumented.h:1265 [inline]
BUG: KASAN: use-after-free in filp_close+0x1c/0x120 fs/open.c:1317
Read of size 8 at addr ffff88801dddd6f0 by task syz-executor.5/9915

CPU: 1 PID: 9915 Comm: syz-executor.5 Not tainted 5.18.0-rc1-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x57/0x7d lib/dump_stack.c:106
 print_address_description.constprop.0.cold+0xeb/0x495 mm/kasan/report.c:313
 print_report mm/kasan/report.c:429 [inline]
 kasan_report.cold+0xf4/0x1c6 mm/kasan/report.c:491
 check_region_inline mm/kasan/generic.c:183 [inline]
 kasan_check_range+0x13d/0x180 mm/kasan/generic.c:189
 instrument_atomic_read include/linux/instrumented.h:71 [inline]
 atomic_long_read include/linux/atomic/atomic-instrumented.h:1265 [inline]
 filp_close+0x1c/0x120 fs/open.c:1317
 __do_sys_close fs/open.c:1342 [inline]
 __se_sys_close fs/open.c:1340 [inline]
 __x64_sys_close+0x28/0x60 fs/open.c:1340
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x44/0xae
RIP: 0033:0x7f65fa43bd4b
Code: 0f 05 48 3d 00 f0 ff ff 77 45 c3 0f 1f 40 00 48 83 ec 18 89 7c 24 0c e8 63 fc ff ff 8b 7c 24 0c 41 89 c0 b8 03 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 35 44 89 c7 89 44 24 0c e8 a1 fc ff ff 8b 44
RSP: 002b:00007ffc63d022c0 EFLAGS: 00000293 ORIG_RAX: 0000000000000003
RAX: ffffffffffffffda RBX: 0000000000000004 RCX: 00007f65fa43bd4b
RDX: 00007f65fa5a0630 RSI: ffffffffffffffff RDI: 0000000000000003
RBP: 00007f65fa59d960 R08: 0000000000000000 R09: 00007f65fa5a0638
R10: 00007ffc63d023c0 R11: 0000000000000293 R12: 0000000000016b64
R13: 00007ffc63d023c0 R14: 00007f65fa59bf60 R15: 0000000000000032
 </TASK>

Allocated by task 9919:
 kasan_save_stack+0x1e/0x40 mm/kasan/common.c:38
 kasan_set_track mm/kasan/common.c:45 [inline]
 set_alloc_info mm/kasan/common.c:436 [inline]
 __kasan_slab_alloc+0x90/0xc0 mm/kasan/common.c:469
 kasan_slab_alloc include/linux/kasan.h:224 [inline]
 slab_post_alloc_hook mm/slab.h:749 [inline]
 slab_alloc_node mm/slub.c:3217 [inline]
 slab_alloc mm/slub.c:3225 [inline]
 __kmem_cache_alloc_lru mm/slub.c:3232 [inline]
 kmem_cache_alloc+0x204/0x3b0 mm/slub.c:3242
 kmem_cache_zalloc include/linux/slab.h:704 [inline]
 __alloc_file+0x1e/0x230 fs/file_table.c:138
 alloc_empty_file+0x3c/0xf0 fs/file_table.c:187
 path_openat+0xdd/0x2360 fs/namei.c:3595
 do_filp_open+0x199/0x3d0 fs/namei.c:3636
 do_sys_openat2+0x11e/0x3f0 fs/open.c:1213
 do_sys_open fs/open.c:1229 [inline]
 __do_sys_openat fs/open.c:1245 [inline]
 __se_sys_openat fs/open.c:1240 [inline]
 __x64_sys_openat+0x11b/0x1d0 fs/open.c:1240
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x44/0xae

Freed by task 21:
 kasan_save_stack+0x1e/0x40 mm/kasan/common.c:38
 kasan_set_track+0x21/0x30 mm/kasan/common.c:45
 kasan_set_free_info+0x20/0x30 mm/kasan/generic.c:370
 ____kasan_slab_free mm/kasan/common.c:366 [inline]
 ____kasan_slab_free+0x166/0x1a0 mm/kasan/common.c:328
 kasan_slab_free include/linux/kasan.h:200 [inline]
 slab_free_hook mm/slub.c:1728 [inline]
 slab_free_freelist_hook+0x8b/0x1c0 mm/slub.c:1754
 slab_free mm/slub.c:3510 [inline]
 kmem_cache_free+0xdd/0x5a0 mm/slub.c:3527
 rcu_do_batch kernel/rcu/tree.c:2535 [inline]
 rcu_core+0x7b1/0x1880 kernel/rcu/tree.c:2786
 __do_softirq+0x29b/0x9c2 kernel/softirq.c:558

Last potentially related work creation:
 kasan_save_stack+0x1e/0x40 mm/kasan/common.c:38
 __kasan_record_aux_stack+0xbe/0xd0 mm/kasan/generic.c:348
 call_rcu+0x99/0x790 kernel/rcu/tree.c:3074
 task_work_run+0xc0/0x160 kernel/task_work.c:164
 get_signal+0x19b/0x1e50 kernel/signal.c:2641
 arch_do_signal_or_restart+0x82/0x20f0 arch/x86/kernel/signal.c:867
 exit_to_user_mode_loop kernel/entry/common.c:166 [inline]
 exit_to_user_mode_prepare+0x15f/0x250 kernel/entry/common.c:201
 __syscall_exit_to_user_mode_work kernel/entry/common.c:283 [inline]
 syscall_exit_to_user_mode+0x19/0x60 kernel/entry/common.c:294
 do_syscall_64+0x42/0xb0 arch/x86/entry/common.c:86
 entry_SYSCALL_64_after_hwframe+0x44/0xae

Second to last potentially related work creation:
 kasan_save_stack+0x1e/0x40 mm/kasan/common.c:38
 __kasan_record_aux_stack+0xbe/0xd0 mm/kasan/generic.c:348
 task_work_add+0x36/0x130 kernel/task_work.c:38
 fput fs/file_table.c:378 [inline]
 fput+0xa0/0x120 fs/file_table.c:371
 io_close fs/io_uring.c:5151 [inline]
 io_issue_sqe+0x33a4/0x7500 fs/io_uring.c:7303
 __io_queue_sqe fs/io_uring.c:7602 [inline]
 io_req_task_submit+0xaa/0x5e0 fs/io_uring.c:2622
 handle_tw_list fs/io_uring.c:2509 [inline]
 tctx_task_work+0x550/0xf50 fs/io_uring.c:2543
 task_work_run+0xc0/0x160 kernel/task_work.c:164
 get_signal+0x19b/0x1e50 kernel/signal.c:2641
 arch_do_signal_or_restart+0x82/0x20f0 arch/x86/kernel/signal.c:867
 exit_to_user_mode_loop kernel/entry/common.c:166 [inline]
 exit_to_user_mode_prepare+0x15f/0x250 kernel/entry/common.c:201
 __syscall_exit_to_user_mode_work kernel/entry/common.c:283 [inline]
 syscall_exit_to_user_mode+0x19/0x60 kernel/entry/common.c:294
 do_syscall_64+0x42/0xb0 arch/x86/entry/common.c:86
 entry_SYSCALL_64_after_hwframe+0x44/0xae

The buggy address belongs to the object at ffff88801dddd680
 which belongs to the cache filp of size 456
The buggy address is located 112 bytes inside of
 456-byte region [ffff88801dddd680, ffff88801dddd848)

The buggy address belongs to the physical page:
page:ffffea0000777700 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x1dddc
head:ffffea0000777700 order:1 compound_mapcount:0 compound_pincount:0
memcg:ffff88806b685581
flags: 0xfff00000010200(slab|head|node=0|zone=1|lastcpupid=0x7ff)
raw: 00fff00000010200 ffffea0001e33780 dead000000000005 ffff8880109cd8c0
raw: 0000000000000000 00000000000c000c 00000001ffffffff ffff88806b685581
page dumped because: kasan: bad access detected
page_owner tracks the page as allocated
page last allocated via order 1, migratetype Unmovable, gfp_mask 0xd20c0(__GFP_IO|__GFP_FS|__GFP_NOWARN|__GFP_NORETRY|__GFP_COMP|__GFP_NOMEMALLOC), pid 2976, tgid 2976 (udevd), ts 10642759466, free_ts 9507737273
 prep_new_page mm/page_alloc.c:2441 [inline]
 get_page_from_freelist+0x178d/0x3da0 mm/page_alloc.c:4182
 __alloc_pages+0x1b2/0x500 mm/page_alloc.c:5408
 alloc_slab_page mm/slub.c:1799 [inline]
 allocate_slab+0x26c/0x3c0 mm/slub.c:1944
 new_slab mm/slub.c:2004 [inline]
 ___slab_alloc+0x8e1/0xf20 mm/slub.c:3005
 __slab_alloc.constprop.0+0x4d/0xa0 mm/slub.c:3092
 slab_alloc_node mm/slub.c:3183 [inline]
 slab_alloc mm/slub.c:3225 [inline]
 __kmem_cache_alloc_lru mm/slub.c:3232 [inline]
 kmem_cache_alloc+0x360/0x3b0 mm/slub.c:3242
 kmem_cache_zalloc include/linux/slab.h:704 [inline]
 __alloc_file+0x1e/0x230 fs/file_table.c:138
 alloc_empty_file+0x3c/0xf0 fs/file_table.c:187
 alloc_file+0x54/0x500 fs/file_table.c:229
 alloc_file_clone+0xf/0x90 fs/file_table.c:281
 create_pipe_files+0x44b/0x860 fs/pipe.c:940
 __do_pipe_flags fs/pipe.c:962 [inline]
 do_pipe2+0x78/0x150 fs/pipe.c:1010
 __do_sys_pipe2 fs/pipe.c:1028 [inline]
 __se_sys_pipe2 fs/pipe.c:1026 [inline]
 __x64_sys_pipe2+0x4b/0x70 fs/pipe.c:1026
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x44/0xae
page last free stack trace:
 reset_page_owner include/linux/page_owner.h:24 [inline]
 free_pages_prepare mm/page_alloc.c:1356 [inline]
 free_pcp_prepare+0x549/0xd20 mm/page_alloc.c:1406
 free_unref_page_prepare mm/page_alloc.c:3328 [inline]
 free_unref_page+0x19/0x690 mm/page_alloc.c:3423
 qlink_free mm/kasan/quarantine.c:157 [inline]
 qlist_free_all+0x6a/0x170 mm/kasan/quarantine.c:176
 kasan_quarantine_reduce+0x180/0x200 mm/kasan/quarantine.c:283
 __kasan_slab_alloc+0xa2/0xc0 mm/kasan/common.c:446
 kasan_slab_alloc include/linux/kasan.h:224 [inline]
 slab_post_alloc_hook mm/slab.h:749 [inline]
 slab_alloc_node mm/slub.c:3217 [inline]
 slab_alloc mm/slub.c:3225 [inline]
 __kmem_cache_alloc_lru mm/slub.c:3232 [inline]
 kmem_cache_alloc+0x204/0x3b0 mm/slub.c:3242
 prepare_creds+0x39/0x610 kernel/cred.c:260
 access_override_creds fs/open.c:352 [inline]
 do_faccessat+0x273/0x660 fs/open.c:416
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x44/0xae

Memory state around the buggy address:
 ffff88801dddd580: fb fb fb fb fb fb fb fb fb fc fc fc fc fc fc fc
 ffff88801dddd600: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
>ffff88801dddd680: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                                                             ^
 ffff88801dddd700: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
 ffff88801dddd780: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
==================================================================

