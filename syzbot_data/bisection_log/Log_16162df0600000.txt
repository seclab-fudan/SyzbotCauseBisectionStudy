bisecting cause commit starting from 5ad18b2e60b75c7297a998dea702451d33a052ed
building syzkaller on f62e1e85cf54ccfa990868a402eca32bf4513b21
testing commit 5ad18b2e60b75c7297a998dea702451d33a052ed with gcc (GCC) 8.1.0
all runs: crashed: memory leak in copy_net_ns
testing release v5.2
testing commit 0ecfebd2b52404ae0c54a878c872bb93363ada36 with gcc (GCC) 8.1.0
all runs: crashed: memory leak in nf_hook_entries_grow
testing release v5.1
testing commit e93c9c99a629c61837d5a7fc2120cd2b6c70dbdd with gcc (GCC) 8.1.0
run #0: basic kernel testing failed: failed to copy test binary to VM: failed to run ["scp" "-P" "22" "-F" "/dev/null" "-o" "UserKnownHostsFile=/dev/null" "-o" "BatchMode=yes" "-o" "IdentitiesOnly=yes" "-o" "StrictHostKeyChecking=no" "-o" "ConnectTimeout=10" "-i" "/syzkaller/jobs/linux/workdir/image/key" "/tmp/syz-executor435775204" "root@10.128.1.24:./syz-executor435775204"]: exit status 1
ssh: connect to host 10.128.1.24 port 22: Connection timed out
lost connection

run #1: crashed: memory leak in batadv_tvlv_handler_register
run #2: crashed: memory leak in batadv_tvlv_handler_register
run #3: crashed: memory leak in batadv_tvlv_handler_register
run #4: crashed: memory leak in batadv_tvlv_handler_register
run #5: crashed: memory leak in batadv_tvlv_handler_register
run #6: crashed: memory leak in batadv_tvlv_handler_register
run #7: crashed: memory leak in batadv_tvlv_handler_register
run #8: crashed: memory leak in batadv_tvlv_handler_register
run #9: crashed: memory leak in batadv_tvlv_handler_register
testing release v5.0
testing commit 1c163f4c7b3f621efff9b28a47abb36f7378d783 with gcc (GCC) 8.1.0
all runs: crashed: memory leak in batadv_tvlv_handler_register
testing release v4.20
testing commit 8fe28cb58bcb235034b64cbbb7550a8a43fd88be with gcc (GCC) 8.1.0
run #0: crashed: memory leak in batadv_tvlv_handler_register
run #1: crashed: memory leak in batadv_tvlv_handler_register
run #2: crashed: memory leak in batadv_tvlv_handler_register
run #3: crashed: memory leak in hsr_create_self_node
run #4: crashed: memory leak in batadv_tvlv_handler_register
run #5: crashed: memory leak in batadv_tvlv_handler_register
run #6: crashed: memory leak in batadv_tvlv_handler_register
run #7: crashed: memory leak in batadv_tvlv_handler_register
run #8: crashed: memory leak in batadv_tvlv_handler_register
run #9: crashed: memory leak in batadv_tvlv_handler_register
testing release v4.19
testing commit 84df9525b0c27f3ebc2ebb1864fa62a97fdedb7d with gcc (GCC) 8.1.0
all runs: crashed: memory leak in __neigh_create
testing release v4.18
testing commit 94710cac0ef4ee177a63b5227664b38c95bbf703 with gcc (GCC) 8.1.0
all runs: crashed: memory leak in corrupted
testing release v4.17
testing commit 29dcea88779c856c7dc92040a0c01233263101d4 with gcc (GCC) 8.1.0
all runs: crashed: memory leak in corrupted
testing release v4.16
testing commit 0adb32858b0bddf4ada5f364a84ed60b196dbcda with gcc (GCC) 8.1.0
all runs: crashed: memory leak in __neigh_create
testing release v4.15
testing commit d8a5b80568a9cb66810e75b182018e9edb68e8ff with gcc (GCC) 8.1.0
run #0: crashed: memory leak in __neigh_create
run #1: crashed: memory leak in __neigh_create
run #2: crashed: memory leak in __neigh_create
run #3: crashed: memory leak in __neigh_create
run #4: crashed: memory leak in __neigh_create
run #5: crashed: memory leak in __neigh_create
run #6: crashed: memory leak in __neigh_create
run #7: crashed: memory leak in __neigh_create
run #8: crashed: memory leak in __neigh_create
run #9: crashed: memory leak in batadv_tvlv_handler_register
testing release v4.14
testing commit bebc6082da0a9f5d47a1ea2edc099bf671058bd4 with gcc (GCC) 8.1.0
all runs: crashed: memory leak in __neigh_create
testing release v4.13
testing commit 569dbb88e80deb68974ef6fdd6a13edb9d686261 with gcc (GCC) 8.1.0
run #0: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #1: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #2: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #3: crashed: memory leak in __neigh_create
run #4: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #5: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #6: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #7: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #8: crashed: WARNING: kernel stack regs has bad 'bp' value
run #9: crashed: memory leak in __neigh_create
testing release v4.12
testing commit 6f7da290413ba713f0cdd9ff1a2a9bb129ef4f6c with gcc (GCC) 8.1.0
run #0: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #1: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #2: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #3: crashed: WARNING: kernel stack regs has bad 'bp' value
run #4: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #5: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #6: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #7: crashed: memory leak in copy_process
run #8: crashed: WARNING: kernel stack regs has bad 'bp' value
run #9: crashed: memory leak in copy_process
testing release v4.11
testing commit a351e9b9fc24e982ec2f0e76379a49826036da12 with gcc (GCC) 7.3.0
run #0: crashed: memory leak in copy_process
run #1: crashed: memory leak in copy_process
run #2: crashed: memory leak in copy_process
run #3: crashed: memory leak in copy_process
run #4: crashed: memory leak in __neigh_create
run #5: crashed: memory leak in copy_process
run #6: crashed: memory leak in __neigh_create
run #7: crashed: memory leak in copy_process
run #8: crashed: memory leak in copy_process
run #9: crashed: memory leak in copy_process
testing release v4.10
testing commit c470abd4fde40ea6a0846a2beab642a578c0b8cd with gcc (GCC) 5.5.0
run #0: crashed: memory leak in copy_process
run #1: crashed: memory leak in copy_process
run #2: crashed: memory leak in __neigh_create
run #3: crashed: memory leak in copy_process
run #4: crashed: memory leak in __neigh_create
run #5: crashed: memory leak in copy_process
run #6: crashed: memory leak in copy_process
run #7: crashed: memory leak in copy_process
run #8: crashed: memory leak in copy_process
run #9: crashed: memory leak in copy_process
testing release v4.9
testing commit 69973b830859bc6529a7a0468ba0d80ee5117826 with gcc (GCC) 5.5.0
run #0: crashed: memory leak in copy_process
run #1: crashed: memory leak in copy_process
run #2: crashed: memory leak in copy_process
run #3: crashed: memory leak in __neigh_create
run #4: crashed: memory leak in copy_process
run #5: crashed: memory leak in copy_process
run #6: crashed: memory leak in copy_process
run #7: crashed: memory leak in copy_process
run #8: crashed: memory leak in copy_process
run #9: crashed: memory leak in copy_process
testing release v4.8
testing commit c8d2bc9bc39ebea8437fd974fdbc21847bb897a3 with gcc (GCC) 5.5.0
all runs: OK
# git bisect start v4.9 v4.8
Bisecting: 8695 revisions left to test after this (roughly 13 steps)
[a5af7e1fc69a46f29b977fd4b570e0ac414c2338] rxrpc: Fix loss of PING RESPONSE ACK production due to PING ACKs
testing commit a5af7e1fc69a46f29b977fd4b570e0ac414c2338 with gcc (GCC) 5.5.0
all runs: crashed: memory leak in copy_process
# git bisect bad a5af7e1fc69a46f29b977fd4b570e0ac414c2338
Bisecting: 4346 revisions left to test after this (roughly 12 steps)
[d268dbe76a53d72cc41316eb59e7968db60e77ad] Merge tag 'pinctrl-v4.9-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl
testing commit d268dbe76a53d72cc41316eb59e7968db60e77ad with gcc (GCC) 5.5.0
all runs: crashed: memory leak in copy_process
# git bisect bad d268dbe76a53d72cc41316eb59e7968db60e77ad
Bisecting: 2170 revisions left to test after this (roughly 11 steps)
[02bafd96f3a5d8e610b19033ffec55b92459aaae] Merge tag 'docs-4.9' of git://git.lwn.net/linux
testing commit 02bafd96f3a5d8e610b19033ffec55b92459aaae with gcc (GCC) 5.5.0
all runs: crashed: memory leak in copy_process
# git bisect bad 02bafd96f3a5d8e610b19033ffec55b92459aaae
Bisecting: 1088 revisions left to test after this (roughly 10 steps)
[9929780e86854833e649b39b290b5fe921eb1701] Merge tag 'driver-core-4.9-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core
testing commit 9929780e86854833e649b39b290b5fe921eb1701 with gcc (GCC) 5.5.0
run #0: crashed: memory leak in copy_process
run #1: crashed: memory leak in copy_process
run #2: crashed: memory leak in copy_process
run #3: crashed: memory leak in copy_process
run #4: crashed: memory leak in copy_process
run #5: crashed: memory leak in copy_process
run #6: crashed: memory leak in copy_process
run #7: crashed: memory leak in copy_process
run #8: crashed: memory leak in copy_process
run #9: boot failed: BUG: unable to handle kernel paging request in KSTK_ESP
# git bisect bad 9929780e86854833e649b39b290b5fe921eb1701
Bisecting: 553 revisions left to test after this (roughly 9 steps)
[12b7bcb43e6ea834ab2f5dc52d971e379a0ca109] Merge branch 'perf-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
testing commit 12b7bcb43e6ea834ab2f5dc52d971e379a0ca109 with gcc (GCC) 5.5.0
run #0: OK
run #1: OK
run #2: OK
run #3: crashed: memory leak in batadv_tvlv_handler_register
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 12b7bcb43e6ea834ab2f5dc52d971e379a0ca109
Bisecting: 257 revisions left to test after this (roughly 8 steps)
[72d39926f098b0c4ad95e1461595a8d6d403c14d] Merge tag 'acpi-4.9-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm
testing commit 72d39926f098b0c4ad95e1461595a8d6d403c14d with gcc (GCC) 5.5.0
all runs: OK
# git bisect good 72d39926f098b0c4ad95e1461595a8d6d403c14d
Bisecting: 128 revisions left to test after this (roughly 7 steps)
[98ba1609298ccc849ddfe727c675c3a7b48b8dbc] perf tools: Make several display functions global
testing commit 98ba1609298ccc849ddfe727c675c3a7b48b8dbc with gcc (GCC) 5.5.0
run #0: OK
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: crashed: unregister_netdevice: waiting for DEV to become free
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 98ba1609298ccc849ddfe727c675c3a7b48b8dbc
Bisecting: 64 revisions left to test after this (roughly 6 steps)
[e267769ed4d22144d317d934cbce382cc7a8cca0] perf test vmlinux: Clarify which -v lines are errors or warning
testing commit e267769ed4d22144d317d934cbce382cc7a8cca0 with gcc (GCC) 5.5.0
all runs: OK
# git bisect good e267769ed4d22144d317d934cbce382cc7a8cca0
Bisecting: 32 revisions left to test after this (roughly 5 steps)
[277cf08f3febd9d0921f4ff1b46fd5d294fe3942] perf trace beauty mmap: Fix defines for non !x86_64
testing commit 277cf08f3febd9d0921f4ff1b46fd5d294fe3942 with gcc (GCC) 5.5.0
all runs: OK
# git bisect good 277cf08f3febd9d0921f4ff1b46fd5d294fe3942
Bisecting: 16 revisions left to test after this (roughly 4 steps)
[5ff3e7a224d40f9dd73625b91377787034a8b35e] perf ui/tui: Reset output width for hierarchy
testing commit 5ff3e7a224d40f9dd73625b91377787034a8b35e with gcc (GCC) 5.5.0
run #0: OK
run #1: crashed: unregister_netdevice: waiting for DEV to become free
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 5ff3e7a224d40f9dd73625b91377787034a8b35e
Bisecting: 7 revisions left to test after this (roughly 3 steps)
[30d476ae738d1ce33f170dd79398ecd211274df6] perf report: Enable group view with hierarchy
testing commit 30d476ae738d1ce33f170dd79398ecd211274df6 with gcc (GCC) 5.5.0
run #0: OK
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: crashed: memory leak in batadv_tvlv_handler_register
run #8: OK
run #9: crashed: unregister_netdevice: waiting for DEV to become free
# git bisect bad 30d476ae738d1ce33f170dd79398ecd211274df6
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[9d97b8f512a0dd41819b8e3d9cdc7a59199e1b0c] perf hists: Introduce hists__link_hierarchy()
testing commit 9d97b8f512a0dd41819b8e3d9cdc7a59199e1b0c with gcc (GCC) 5.5.0
all runs: OK
# git bisect good 9d97b8f512a0dd41819b8e3d9cdc7a59199e1b0c
Bisecting: 1 revision left to test after this (roughly 1 step)
[9a6ad25b5a2026ba1399abc879ec623957867e79] perf ui/stdio: Always reset output width for hierarchy
testing commit 9a6ad25b5a2026ba1399abc879ec623957867e79 with gcc (GCC) 5.5.0
all runs: OK
# git bisect good 9a6ad25b5a2026ba1399abc879ec623957867e79
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[195bc0f8443d8d564ae95d2e9c19ac0edfd647c3] perf ui/stdio: Rename print_hierarchy_header()
testing commit 195bc0f8443d8d564ae95d2e9c19ac0edfd647c3 with gcc (GCC) 5.5.0
run #0: OK
run #1: crashed: unregister_netdevice: waiting for DEV to become free
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 195bc0f8443d8d564ae95d2e9c19ac0edfd647c3
195bc0f8443d8d564ae95d2e9c19ac0edfd647c3 is the first bad commit
commit 195bc0f8443d8d564ae95d2e9c19ac0edfd647c3
Author: Namhyung Kim <namhyung@kernel.org>
Date:   Tue Sep 13 16:45:50 2016 +0900

    perf ui/stdio: Rename print_hierarchy_header()
    
    Now the hists__fprintf_hierarchy_headers() is a simple wrapper passing
    field separator.  Let's do it directly.
    
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Cc: Andi Kleen <andi@firstfloor.org>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Link: http://lkml.kernel.org/r/20160913074552.13284-6-namhyung@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

:040000 040000 2d38106c097d1c39f82fb74d8847a1acefb6c5e6 95e399a4e76159f03ba301891c12d6b4f596c937 M	tools
revisions tested: 31, total time: 6h35m47.009119945s (build: 1h49m4.086411158s, test: 4h38m26.081762428s)
first bad commit: 195bc0f8443d8d564ae95d2e9c19ac0edfd647c3 perf ui/stdio: Rename print_hierarchy_header()
cc: ["a.p.zijlstra@chello.nl" "acme@redhat.com" "andi@firstfloor.org" "jolsa@kernel.org" "namhyung@kernel.org"]
crash: unregister_netdevice: waiting for DEV to become free
IPVS: ftp: loaded support on port[0] = 21
IPVS: Creating netns size=2104 id=362
IPVS: ftp: loaded support on port[0] = 21
IPVS: Creating netns size=2104 id=363
IPVS: ftp: loaded support on port[0] = 21
unregister_netdevice: waiting for ip6gretap0 to become free. Usage count = 1
device bridge_slave_1 left promiscuous mode
bridge0: port 2(bridge_slave_1) entered disabled state
device bridge_slave_0 left promiscuous mode
bridge0: port 1(bridge_slave_0) entered disabled state
device bridge_slave_1 left promiscuous mode
bridge0: port 2(bridge_slave_1) entered disabled state
device bridge_slave_0 left promiscuous mode
bridge0: port 1(bridge_slave_0) entered disabled state
device bridge_slave_1 left promiscuous mode
bridge0: port 2(bridge_slave_1) entered disabled state
device bridge_slave_0 left promiscuous mode
bridge0: port 1(bridge_slave_0) entered disabled state
device bridge_slave_1 left promiscuous mode
bridge0: port 2(bridge_slave_1) entered disabled state
device bridge_slave_0 left promiscuous mode
bridge0: port 1(bridge_slave_0) entered disabled state
device bridge_slave_1 left promiscuous mode
bridge0: port 2(bridge_slave_1) entered disabled state
device bridge_slave_0 left promiscuous mode
bridge0: port 1(bridge_slave_0) entered disabled state

