bisecting cause commit starting from 3a27203102ebfa67bd0bced05b1def499bb59db2
building syzkaller on caf12900683e434dcd16bdac59b909f13fb09099
testing commit 3a27203102ebfa67bd0bced05b1def499bb59db2 with gcc (GCC) 8.1.0
all runs: crashed: WARNING in cgroup_apply_control_enable
testing release v4.18
testing commit 94710cac0ef4ee177a63b5227664b38c95bbf703 with gcc (GCC) 8.1.0
all runs: crashed: WARNING in cgroup_apply_control_enable
testing release v4.17
testing commit 29dcea88779c856c7dc92040a0c01233263101d4 with gcc (GCC) 8.1.0
all runs: crashed: WARNING in cgroup_apply_control_enable
testing release v4.16
testing commit 0adb32858b0bddf4ada5f364a84ed60b196dbcda with gcc (GCC) 8.1.0
all runs: crashed: WARNING in cgroup_apply_control_enable
testing release v4.15
testing commit d8a5b80568a9cb66810e75b182018e9edb68e8ff with gcc (GCC) 8.1.0
all runs: crashed: WARNING in cgroup_apply_control_enable
testing release v4.14
testing commit bebc6082da0a9f5d47a1ea2edc099bf671058bd4 with gcc (GCC) 8.1.0
all runs: OK
# git bisect start d8a5b80568a9cb66810e75b182018e9edb68e8ff bebc6082da0a9f5d47a1ea2edc099bf671058bd4
Bisecting: 8497 revisions left to test after this (roughly 13 steps)
[5d352e69c60e54b5f04d6e337a1d2bf0dbf3d94a] Merge tag 'media/v4.15-1' of ssh://gitolite.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media
testing commit 5d352e69c60e54b5f04d6e337a1d2bf0dbf3d94a with gcc (GCC) 8.1.0
all runs: crashed: WARNING in cgroup_apply_control_enable
# git bisect bad 5d352e69c60e54b5f04d6e337a1d2bf0dbf3d94a
Bisecting: 3798 revisions left to test after this (roughly 12 steps)
[4e4510fec4af08ead21f6934c1410af1f19a8cad] Merge tag 'sound-4.15-rc1' of ssh://gitolite.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
testing commit 4e4510fec4af08ead21f6934c1410af1f19a8cad with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 4e4510fec4af08ead21f6934c1410af1f19a8cad
Bisecting: 1899 revisions left to test after this (roughly 11 steps)
[9fb7bd77d11ab03b4a969279de9f54d8fd6fe988] mlxsw: spectrum_ipip: Split accessor functions
testing commit 9fb7bd77d11ab03b4a969279de9f54d8fd6fe988 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 9fb7bd77d11ab03b4a969279de9f54d8fd6fe988
Bisecting: 947 revisions left to test after this (roughly 10 steps)
[22714a2ba4b55737cd7d5299db7aaf1fa8287354] Merge branch 'for-4.15' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup
testing commit 22714a2ba4b55737cd7d5299db7aaf1fa8287354 with gcc (GCC) 8.1.0
all runs: crashed: WARNING in cgroup_apply_control_enable
# git bisect bad 22714a2ba4b55737cd7d5299db7aaf1fa8287354
Bisecting: 475 revisions left to test after this (roughly 9 steps)
[f6b3716dcdcd1a4c3fa05ecb6ab0a1e52b6785d0] Merge branch 'net-devname_alloc_cleanups'
testing commit f6b3716dcdcd1a4c3fa05ecb6ab0a1e52b6785d0 with gcc (GCC) 8.1.0
run #0: OK
run #1: OK
run #2: basic kernel testing failed: failed to copy test binary to VM: timedout ["scp" "-P" "22" "-F" "/dev/null" "-o" "UserKnownHostsFile=/dev/null" "-o" "BatchMode=yes" "-o" "IdentitiesOnly=yes" "-o" "StrictHostKeyChecking=no" "-o" "ConnectTimeout=10" "-i" "/syzkaller/jobs/linux/workdir/image/key" "/tmp/syz-executor888922804" "root@10.128.10.47:./syz-executor888922804"]
Warning: Permanently added '10.128.10.47' (ECDSA) to the list of known hosts.

run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect good f6b3716dcdcd1a4c3fa05ecb6ab0a1e52b6785d0
Bisecting: 269 revisions left to test after this (roughly 8 steps)
[b293fca43be544483b6488d33ad4b3ed55881064] Merge tag 'riscv-for-linus-4.15-arch-v9-premerge' of git://git.kernel.org/pub/scm/linux/kernel/git/palmer/linux
testing commit b293fca43be544483b6488d33ad4b3ed55881064 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good b293fca43be544483b6488d33ad4b3ed55881064
Bisecting: 122 revisions left to test after this (roughly 7 steps)
[892204e06cb9e89fbc4b299a678f9ca358e97cac] Merge tag 'mips_4.15' of git://git.kernel.org/pub/scm/linux/kernel/git/jhogan/mips
testing commit 892204e06cb9e89fbc4b299a678f9ca358e97cac with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 892204e06cb9e89fbc4b299a678f9ca358e97cac
Bisecting: 61 revisions left to test after this (roughly 6 steps)
[6c4ba00c40d5acb17f32d4b7e02dbcd21f336d9f] Merge tag 'hsi-for-4.15' of git://git.kernel.org/pub/scm/linux/kernel/git/sre/linux-hsi
testing commit 6c4ba00c40d5acb17f32d4b7e02dbcd21f336d9f with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 6c4ba00c40d5acb17f32d4b7e02dbcd21f336d9f
Bisecting: 39 revisions left to test after this (roughly 5 steps)
[5bca462d2d18b1c9ec86c7985753134f06fa5cd2] ahci: imx: Handle increased read failures for IMX53 temperature sensor in low frequency mode.
testing commit 5bca462d2d18b1c9ec86c7985753134f06fa5cd2 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 5bca462d2d18b1c9ec86c7985753134f06fa5cd2
Bisecting: 19 revisions left to test after this (roughly 4 steps)
[1be2172e96e33bfa22a5c7a651f768ef30ce3984] Merge tag 'modules-for-v4.15' of git://git.kernel.org/pub/scm/linux/kernel/git/jeyu/linux
testing commit 1be2172e96e33bfa22a5c7a651f768ef30ce3984 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 1be2172e96e33bfa22a5c7a651f768ef30ce3984
Bisecting: 9 revisions left to test after this (roughly 3 steps)
[c3ba13298709f46e72b22d087d0aa02bd012e4b0] cgroup: mark @cgrp __maybe_unused in cpu_stat_show()
testing commit c3ba13298709f46e72b22d087d0aa02bd012e4b0 with gcc (GCC) 8.1.0
all runs: crashed: WARNING in cgroup_apply_control_enable
# git bisect bad c3ba13298709f46e72b22d087d0aa02bd012e4b0
Bisecting: 4 revisions left to test after this (roughly 2 steps)
[8157a7faf94135386bf04b1cf94e6efd3fb94702] sched/cputime: Add dummy cputime_adjust() implementation for CONFIG_VIRT_CPU_ACCOUNTING_NATIVE
testing commit 8157a7faf94135386bf04b1cf94e6efd3fb94702 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 8157a7faf94135386bf04b1cf94e6efd3fb94702
Bisecting: 2 revisions left to test after this (roughly 1 step)
[0d5936344f30aba0f6ddb92b030cb6a05168efe6] sched: Implement interface for cgroup unified hierarchy
testing commit 0d5936344f30aba0f6ddb92b030cb6a05168efe6 with gcc (GCC) 8.1.0
all runs: crashed: WARNING in cgroup_apply_control_enable
# git bisect bad 0d5936344f30aba0f6ddb92b030cb6a05168efe6
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[a1f7164c7b8b0d46f63bfb4ca0bb5971c760b921] sched: Misc preps for cgroup unified hierarchy interface
testing commit a1f7164c7b8b0d46f63bfb4ca0bb5971c760b921 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good a1f7164c7b8b0d46f63bfb4ca0bb5971c760b921
0d5936344f30aba0f6ddb92b030cb6a05168efe6 is the first bad commit
commit 0d5936344f30aba0f6ddb92b030cb6a05168efe6
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Sep 25 09:00:19 2017 -0700

    sched: Implement interface for cgroup unified hierarchy
    
    There are a couple interface issues which can be addressed in cgroup2
    interface.
    
    * Stats from cpuacct being reported separately from the cpu stats.
    
    * Use of different time units.  Writable control knobs use
      microseconds, some stat fields use nanoseconds while other cpuacct
      stat fields use centiseconds.
    
    * Control knobs which can't be used in the root cgroup still show up
      in the root.
    
    * Control knob names and semantics aren't consistent with other
      controllers.
    
    This patchset implements cpu controller's interface on cgroup2 which
    adheres to the controller file conventions described in
    Documentation/cgroups/cgroup-v2.txt.  Overall, the following changes
    are made.
    
    * cpuacct is implictly enabled and disabled by cpu and its information
      is reported through "cpu.stat" which now uses microseconds for all
      time durations.  All time duration fields now have "_usec" appended
      to them for clarity.
    
      Note that cpuacct.usage_percpu is currently not included in
      "cpu.stat".  If this information is actually called for, it will be
      added later.
    
    * "cpu.shares" is replaced with "cpu.weight" and operates on the
      standard scale defined by CGROUP_WEIGHT_MIN/DFL/MAX (1, 100, 10000).
      The weight is scaled to scheduler weight so that 100 maps to 1024
      and the ratio relationship is preserved - if weight is W and its
      scaled value is S, W / 100 == S / 1024.  While the mapped range is a
      bit smaller than the orignal scheduler weight range, the dead zones
      on both sides are relatively small and covers wider range than the
      nice value mappings.  This file doesn't make sense in the root
      cgroup and isn't created on root.
    
    * "cpu.weight.nice" is added. When read, it reads back the nice value
      which is closest to the current "cpu.weight".  When written, it sets
      "cpu.weight" to the weight value which matches the nice value.  This
      makes it easy to configure cgroups when they're competing against
      threads in threaded subtrees.
    
    * "cpu.cfs_quota_us" and "cpu.cfs_period_us" are replaced by "cpu.max"
      which contains both quota and period.
    
    v4: - Use cgroup2 basic usage stat as the information source instead
          of cpuacct.
    
    v3: - Added "cpu.weight.nice" to allow using nice values when
          configuring the weight.  The feature is requested by PeterZ.
        - Merge the patch to enable threaded support on cpu and cpuacct.
        - Dropped the bits about getting rid of cpuacct from patch
          description as there is a pretty strong case for making cpuacct
          an implicit controller so that basic cpu usage stats are always
          available.
        - Documentation updated accordingly.  "cpu.rt.max" section is
          dropped for now.
    
    v2: - cpu_stats_show() was incorrectly using CONFIG_FAIR_GROUP_SCHED
          for CFS bandwidth stats and also using raw division for u64.
          Use CONFIG_CFS_BANDWITH and do_div() instead.  "cpu.rt.max" is
          not included yet.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Li Zefan <lizefan@huawei.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>

:040000 040000 70753b339ec3109bcb1293d6b7737dd3c6f51425 82522e4d46ae29625deecc0134d192fecddb537b M	Documentation
:040000 040000 6fe8e2192627c03192c355561850eb280c62fd3e b13b06fef9b38dccc8e2bc10f8667d6cf2614b2d M	kernel
revisions tested: 20, total time: 4h23m20.231215887s (build: 1h47m1.7327601s, test: 2h30m34.579158177s)
first bad commit: 0d5936344f30aba0f6ddb92b030cb6a05168efe6 sched: Implement interface for cgroup unified hierarchy
cc: ["hannes@cmpxchg.org" "lizefan@huawei.com" "mingo@redhat.com" "tj@kernel.org"]
crash: WARNING in cgroup_apply_control_enable
8021q: adding VLAN 0 to HW filter on device team0
8021q: adding VLAN 0 to HW filter on device team0
IPv6: ADDRCONF(NETDEV_CHANGE): veth0: link becomes ready
IPv6: ADDRCONF(NETDEV_UP): veth0: link is not ready
------------[ cut here ]------------
WARNING: CPU: 0 PID: 6648 at kernel/cgroup/cgroup.c:2877 cgroup_apply_control_enable+0x2b8/0xc00 kernel/cgroup/cgroup.c:2877
8021q: adding VLAN 0 to HW filter on device team0
Kernel panic - not syncing: panic_on_warn set ...

CPU: 0 PID: 6648 Comm: syz-executor2 Not tainted 4.14.0-rc2-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Call Trace:
 __dump_stack lib/dump_stack.c:16 [inline]
 dump_stack+0x145/0x1e1 lib/dump_stack.c:52
 panic+0x1a9/0x34e kernel/panic.c:181
 __warn.cold.8+0x11a/0x156 kernel/panic.c:542
 report_bug+0x1a3/0x227 lib/bug.c:183
 fixup_bug arch/x86/kernel/traps.c:178 [inline]
 do_trap_no_signal arch/x86/kernel/traps.c:212 [inline]
 do_trap+0x1ef/0x2d0 arch/x86/kernel/traps.c:261
 do_error_trap+0x11f/0x390 arch/x86/kernel/traps.c:298
 do_invalid_op+0x1b/0x20 arch/x86/kernel/traps.c:311
 invalid_op+0x18/0x20 arch/x86/entry/entry_64.S:905
RIP: 0010:cgroup_apply_control_enable+0x2b8/0xc00 kernel/cgroup/cgroup.c:2877
RSP: 0018:ffff8801d74a79f0 EFLAGS: 00010202
RAX: 1ffff10037740b1b RBX: ffff8801bba058c0 RCX: 0000000000000000
RDX: 1ffffffff10238c5 RSI: ffffffff881b96a8 RDI: ffff8801bba058d8
RBP: ffff8801d74a7b18 R08: ffff8801d09916c0 R09: ffff8801d74a7140
R10: ffff8801d74a7a40 R11: ffffffff881bf4a0 R12: dffffc0000000000
R13: 0000000000000000 R14: ffff8801bb084140 R15: ffffffff881b94d8
 cgroup_apply_control+0x15/0x30 kernel/cgroup/cgroup.c:2963
 cgroup_enable_threaded kernel/cgroup/cgroup.c:3165 [inline]
 cgroup_type_write+0x22b/0x3a0 kernel/cgroup/cgroup.c:3206
 cgroup_file_write+0x277/0x850 kernel/cgroup/cgroup.c:3357
 kernfs_fop_write+0x254/0x400 fs/kernfs/file.c:316
 __vfs_write+0xdc/0xd10 fs/read_write.c:479
 vfs_write+0x156/0x4f0 fs/read_write.c:543
 SYSC_write fs/read_write.c:588 [inline]
 SyS_write+0xef/0x240 fs/read_write.c:580
 entry_SYSCALL_64_fastpath+0x23/0xc2
RIP: 0033:0x4576b9
RSP: 002b:00007f0acc1e4c78 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00000000004576b9
RDX: 0000000000000009 RSI: 0000000020000140 RDI: 0000000000000006
RBP: 0000000000000086 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 000000000072bf0c
R13: 00007ffe68872baf R14: 00007f0acc1e59c0 R15: 0000000000000000
Kernel Offset: disabled
Rebooting in 86400 seconds..

