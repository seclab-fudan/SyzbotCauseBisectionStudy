bisecting cause commit starting from 131701c697e85d5d0726e6152219359639fae98f
building syzkaller on 3334d684ce742ce58ad66b7dcb7a6d4da5185796
testing commit 131701c697e85d5d0726e6152219359639fae98f with gcc (GCC) 8.1.0
kernel signature: 54b08c082e046b9e3ce6da25f787f5a2a15e462f9fc0bae6016e5ce546c91f2e
all runs: crashed: KASAN: slab-out-of-bounds Read in bitmap_port_ext_cleanup
testing release v5.4
testing commit 219d54332a09e8d8741c1e1982f5eae56099de85 with gcc (GCC) 8.1.0
kernel signature: 41120e84821e9e99bec94832206b1206c6743f31252f735c6a5eb7e62b8f0a5e
all runs: crashed: KASAN: use-after-free Read in bitmap_port_ext_cleanup
testing release v5.3
testing commit 4d856f72c10ecb060868ed10ff1b1453943fc6c8 with gcc (GCC) 8.1.0
kernel signature: 2ca0344c7788c3fcb92135f7e8db3fa3baf8db358d612db189ec8b8c3157c4ea
all runs: crashed: KASAN: use-after-free Read in bitmap_port_ext_cleanup
testing release v5.2
testing commit 0ecfebd2b52404ae0c54a878c872bb93363ada36 with gcc (GCC) 8.1.0
kernel signature: c3ca13ff632aa3f24e7f91dcd260f19538bbb050406e4d74afd188f7900d6aa8
all runs: OK
# git bisect start 4d856f72c10ecb060868ed10ff1b1453943fc6c8 0ecfebd2b52404ae0c54a878c872bb93363ada36
Bisecting: 7848 revisions left to test after this (roughly 13 steps)
[43c95d3694cc448fdf50bd53b7ff3a5bb4655883] Merge tag 'pinctrl-v5.3-1' of git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl
testing commit 43c95d3694cc448fdf50bd53b7ff3a5bb4655883 with gcc (GCC) 8.1.0
kernel signature: 852b513a70f12a96401b122778968cbe01668d168005898ec354b0fb90836876
all runs: crashed: KASAN: use-after-free Read in bitmap_port_ext_cleanup
# git bisect bad 43c95d3694cc448fdf50bd53b7ff3a5bb4655883
Bisecting: 4619 revisions left to test after this (roughly 12 steps)
[8f6ccf6159aed1f04c6d179f61f6fb2691261e84] Merge tag 'clone3-v5.3' of git://git.kernel.org/pub/scm/linux/kernel/git/brauner/linux
testing commit 8f6ccf6159aed1f04c6d179f61f6fb2691261e84 with gcc (GCC) 8.1.0
kernel signature: 7bdbc00dd82d6c30a480e142f1ff69013082f68fa02623e6bc1239bc3c5b24f6
all runs: OK
# git bisect good 8f6ccf6159aed1f04c6d179f61f6fb2691261e84
Bisecting: 2306 revisions left to test after this (roughly 11 steps)
[753c8d9b7d81206bb5d011b28abe829d364b028e] Merge branch 'x86-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
testing commit 753c8d9b7d81206bb5d011b28abe829d364b028e with gcc (GCC) 8.1.0
kernel signature: d53910b23f214960034e268ea87996093a84825abc21f737bf5e7e62de735d76
run #0: crashed: general protection fault in send_hsr_supervision_frame
run #1: crashed: general protection fault in send_hsr_supervision_frame
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 753c8d9b7d81206bb5d011b28abe829d364b028e
Bisecting: 1156 revisions left to test after this (roughly 10 steps)
[2f9b0d93a9d3ec64558537ab5d7cff820886afa4] net: ethernet: ti: cpsw: Fix suspend/resume break
testing commit 2f9b0d93a9d3ec64558537ab5d7cff820886afa4 with gcc (GCC) 8.1.0
kernel signature: 57e0d942aa24700dcb89d6984c11478313e79cf55188b705708bdfbbba56f49c
all runs: OK
# git bisect good 2f9b0d93a9d3ec64558537ab5d7cff820886afa4
Bisecting: 578 revisions left to test after this (roughly 9 steps)
[354d0fab649d47045517cf7cae03d653a4dcb3b8] net: hns3: add default value for tc_size and tc_offset
testing commit 354d0fab649d47045517cf7cae03d653a4dcb3b8 with gcc (GCC) 8.1.0
kernel signature: 7be70aad463698cac32d353924701f7f6149e6c5b7164bbcc61344c22d585cbd
all runs: OK
# git bisect good 354d0fab649d47045517cf7cae03d653a4dcb3b8
Bisecting: 289 revisions left to test after this (roughly 8 steps)
[52c0609258658ff35b85c654c568a50abd602ac6] bnxt_en: rename some xdp functions
testing commit 52c0609258658ff35b85c654c568a50abd602ac6 with gcc (GCC) 8.1.0
kernel signature: 9b57930cdb0ed768950b5f54effeedd9d8ed9aff2721d5df659e55c3eec4339c
all runs: OK
# git bisect good 52c0609258658ff35b85c654c568a50abd602ac6
Bisecting: 169 revisions left to test after this (roughly 7 steps)
[e858faf556d4e14c750ba1e8852783c6f9520a0e] tcp: Reset bytes_acked and bytes_received when disconnecting
testing commit e858faf556d4e14c750ba1e8852783c6f9520a0e with gcc (GCC) 8.1.0
kernel signature: d2a1a5caaacb51a31b0444a9606c30c40b11f81c22e7120345b8471f93c2a2c0
run #0: crashed: general protection fault in send_hsr_supervision_frame
run #1: crashed: general protection fault in send_hsr_supervision_frame
run #2: crashed: general protection fault in send_hsr_supervision_frame
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad e858faf556d4e14c750ba1e8852783c6f9520a0e
Bisecting: 59 revisions left to test after this (roughly 6 steps)
[3d26eb8ad1e9b906433903ce05f775cf038e747f] net: bridge: don't cache ether dest pointer on input
testing commit 3d26eb8ad1e9b906433903ce05f775cf038e747f with gcc (GCC) 8.1.0
kernel signature: 065d98a655638047a1a651b26349b8954a2d337baa12820939259b836f956bb1
all runs: OK
# git bisect good 3d26eb8ad1e9b906433903ce05f775cf038e747f
Bisecting: 30 revisions left to test after this (roughly 5 steps)
[9d1bc24b52fb8c5d859f9a47084bf1179470e04c] bonding: validate ip header before check IPPROTO_IGMP
testing commit 9d1bc24b52fb8c5d859f9a47084bf1179470e04c with gcc (GCC) 8.1.0
kernel signature: 5b8b2eb470068546ed92a90122c11aa9088a3a4d373d41512e754bb979d7adf3
all runs: OK
# git bisect good 9d1bc24b52fb8c5d859f9a47084bf1179470e04c
Bisecting: 15 revisions left to test after this (roughly 4 steps)
[13aecb17acabc2a92187d08f7ca93bb8aad62c6f] net/tls: fix poll ignoring partially copied records
testing commit 13aecb17acabc2a92187d08f7ca93bb8aad62c6f with gcc (GCC) 8.1.0
kernel signature: 1a50eb8bbe7bb4486215bd6903a25d329c34d37326ed5a2ccbcccd4357151eb2
run #0: crashed: general protection fault in send_hsr_supervision_frame
run #1: crashed: general protection fault in send_hsr_supervision_frame
run #2: crashed: general protection fault in send_hsr_supervision_frame
run #3: crashed: general protection fault in send_hsr_supervision_frame
run #4: crashed: general protection fault in send_hsr_supervision_frame
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 13aecb17acabc2a92187d08f7ca93bb8aad62c6f
Bisecting: 7 revisions left to test after this (roughly 3 steps)
[56c5ee1a5823e9cf5288b84ae6364cb4112f8225] xfrm interface: fix memory leak on creation
testing commit 56c5ee1a5823e9cf5288b84ae6364cb4112f8225 with gcc (GCC) 8.1.0
kernel signature: b26cac0656d675991aa2a4c51e3802198f491dc88b0e335ab8f534e37d5368e3
all runs: OK
# git bisect good 56c5ee1a5823e9cf5288b84ae6364cb4112f8225
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[edf070a0fb45ac845f534baf172fbadbeb5048c6] hsr: fix a NULL pointer deref in hsr_dev_xmit()
testing commit edf070a0fb45ac845f534baf172fbadbeb5048c6 with gcc (GCC) 8.1.0
kernel signature: f971c040bb051f3027cf572d5d626fcd514b88ff62e46e8769dae4b24d8f4e72
run #0: crashed: general protection fault in send_hsr_supervision_frame
run #1: crashed: general protection fault in send_hsr_supervision_frame
run #2: crashed: general protection fault in send_hsr_supervision_frame
run #3: crashed: general protection fault in send_hsr_supervision_frame
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad edf070a0fb45ac845f534baf172fbadbeb5048c6
Bisecting: 1 revision left to test after this (roughly 1 step)
[619afef01f74f3572b5e9a266c1230dc83761eec] hsr: fix a memory leak in hsr_del_port()
testing commit 619afef01f74f3572b5e9a266c1230dc83761eec with gcc (GCC) 8.1.0
kernel signature: 425aecbe53592947b2a4cbd288f2e0babfef5fbeb0f6a5eaa6da3332fb103cd6
all runs: OK
# git bisect good 619afef01f74f3572b5e9a266c1230dc83761eec
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[b9a1e627405d68d475a3c1f35e685ccfb5bbe668] hsr: implement dellink to clean up resources
testing commit b9a1e627405d68d475a3c1f35e685ccfb5bbe668 with gcc (GCC) 8.1.0
kernel signature: 8fb2383fffa1fa01c9c6447e680fa87b727502bacd5adf7c0266c922cd23fcb3
run #0: crashed: general protection fault in send_hsr_supervision_frame
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad b9a1e627405d68d475a3c1f35e685ccfb5bbe668
b9a1e627405d68d475a3c1f35e685ccfb5bbe668 is the first bad commit
commit b9a1e627405d68d475a3c1f35e685ccfb5bbe668
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Wed Jul 3 17:21:13 2019 -0700

    hsr: implement dellink to clean up resources
    
    hsr_link_ops implements ->newlink() but not ->dellink(),
    which leads that resources not released after removing the device,
    particularly the entries in self_node_db and node_db.
    
    So add ->dellink() implementation to replace the priv_destructor.
    This also makes the code slightly easier to understand.
    
    Reported-by: syzbot+c6167ec3de7def23d1e8@syzkaller.appspotmail.com
    Cc: Arvid Brodin <arvid.brodin@alten.se>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/hsr/hsr_device.c   | 13 +++++--------
 net/hsr/hsr_device.h   |  1 +
 net/hsr/hsr_framereg.c | 11 ++++++++++-
 net/hsr/hsr_framereg.h |  3 ++-
 net/hsr/hsr_netlink.c  |  7 +++++++
 5 files changed, 25 insertions(+), 10 deletions(-)
culprit signature: 8fb2383fffa1fa01c9c6447e680fa87b727502bacd5adf7c0266c922cd23fcb3
parent  signature: 425aecbe53592947b2a4cbd288f2e0babfef5fbeb0f6a5eaa6da3332fb103cd6
revisions tested: 18, total time: 4h45m6.919055351s (build: 1h51m11.298338741s, test: 2h51m57.741066654s)
first bad commit: b9a1e627405d68d475a3c1f35e685ccfb5bbe668 hsr: implement dellink to clean up resources
cc: ["arvid.brodin@alten.se" "davem@davemloft.net" "linux-kernel@vger.kernel.org" "netdev@vger.kernel.org" "xiyou.wangcong@gmail.com"]
crash: general protection fault in send_hsr_supervision_frame
kasan: CONFIG_KASAN_INLINE enabled
kasan: GPF could be caused by NULL-ptr deref or user memory access
general protection fault: 0000 [#1] PREEMPT SMP KASAN
CPU: 1 PID: 0 Comm: swapper/1 Not tainted 5.2.0-rc6-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
RIP: 0010:send_hsr_supervision_frame+0x30/0xf60 net/hsr/hsr_device.c:251
Code: 89 e5 41 57 41 56 41 55 49 89 fd 41 54 41 89 d4 48 89 c2 53 48 c1 ea 03 48 83 ec 50 48 89 45 d0 48 b8 00 00 00 00 00 fc ff df <80> 3c 02 00 89 75 c8 0f 85 83 0c 00 00 48 b8 00 00 00 00 00 fc ff
RSP: 0018:ffff8880ae909c68 EFLAGS: 00010282
RAX: dffffc0000000000 RBX: ffff888084c23840 RCX: 1ffff110127a7f64
RDX: 0000000000000002 RSI: 0000000000000017 RDI: 0000000000000000
RBP: ffff8880ae909ce0 R08: ffffed1015d26c78 R09: ffffed1015d26c77
R10: ffffed1015d26c77 R11: ffff8880ae9363bb R12: 0000000000000000
R13: 0000000000000000 R14: ffff8880ae909db8 R15: ffff8880ae924b80
FS:  0000000000000000(0000) GS:ffff8880ae900000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00000000004bf8a8 CR3: 000000000886d000 CR4: 00000000001406e0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 <IRQ>
 hsr_announce+0xd9/0x2b0 net/hsr/hsr_device.c:335
 call_timer_fn+0x14d/0x510 kernel/time/timer.c:1322
 expire_timers kernel/time/timer.c:1366 [inline]
 __run_timers kernel/time/timer.c:1685 [inline]
 run_timer_softirq+0xc6f/0x1330 kernel/time/timer.c:1698
 __do_softirq+0x260/0x958 kernel/softirq.c:292
 invoke_softirq kernel/softirq.c:373 [inline]
 irq_exit+0x17f/0x1c0 kernel/softirq.c:413
 exiting_irq arch/x86/include/asm/apic.h:536 [inline]
 smp_apic_timer_interrupt+0x13e/0x540 arch/x86/kernel/apic/apic.c:1068
 apic_timer_interrupt+0xf/0x20 arch/x86/entry/entry_64.S:806
 </IRQ>
RIP: 0010:native_safe_halt+0x12/0x20 arch/x86/include/asm/irqflags.h:61
Code: 11 ff ff ff 4c 89 e7 e8 0c a5 96 fa eb 97 90 90 90 90 90 90 90 90 90 90 55 48 89 e5 e9 07 00 00 00 0f 00 2d 00 ea 65 00 fb f4 <5d> c3 66 90 66 2e 0f 1f 84 00 00 00 00 00 55 48 89 e5 e9 07 00 00
RSP: 0018:ffff8880a98dfd70 EFLAGS: 00000286 ORIG_RAX: ffffffffffffff13
RAX: dffffc0000000000 RBX: ffff8880a98ce340 RCX: 0000000000000000
RDX: 1ffffffff11243e1 RSI: 0000000000000006 RDI: ffffffff88921f08
RBP: ffff8880a98dfd70 R08: 0000000000000006 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000001
R13: ffffffff88921ef8 R14: 0000000000000001 R15: ffffffff89676038
 arch_safe_halt arch/x86/include/asm/paravirt.h:156 [inline]
 default_idle+0x51/0x310 arch/x86/kernel/process.c:580
 arch_cpu_idle+0xa/0x10 arch/x86/kernel/process.c:571
 default_idle_call+0x6d/0x90 kernel/sched/idle.c:94
 cpuidle_idle_call kernel/sched/idle.c:154 [inline]
 do_idle+0x3e4/0x590 kernel/sched/idle.c:263
 cpu_startup_entry+0x18/0x20 kernel/sched/idle.c:354
 start_secondary+0x367/0x4b0 arch/x86/kernel/smpboot.c:265
 secondary_startup_64+0xa4/0xb0 arch/x86/kernel/head_64.S:243
Modules linked in:
---[ end trace 4779eb58ddc7a920 ]---
RIP: 0010:send_hsr_supervision_frame+0x30/0xf60 net/hsr/hsr_device.c:251
Code: 89 e5 41 57 41 56 41 55 49 89 fd 41 54 41 89 d4 48 89 c2 53 48 c1 ea 03 48 83 ec 50 48 89 45 d0 48 b8 00 00 00 00 00 fc ff df <80> 3c 02 00 89 75 c8 0f 85 83 0c 00 00 48 b8 00 00 00 00 00 fc ff
RSP: 0018:ffff8880ae909c68 EFLAGS: 00010282
RAX: dffffc0000000000 RBX: ffff888084c23840 RCX: 1ffff110127a7f64
RDX: 0000000000000002 RSI: 0000000000000017 RDI: 0000000000000000
RBP: ffff8880ae909ce0 R08: ffffed1015d26c78 R09: ffffed1015d26c77
R10: ffffed1015d26c77 R11: ffff8880ae9363bb R12: 0000000000000000
R13: 0000000000000000 R14: ffff8880ae909db8 R15: ffff8880ae924b80
FS:  0000000000000000(0000) GS:ffff8880ae900000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00000000004bf8a8 CR3: 000000000886d000 CR4: 00000000001406e0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400

