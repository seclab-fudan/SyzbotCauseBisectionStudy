bisecting cause commit starting from 39bed42de2e7d74686a2d5a45638d6a5d7e7d473
building syzkaller on 5ed23f9aa677d71bc60f61df8e05046151868541
testing commit 39bed42de2e7d74686a2d5a45638d6a5d7e7d473 with gcc (GCC) 8.1.0
kernel signature: 047411ffbbb07ce093814bef2ce9b4c1af74bf83ec88a099525e7f605b96769b
all runs: crashed: KASAN: use-after-free Read in vgem_gem_dumb_create
testing release v5.5
testing commit d5226fa6dbae0569ee43ecfc08bdcd6770fc4755 with gcc (GCC) 8.1.0
kernel signature: 3bb0f144b1165482eae8c734972f77691cbe1b7b527d4ab920a3665053e25b14
all runs: crashed: KASAN: use-after-free Read in vgem_gem_dumb_create
testing release v5.4
testing commit 219d54332a09e8d8741c1e1982f5eae56099de85 with gcc (GCC) 8.1.0
kernel signature: 8084134058b6232d77c68d8029f44fd850bdd3c306084f02fd6efd472ebab464
all runs: crashed: KASAN: use-after-free Read in vgem_gem_dumb_create
testing release v5.3
testing commit 4d856f72c10ecb060868ed10ff1b1453943fc6c8 with gcc (GCC) 8.1.0
kernel signature: e94118a67cf671348b3d9adbf685da3f9bb9021935e3993783f04665265ba3a0
all runs: crashed: KASAN: use-after-free Read in vgem_gem_dumb_create
testing release v5.2
testing commit 0ecfebd2b52404ae0c54a878c872bb93363ada36 with gcc (GCC) 8.1.0
kernel signature: bf72486ae5f7d26ce4f77c9d633be1576f9da1cdeb2df4d6707eda1746e7489d
all runs: crashed: KASAN: use-after-free Read in vgem_gem_dumb_create
testing release v5.1
testing commit e93c9c99a629c61837d5a7fc2120cd2b6c70dbdd with gcc (GCC) 8.1.0
kernel signature: 29851f716bc68ad8dfb8adf6e813af9b4ad375ee0bc4dfcf38ad9a3adfe192d6
all runs: crashed: KASAN: use-after-free Read in vgem_gem_dumb_create
testing release v5.0
testing commit 1c163f4c7b3f621efff9b28a47abb36f7378d783 with gcc (GCC) 8.1.0
kernel signature: 697251187c9697f647252d3783f49baa3e4742e39b99299f249d9745f0df3669
all runs: crashed: KASAN: use-after-free Read in vgem_gem_dumb_create
testing release v4.20
testing commit 8fe28cb58bcb235034b64cbbb7550a8a43fd88be with gcc (GCC) 8.1.0
kernel signature: 73de464d8f43d295d5164dadf1d62acc05b7e2b84b8f48c2e55a4337144746b7
all runs: crashed: KASAN: use-after-free Read in vgem_gem_dumb_create
testing release v4.19
testing commit 84df9525b0c27f3ebc2ebb1864fa62a97fdedb7d with gcc (GCC) 8.1.0
kernel signature: a535893083b063c158d93f39ef6423f5b5ab7de65885031474f11a6155ad78c3
all runs: crashed: KASAN: use-after-free Read in vgem_gem_dumb_create
testing release v4.18
testing commit 94710cac0ef4ee177a63b5227664b38c95bbf703 with gcc (GCC) 8.1.0
kernel signature: 46593687fd837d5c412e09d705bad22a0f89274233a7c192760f6f54996cbc50
all runs: crashed: KASAN: use-after-free Read in vgem_gem_dumb_create
testing release v4.17
testing commit 29dcea88779c856c7dc92040a0c01233263101d4 with gcc (GCC) 8.1.0
kernel signature: 42f1ebde87c240e1a06d0b61757d83acd6fdf3c526049ae63e703c3c7597bdb6
all runs: crashed: KASAN: use-after-free Read in vgem_gem_dumb_create
testing release v4.16
testing commit 0adb32858b0bddf4ada5f364a84ed60b196dbcda with gcc (GCC) 8.1.0
kernel signature: bbf378f11b2bb881e6ab0a5294c95738bac6a6213edc145523195789024c1377
all runs: crashed: KASAN: use-after-free Read in vgem_gem_dumb_create
testing release v4.15
testing commit d8a5b80568a9cb66810e75b182018e9edb68e8ff with gcc (GCC) 8.1.0
kernel signature: 6f74559ff019b4747a7d21452b90a90614e261ae30ff62fc71a8288058a0ac16
all runs: crashed: KASAN: use-after-free Read in vgem_gem_dumb_create
testing release v4.14
testing commit bebc6082da0a9f5d47a1ea2edc099bf671058bd4 with gcc (GCC) 8.1.0
kernel signature: a7c3291b856bbe0bc511f300264164dbe91718734b65fae2a25d327f2ae84267
all runs: crashed: KASAN: use-after-free Read in vgem_gem_dumb_create
testing release v4.13
testing commit 569dbb88e80deb68974ef6fdd6a13edb9d686261 with gcc (GCC) 8.1.0
kernel signature: 63f998a91501eae4ee8806700c84ac243c47b7cd33797c24235a740cd3343120
all runs: OK
# git bisect start bebc6082da0a9f5d47a1ea2edc099bf671058bd4 569dbb88e80deb68974ef6fdd6a13edb9d686261
Bisecting: 7300 revisions left to test after this (roughly 13 steps)
[15d8ffc96464f6571ecf22043c45fad659f11bdd] Merge tag 'mmc-v4.14' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc
testing commit 15d8ffc96464f6571ecf22043c45fad659f11bdd with gcc (GCC) 8.1.0
kernel signature: 9067fb727686883e4f3a44d18d1553d748a89417b17a9f6f2b302595389aca7a
all runs: crashed: KASAN: use-after-free Read in vgem_gem_dumb_create
# git bisect bad 15d8ffc96464f6571ecf22043c45fad659f11bdd
Bisecting: 3676 revisions left to test after this (roughly 12 steps)
[bafb0762cb6a906eb4105cccfb3bcd90be7f40d2] Merge tag 'char-misc-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc
testing commit bafb0762cb6a906eb4105cccfb3bcd90be7f40d2 with gcc (GCC) 8.1.0
kernel signature: 416eb9394dc215abfeae81b0ec0530c1cc95f288564e3c3ee50a3a4c9fe119af
all runs: crashed: KASAN: use-after-free Read in vgem_gem_dumb_create
# git bisect bad bafb0762cb6a906eb4105cccfb3bcd90be7f40d2
Bisecting: 1794 revisions left to test after this (roughly 11 steps)
[9657752cb5039c7498d4b27c4a75530f93b87d9b] Merge branch 'perf-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
testing commit 9657752cb5039c7498d4b27c4a75530f93b87d9b with gcc (GCC) 8.1.0
kernel signature: 194d7b0271f91c3acb05aef2c3cc27d1bc21c1857f56b3beafb1b284d075c878
all runs: crashed: KASAN: use-after-free Read in vgem_gem_dumb_create
# git bisect bad 9657752cb5039c7498d4b27c4a75530f93b87d9b
Bisecting: 870 revisions left to test after this (roughly 10 steps)
[735f463af70e9601881ec879961ec42aef051733] Merge tag 'drm-intel-next-2017-08-18' of git://anongit.freedesktop.org/git/drm-intel into drm-next
testing commit 735f463af70e9601881ec879961ec42aef051733 with gcc (GCC) 8.1.0
kernel signature: d4ce468d8d9673e6285d8264cb271e5c95bb2e6140e9e51e27bd876c29b8b5af
all runs: crashed: KASAN: use-after-free Read in vgem_gem_dumb_create
# git bisect bad 735f463af70e9601881ec879961ec42aef051733
Bisecting: 459 revisions left to test after this (roughly 9 steps)
[09ef2378dc42339f3871584dc26d27da220277cb] Merge tag 'drm-misc-next-2017-08-08' of git://anongit.freedesktop.org/git/drm-misc into drm-next
testing commit 09ef2378dc42339f3871584dc26d27da220277cb with gcc (GCC) 8.1.0
kernel signature: 636a2672cdc589bcbcead5bb06fe3db1c99e622ac3cfb2e3848b8ca642ac9f55
all runs: crashed: KASAN: use-after-free Read in vgem_gem_dumb_create
# git bisect bad 09ef2378dc42339f3871584dc26d27da220277cb
Bisecting: 277 revisions left to test after this (roughly 8 steps)
[78acea381d6eb1c67b155e7e2638ba3b1728eb07] Merge airlied/drm-next into drm-misc-next
testing commit 78acea381d6eb1c67b155e7e2638ba3b1728eb07 with gcc (GCC) 8.1.0
kernel signature: f26eea72698b0a01ea1e5bbcbd0aaffb6de8ef23d0eca713b0eef6f24460baf7
all runs: OK
# git bisect good 78acea381d6eb1c67b155e7e2638ba3b1728eb07
Bisecting: 139 revisions left to test after this (roughly 7 steps)
[799c7b20b26078e1e3b1c7d38e9ffce9bb56348d] drm/amdgpu: fix header on gfx9 clear state
testing commit 799c7b20b26078e1e3b1c7d38e9ffce9bb56348d with gcc (GCC) 7.3.0
kernel signature: 6fbb96e415b74b3d1921620f73d0af3b97c71eaf232ca0aaf9224f5e575753e2
all runs: crashed: BUG: sleeping function called from invalid context in tap_get_minor
# git bisect bad 799c7b20b26078e1e3b1c7d38e9ffce9bb56348d
Bisecting: 68 revisions left to test after this (roughly 6 steps)
[16abb5d206499d8cb84103c758d45afbfecf76c0] drm/amd/powerplay: added new se_cac_idx r/w APIs v2
testing commit 16abb5d206499d8cb84103c758d45afbfecf76c0 with gcc (GCC) 7.3.0
kernel signature: 32cd0deeee3285afd278c3fb6b3d470c2db0b40657539b32b22c1b85cf639799
all runs: crashed: BUG: sleeping function called from invalid context in tap_get_minor
# git bisect bad 16abb5d206499d8cb84103c758d45afbfecf76c0
Bisecting: 34 revisions left to test after this (roughly 5 steps)
[1aaa56029f47e16f9d03e25a313677f16212ad72] drm: amd: amdgpu: constify ttm_place structures.
testing commit 1aaa56029f47e16f9d03e25a313677f16212ad72 with gcc (GCC) 7.3.0
kernel signature: 638980c7590525ea55fc8a6c98a9b8e1a27dbf85c165b5bc45e05598b9212097
all runs: crashed: BUG: sleeping function called from invalid context in tap_get_minor
# git bisect bad 1aaa56029f47e16f9d03e25a313677f16212ad72
Bisecting: 16 revisions left to test after this (roughly 4 steps)
[b8e0e6e16e3ac130901111e2c503b3533f9719ee] drm/amdgpu: fix amdgpu_debugfs_gem_bo_info
testing commit b8e0e6e16e3ac130901111e2c503b3533f9719ee with gcc (GCC) 7.3.0
kernel signature: 4639284a1b9dee475896002be27dd8f8f09cacbe0dd17456d791b0c893b9de40
all runs: crashed: BUG: sleeping function called from invalid context in tap_get_minor
# git bisect bad b8e0e6e16e3ac130901111e2c503b3533f9719ee
Bisecting: 8 revisions left to test after this (roughly 3 steps)
[cad81e34a8d268146fda82d2379eafb0ce9ea775] drm/amdgpu/gmc8: drop fb location programming
testing commit cad81e34a8d268146fda82d2379eafb0ce9ea775 with gcc (GCC) 7.3.0
kernel signature: ce2858126e5358cffc3c0c7eb6014d9242afa2988ff45f476bf68dadb57da0b7
all runs: crashed: BUG: sleeping function called from invalid context in tap_get_minor
# git bisect bad cad81e34a8d268146fda82d2379eafb0ce9ea775
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[84b5d3d10d6c7b8ff53e756217405a535691ff7d] drm/amdgpu: disable vga render in dce hw_init
testing commit 84b5d3d10d6c7b8ff53e756217405a535691ff7d with gcc (GCC) 7.3.0
kernel signature: 86e58157d81bfe37df25518b0b22437eb6e171d9766024b39a87b899051b6f2d
all runs: crashed: BUG: sleeping function called from invalid context in tap_get_minor
# git bisect bad 84b5d3d10d6c7b8ff53e756217405a535691ff7d
Bisecting: 1 revision left to test after this (roughly 1 step)
[fd66560b803e32c873164105a0864fdfc1163633] drm/amdgpu: enable 4 level page table on raven (v3)
testing commit fd66560b803e32c873164105a0864fdfc1163633 with gcc (GCC) 7.3.0
kernel signature: ec1ef307954599801392c45d1969f5bc7190d9152b444a77b366f5dddd85bd97
all runs: crashed: BUG: sleeping function called from invalid context in tap_get_minor
# git bisect bad fd66560b803e32c873164105a0864fdfc1163633
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[7611750784664db46d0db95631e322aeb263dde7] drm/amdgpu: use kernel is_power_of_2 rather than local version
testing commit 7611750784664db46d0db95631e322aeb263dde7 with gcc (GCC) 7.3.0
kernel signature: 10307b9c3dac63c95552760f59fc54f45b8e29904389d67832cf82f3ba857b92
all runs: crashed: BUG: sleeping function called from invalid context in tap_get_minor
# git bisect bad 7611750784664db46d0db95631e322aeb263dde7
7611750784664db46d0db95631e322aeb263dde7 is the first bad commit
commit 7611750784664db46d0db95631e322aeb263dde7
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Jun 21 12:31:41 2017 -0400

    drm/amdgpu: use kernel is_power_of_2 rather than local version
    
    Use the kernel provided version.
    
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>

 drivers/gpu/drm/amd/amdgpu/amdgpu_device.c | 19 +++----------------
 1 file changed, 3 insertions(+), 16 deletions(-)
parent commit 6419ec78c6726aa54ff103aceffbf19d546d3d1b wasn't tested
testing commit 6419ec78c6726aa54ff103aceffbf19d546d3d1b with gcc (GCC) 7.3.0
kernel signature: fe5c97c21ec878da9c3f4c964aaac2bbd14efe5b6a71277eb145460866a58062
culprit signature: 10307b9c3dac63c95552760f59fc54f45b8e29904389d67832cf82f3ba857b92
parent  signature: fe5c97c21ec878da9c3f4c964aaac2bbd14efe5b6a71277eb145460866a58062
revisions tested: 29, total time: 5h11m27.071642749s (build: 2h52m34.538477242s, test: 2h16m24.006525626s)
first bad commit: 7611750784664db46d0db95631e322aeb263dde7 drm/amdgpu: use kernel is_power_of_2 rather than local version
cc: ["airlied@linux.ie" "alexander.deucher@amd.com" "amd-gfx@lists.freedesktop.org" "christian.koenig@amd.com" "dri-devel@lists.freedesktop.org" "linux-kernel@vger.kernel.org"]
crash: BUG: sleeping function called from invalid context in tap_get_minor
IPv6: ADDRCONF(NETDEV_UP): hsr_slave_0: link is not ready
IPv6: ADDRCONF(NETDEV_UP): hsr_slave_1: link is not ready
IPv6: ADDRCONF(NETDEV_UP): hsr_slave_0: link is not ready
bond0: Enslaving bond_slave_0 as an active interface with an up link
IPv6: ADDRCONF(NETDEV_UP): hsr_slave_1: link is not ready
BUG: sleeping function called from invalid context at kernel/locking/mutex.c:747
in_atomic(): 0, irqs_disabled(): 0, pid: 6955, name: syz-executor.2
2 locks held by syz-executor.2/6955:
 #0:  (rtnl_mutex){+.+.+.}, at: [<ffffffff85d29f76>] rtnl_lock net/core/rtnetlink.c:70 [inline]
 #0:  (rtnl_mutex){+.+.+.}, at: [<ffffffff85d29f76>] rtnetlink_rcv+0x16/0x30 net/core/rtnetlink.c:4157
 #1:  (rcu_read_lock){......}, at: [<ffffffff84750ae0>] tap_get_minor+0x0/0x440 drivers/net/tap.c:388
Preemption disabled at:
[<ffffffff8378c1e9>] __debug_object_init+0x109/0x1030 lib/debugobjects.c:341
CPU: 1 PID: 6955 Comm: syz-executor.2 Not tainted 4.12.0-rc7-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Call Trace:
 __dump_stack lib/dump_stack.c:16 [inline]
 dump_stack+0x145/0x1f1 lib/dump_stack.c:52
 ___might_sleep+0x360/0x500 kernel/sched/core.c:6283
 __might_sleep+0x95/0x190 kernel/sched/core.c:6238
 __mutex_lock_common kernel/locking/mutex.c:747 [inline]
 __mutex_lock+0x13e/0x1a00 kernel/locking/mutex.c:893
 mutex_lock_nested+0x16/0x20 kernel/locking/mutex.c:908
 tap_get_minor+0x241/0x440 drivers/net/tap.c:419
 macvtap_device_event+0x141/0x340 drivers/net/macvtap.c:166
 notifier_call_chain+0x124/0x2d0 kernel/notifier.c:93
 __raw_notifier_call_chain kernel/notifier.c:394 [inline]
 raw_notifier_call_chain+0x11/0x20 kernel/notifier.c:401
 call_netdevice_notifiers_info+0x47/0x80 net/core/dev.c:1650
 call_netdevice_notifiers net/core/dev.c:1666 [inline]
 register_netdevice+0x8f9/0xe40 net/core/dev.c:7489
 macvlan_common_newlink+0xb1d/0x1540 drivers/net/macvlan.c:1370
 macvtap_newlink+0x1ff/0x340 drivers/net/macvtap.c:109
 rtnl_newlink+0xfdf/0x1a10 net/core/rtnetlink.c:2655
 rtnetlink_rcv_msg+0x50f/0x990 net/core/rtnetlink.c:4152
 netlink_rcv_skb+0x20c/0x440 net/netlink/af_netlink.c:2397
 rtnetlink_rcv+0x25/0x30 net/core/rtnetlink.c:4158
 netlink_unicast_kernel net/netlink/af_netlink.c:1265 [inline]
 netlink_unicast+0x422/0x630 net/netlink/af_netlink.c:1291
 netlink_sendmsg+0x9c8/0xe30 net/netlink/af_netlink.c:1854
 sock_sendmsg_nosec net/socket.c:633 [inline]
 sock_sendmsg+0xb5/0xf0 net/socket.c:643
 SYSC_sendto+0x30e/0x5e0 net/socket.c:1696
 SyS_sendto+0x9/0x10 net/socket.c:1664
 entry_SYSCALL_64_fastpath+0x23/0xc2
RIP: 0033:0x415043
RSP: 002b:00007ffc23dc3a08 EFLAGS: 00000246 ORIG_RAX: 000000000000002c
RAX: ffffffffffffffda RBX: 0000000000a72200 RCX: 0000000000415043
RDX: 0000000000000044 RSI: 0000000000a72250 RDI: 0000000000000003
RBP: 0000000000000086 R08: 00007ffc23dc3a10 R09: 000000000000000c
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000003
R13: 00000000004c0983 R14: 00007ffc23dc3b00 R15: 0000000000000000
bond0: Enslaving bond_slave_1 as an active interface with an up link
IPv6: ADDRCONF(NETDEV_UP): team_slave_0: link is not ready
team0: Port device team_slave_0 added
IPv6: ADDRCONF(NETDEV_UP): team_slave_1: link is not ready
team0: Port device team_slave_1 added
IPv6: ADDRCONF(NETDEV_UP): bridge0: link is not ready
batman_adv: batadv0: Adding interface: batadv_slave_0
batman_adv: batadv0: The MTU of interface batadv_slave_0 is too small (1500) to handle the transport of batman-adv packets. Packets going over this interface will be fragmented on layer2 which could impact the performance. Setting the MTU to 1560 would solve the problem.
batman_adv: batadv0: Not using interface batadv_slave_0 (retrying later): interface not active
batman_adv: batadv0: Adding interface: batadv_slave_1
batman_adv: batadv0: The MTU of interface batadv_slave_1 is too small (1500) to handle the transport of batman-adv packets. Packets going over this interface will be fragmented on layer2 which could impact the performance. Setting the MTU to 1560 would solve the problem.
batman_adv: batadv0: Not using interface batadv_slave_1 (retrying later): interface not active
IPv6: ADDRCONF(NETDEV_UP): bridge_slave_0: link is not ready
IPv6: ADDRCONF(NETDEV_UP): bridge_slave_1: link is not ready
bridge0: port 1(bridge_slave_0) entered blocking state
bridge0: port 1(bridge_slave_0) entered disabled state
device bridge_slave_0 entered promiscuous mode
chnl_net:caif_netlink_parms(): no params data found
bridge0: port 2(bridge_slave_1) entered blocking state
bridge0: port 2(bridge_slave_1) entered disabled state
device bridge_slave_1 entered promiscuous mode
IPv6: ADDRCONF(NETDEV_UP): hsr_slave_0: link is not ready
IPv6: ADDRCONF(NETDEV_UP): hsr_slave_1: link is not ready
bond0: Enslaving bond_slave_0 as an active interface with an up link
bond0: Enslaving bond_slave_1 as an active interface with an up link
bridge0: port 1(bridge_slave_0) entered blocking state
bridge0: port 1(bridge_slave_0) entered disabled state
device bridge_slave_0 entered promiscuous mode
IPv6: ADDRCONF(NETDEV_UP): bridge0: link is not ready
bridge0: port 2(bridge_slave_1) entered blocking state
bridge0: port 2(bridge_slave_1) entered disabled state
device bridge_slave_1 entered promiscuous mode
IPv6: ADDRCONF(NETDEV_UP): team_slave_0: link is not ready
team0: Port device team_slave_0 added
IPv6: ADDRCONF(NETDEV_UP): bridge0: link is not ready
IPv6: ADDRCONF(NETDEV_UP): team_slave_1: link is not ready
team0: Port device team_slave_1 added
bond0: Enslaving bond_slave_0 as an active interface with an up link
BUG: sleeping function called from invalid context at kernel/locking/mutex.c:747
in_atomic(): 0, irqs_disabled(): 0, pid: 6959, name: syz-executor.3
2 locks held by syz-executor.3/6959:
 #0:  (rtnl_mutex){+.+.+.}, at: [<ffffffff85d29f76>] rtnl_lock net/core/rtnetlink.c:70 [inline]
 #0:  (rtnl_mutex){+.+.+.}, at: [<ffffffff85d29f76>] rtnetlink_rcv+0x16/0x30 net/core/rtnetlink.c:4157
 #1:  (rcu_read_lock){......}, at: [<ffffffff84750ae0>] tap_get_minor+0x0/0x440 drivers/net/tap.c:388
Preemption disabled at:
[<ffffffff8378c1e9>] __debug_object_init+0x109/0x1030 lib/debugobjects.c:341
CPU: 0 PID: 6959 Comm: syz-executor.3 Tainted: G        W       4.12.0-rc7-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Call Trace:
 __dump_stack lib/dump_stack.c:16 [inline]
 dump_stack+0x145/0x1f1 lib/dump_stack.c:52
 ___might_sleep+0x360/0x500 kernel/sched/core.c:6283
 __might_sleep+0x95/0x190 kernel/sched/core.c:6238
 __mutex_lock_common kernel/locking/mutex.c:747 [inline]
 __mutex_lock+0x13e/0x1a00 kernel/locking/mutex.c:893
 mutex_lock_nested+0x16/0x20 kernel/locking/mutex.c:908
 tap_get_minor+0x241/0x440 drivers/net/tap.c:419
 macvtap_device_event+0x141/0x340 drivers/net/macvtap.c:166
 notifier_call_chain+0x124/0x2d0 kernel/notifier.c:93
 __raw_notifier_call_chain kernel/notifier.c:394 [inline]
 raw_notifier_call_chain+0x11/0x20 kernel/notifier.c:401
 call_netdevice_notifiers_info+0x47/0x80 net/core/dev.c:1650
 call_netdevice_notifiers net/core/dev.c:1666 [inline]
 register_netdevice+0x8f9/0xe40 net/core/dev.c:7489
 macvlan_common_newlink+0xb1d/0x1540 drivers/net/macvlan.c:1370
 macvtap_newlink+0x1ff/0x340 drivers/net/macvtap.c:109
 rtnl_newlink+0xfdf/0x1a10 net/core/rtnetlink.c:2655
 rtnetlink_rcv_msg+0x50f/0x990 net/core/rtnetlink.c:4152
 netlink_rcv_skb+0x20c/0x440 net/netlink/af_netlink.c:2397
 rtnetlink_rcv+0x25/0x30 net/core/rtnetlink.c:4158
 netlink_unicast_kernel net/netlink/af_netlink.c:1265 [inline]
 netlink_unicast+0x422/0x630 net/netlink/af_netlink.c:1291
 netlink_sendmsg+0x9c8/0xe30 net/netlink/af_netlink.c:1854
 sock_sendmsg_nosec net/socket.c:633 [inline]
 sock_sendmsg+0xb5/0xf0 net/socket.c:643
 SYSC_sendto+0x30e/0x5e0 net/socket.c:1696
 SyS_sendto+0x9/0x10 net/socket.c:1664
 entry_SYSCALL_64_fastpath+0x23/0xc2
RIP: 0033:0x415043
RSP: 002b:00007ffdf97a8a68 EFLAGS: 00000246 ORIG_RAX: 000000000000002c
RAX: ffffffffffffffda RBX: 0000000000a72200 RCX: 0000000000415043
RDX: 0000000000000044 RSI: 0000000000a72250 RDI: 0000000000000003
RBP: 0000000000000086 R08: 00007ffdf97a8a70 R09: 000000000000000c
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000003
R13: 00000000004c0983 R14: 00007ffdf97a8b60 R15: 0000000000000000
bond0: Enslaving bond_slave_1 as an active interface with an up link
batman_adv: batadv0: Adding interface: batadv_slave_0
batman_adv: batadv0: The MTU of interface batadv_slave_0 is too small (1500) to handle the transport of batman-adv packets. Packets going over this interface will be fragmented on layer2 which could impact the performance. Setting the MTU to 1560 would solve the problem.
batman_adv: batadv0: Not using interface batadv_slave_0 (retrying later): interface not active
batman_adv: batadv0: Adding interface: batadv_slave_1
batman_adv: batadv0: The MTU of interface batadv_slave_1 is too small (1500) to handle the transport of batman-adv packets. Packets going over this interface will be fragmented on layer2 which could impact the performance. Setting the MTU to 1560 would solve the problem.
batman_adv: batadv0: Not using interface batadv_slave_1 (retrying later): interface not active
IPv6: ADDRCONF(NETDEV_UP): bridge_slave_0: link is not ready
IPv6: ADDRCONF(NETDEV_UP): bridge_slave_1: link is not ready
8021q: adding VLAN 0 to HW filter on device bond0
IPv6: ADDRCONF(NETDEV_UP): veth0: link is not ready
IPv6: ADDRCONF(NETDEV_UP): team_slave_0: link is not ready
team0: Port device team_slave_0 added
IPv6: ADDRCONF(NETDEV_UP): team_slave_1: link is not ready
team0: Port device team_slave_1 added
batman_adv: batadv0: Adding interface: batadv_slave_0
batman_adv: batadv0: The MTU of interface batadv_slave_0 is too small (1500) to handle the transport of batman-adv packets. Packets going over this interface will be fragmented on layer2 which could impact the performance. Setting the MTU to 1560 would solve the problem.
batman_adv: batadv0: Not using interface batadv_slave_0 (retrying later): interface not active
8021q: adding VLAN 0 to HW filter on device bond0
IPv6: ADDRCONF(NETDEV_UP): veth0: link is not ready
batman_adv: batadv0: Adding interface: batadv_slave_1
batman_adv: batadv0: The MTU of interface batadv_slave_1 is too small (1500) to handle the transport of batman-adv packets. Packets going over this interface will be fragmented on layer2 which could impact the performance. Setting the MTU to 1560 would solve the problem.
batman_adv: batadv0: Not using interface batadv_slave_1 (retrying later): interface not active
IPv6: ADDRCONF(NETDEV_UP): bridge0: link is not ready
IPv6: ADDRCONF(NETDEV_UP): team0: link is not ready
8021q: adding VLAN 0 to HW filter on device team0
IPv6: ADDRCONF(NETDEV_UP): hsr_slave_0: link is not ready
IPv6: ADDRCONF(NETDEV_UP): bridge_slave_0: link is not ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0: link becomes ready
IPv6: ADDRCONF(NETDEV_UP): hsr_slave_1: link is not ready
IPv6: ADDRCONF(NETDEV_UP): team0: link is not ready
8021q: adding VLAN 0 to HW filter on device team0
IPv6: ADDRCONF(NETDEV_UP): bridge_slave_1: link is not ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): bridge_slave_0: link becomes ready
bridge0: port 1(bridge_slave_0) entered blocking state
bridge0: port 1(bridge_slave_0) entered forwarding state
IPv6: ADDRCONF(NETDEV_CHANGE): bridge_slave_1: link becomes ready
bridge0: port 2(bridge_slave_1) entered blocking state
bridge0: port 2(bridge_slave_1) entered forwarding state
IPv6: ADDRCONF(NETDEV_CHANGE): bridge0: link becomes ready
8021q: adding VLAN 0 to HW filter on device bond0
IPv6: ADDRCONF(NETDEV_CHANGE): bridge_slave_0: link becomes ready
bridge0: port 1(bridge_slave_0) entered blocking state
bridge0: port 1(bridge_slave_0) entered forwarding state
IPv6: ADDRCONF(NETDEV_CHANGE): bridge_slave_1: link becomes ready
bridge0: port 2(bridge_slave_1) entered blocking state
bridge0: port 2(bridge_slave_1) entered forwarding state
IPv6: ADDRCONF(NETDEV_CHANGE): team_slave_0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): team_slave_1: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): hsr_slave_0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): hsr_slave_1: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): bridge0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): team0: link becomes ready
IPv6: ADDRCONF(NETDEV_UP): veth0: link is not ready
IPv6: ADDRCONF(NETDEV_UP): hsr_slave_0: link is not ready
IPv6: ADDRCONF(NETDEV_CHANGE): team_slave_0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): team_slave_1: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): team0: link becomes ready
IPv6: ADDRCONF(NETDEV_UP): hsr_slave_1: link is not ready
IPv6: ADDRCONF(NETDEV_CHANGE): hsr_slave_0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): hsr_slave_1: link becomes ready
IPv6: ADDRCONF(NETDEV_UP): team0: link is not ready
8021q: adding VLAN 0 to HW filter on device team0
IPv6: ADDRCONF(NETDEV_CHANGE): veth0: link becomes ready
BUG: sleeping function called from invalid context at kernel/locking/mutex.c:747
in_atomic(): 0, irqs_disabled(): 0, pid: 6964, name: syz-executor.4
2 locks held by syz-executor.4/6964:
 #0:  (rtnl_mutex){+.+.+.}, at: [<ffffffff85d29f76>] rtnl_lock net/core/rtnetlink.c:70 [inline]
 #0:  (rtnl_mutex){+.+.+.}, at: [<ffffffff85d29f76>] rtnetlink_rcv+0x16/0x30 net/core/rtnetlink.c:4157
 #1:  (rcu_read_lock){......}, at: [<ffffffff84750ae0>] tap_get_minor+0x0/0x440 drivers/net/tap.c:388
Preemption disabled at:
[<ffffffff8378c1e9>] __debug_object_init+0x109/0x1030 lib/debugobjects.c:341
CPU: 0 PID: 6964 Comm: syz-executor.4 Tainted: G        W       4.12.0-rc7-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Call Trace:
 __dump_stack lib/dump_stack.c:16 [inline]
 dump_stack+0x145/0x1f1 lib/dump_stack.c:52
 ___might_sleep+0x360/0x500 kernel/sched/core.c:6283
 __might_sleep+0x95/0x190 kernel/sched/core.c:6238
 __mutex_lock_common kernel/locking/mutex.c:747 [inline]
 __mutex_lock+0x13e/0x1a00 kernel/locking/mutex.c:893
 mutex_lock_nested+0x16/0x20 kernel/locking/mutex.c:908
 tap_get_minor+0x241/0x440 drivers/net/tap.c:419
 macvtap_device_event+0x141/0x340 drivers/net/macvtap.c:166
 notifier_call_chain+0x124/0x2d0 kernel/notifier.c:93
 __raw_notifier_call_chain kernel/notifier.c:394 [inline]
 raw_notifier_call_chain+0x11/0x20 kernel/notifier.c:401
 call_netdevice_notifiers_info+0x47/0x80 net/core/dev.c:1650
 call_netdevice_notifiers net/core/dev.c:1666 [inline]
 register_netdevice+0x8f9/0xe40 net/core/dev.c:7489
 macvlan_common_newlink+0xb1d/0x1540 drivers/net/macvlan.c:1370
 macvtap_newlink+0x1ff/0x340 drivers/net/macvtap.c:109
 rtnl_newlink+0xfdf/0x1a10 net/core/rtnetlink.c:2655
 rtnetlink_rcv_msg+0x50f/0x990 net/core/rtnetlink.c:4152
 netlink_rcv_skb+0x20c/0x440 net/netlink/af_netlink.c:2397
 rtnetlink_rcv+0x25/0x30 net/core/rtnetlink.c:4158
 netlink_unicast_kernel net/netlink/af_netlink.c:1265 [inline]
 netlink_unicast+0x422/0x630 net/netlink/af_netlink.c:1291
 netlink_sendmsg+0x9c8/0xe30 net/netlink/af_netlink.c:1854
 sock_sendmsg_nosec net/socket.c:633 [inline]
 sock_sendmsg+0xb5/0xf0 net/socket.c:643
 SYSC_sendto+0x30e/0x5e0 net/socket.c:1696
 SyS_sendto+0x9/0x10 net/socket.c:1664
 entry_SYSCALL_64_fastpath+0x23/0xc2
RIP: 0033:0x415043
RSP: 002b:00007ffd9ab60fe8 EFLAGS: 00000246 ORIG_RAX: 000000000000002c
RAX: ffffffffffffffda RBX: 0000000000a72200 RCX: 0000000000415043
RDX: 0000000000000044 RSI: 0000000000a72250 RDI: 0000000000000003
RBP: 0000000000000086 R08: 00007ffd9ab60ff0 R09: 000000000000000c
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000003
R13: 00000000004c0983 R14: 00007ffd9ab610e0 R15: 0000000000000000
IPv6: ADDRCONF(NETDEV_CHANGE): bridge_slave_0: link becomes ready
bridge0: port 1(bridge_slave_0) entered blocking state
bridge0: port 1(bridge_slave_0) entered forwarding state
IPv6: ADDRCONF(NETDEV_CHANGE): bridge_slave_1: link becomes ready
bridge0: port 2(bridge_slave_1) entered blocking state
bridge0: port 2(bridge_slave_1) entered forwarding state
IPv6: ADDRCONF(NETDEV_CHANGE): bridge0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): team_slave_0: link becomes ready
IPv6: ADDRCONF(NETDEV_UP): bridge0: link is not ready
8021q: adding VLAN 0 to HW filter on device bond0
IPv6: ADDRCONF(NETDEV_CHANGE): team0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): team_slave_1: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): hsr_slave_0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): hsr_slave_1: link becomes ready
IPv6: ADDRCONF(NETDEV_UP): veth0: link is not ready
8021q: adding VLAN 0 to HW filter on device batadv0
IPv6: ADDRCONF(NETDEV_CHANGE): veth0: link becomes ready
IPv6: ADDRCONF(NETDEV_UP): team0: link is not ready
8021q: adding VLAN 0 to HW filter on device team0
IPv6: ADDRCONF(NETDEV_CHANGE): bridge_slave_0: link becomes ready
bridge0: port 1(bridge_slave_0) entered blocking state
bridge0: port 1(bridge_slave_0) entered forwarding state
IPv6: ADDRCONF(NETDEV_UP): bridge0: link is not ready
8021q: adding VLAN 0 to HW filter on device batadv0
IPv6: ADDRCONF(NETDEV_CHANGE): bridge0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): bridge_slave_1: link becomes ready
bridge0: port 2(bridge_slave_1) entered blocking state
bridge0: port 2(bridge_slave_1) entered forwarding state
IPv6: ADDRCONF(NETDEV_CHANGE): team_slave_0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): team_slave_1: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): team0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): hsr_slave_0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): hsr_slave_1: link becomes ready
8021q: adding VLAN 0 to HW filter on device batadv0
8021q: adding VLAN 0 to HW filter on device bond0
IPv6: ADDRCONF(NETDEV_UP): veth0_virt_wifi: link is not ready
IPv6: ADDRCONF(NETDEV_UP): veth0_virt_wifi: link is not ready
IPv6: ADDRCONF(NETDEV_UP): veth0: link is not ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_virt_wifi: link becomes ready
8021q: adding VLAN 0 to HW filter on device bond0
8021q: adding VLAN 0 to HW filter on device batadv0
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_virt_wifi: link becomes ready
IPv6: ADDRCONF(NETDEV_UP): team0: link is not ready
8021q: adding VLAN 0 to HW filter on device team0
IPv6: ADDRCONF(NETDEV_UP): veth0: link is not ready
IPv6: ADDRCONF(NETDEV_CHANGE): bridge_slave_0: link becomes ready
bridge0: port 1(bridge_slave_0) entered blocking state
bridge0: port 1(bridge_slave_0) entered forwarding state
IPv6: ADDRCONF(NETDEV_UP): team0: link is not ready
8021q: adding VLAN 0 to HW filter on device team0
IPv6: ADDRCONF(NETDEV_CHANGE): bridge0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): bridge_slave_1: link becomes ready
bridge0: port 2(bridge_slave_1) entered blocking state
bridge0: port 2(bridge_slave_1) entered forwarding state
IPv6: ADDRCONF(NETDEV_UP): veth0_virt_wifi: link is not ready
IPv6: ADDRCONF(NETDEV_UP): veth0_vlan: link is not ready
IPv6: ADDRCONF(NETDEV_UP): vlan0: link is not ready
IPv6: ADDRCONF(NETDEV_UP): vlan1: link is not ready
IPv6: ADDRCONF(NETDEV_CHANGE): bridge_slave_0: link becomes ready
bridge0: port 1(bridge_slave_0) entered blocking state
bridge0: port 1(bridge_slave_0) entered forwarding state
IPv6: ADDRCONF(NETDEV_CHANGE): bridge_slave_1: link becomes ready
bridge0: port 2(bridge_slave_1) entered blocking state
bridge0: port 2(bridge_slave_1) entered forwarding state
IPv6: ADDRCONF(NETDEV_CHANGE): team_slave_0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): bridge0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): team0: link becomes ready
IPv6: ADDRCONF(NETDEV_UP): veth0_vlan: link is not ready
IPv6: ADDRCONF(NETDEV_UP): vlan0: link is not ready
IPv6: ADDRCONF(NETDEV_UP): vlan1: link is not ready
IPv6: ADDRCONF(NETDEV_CHANGE): team_slave_0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_virt_wifi: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): team_slave_1: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_vlan: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): hsr_slave_0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): team0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): vlan0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): vlan1: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): team_slave_1: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): hsr_slave_0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): hsr_slave_1: link becomes ready
device veth0_vlan entered promiscuous mode
device veth0_vlan entered promiscuous mode
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_vlan: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): hsr_slave_1: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): vlan0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): vlan1: link becomes ready
device veth1_vlan entered promiscuous mode
IPv6: ADDRCONF(NETDEV_UP): veth0_virt_wifi: link is not ready
device veth1_vlan entered promiscuous mode
IPv6: ADDRCONF(NETDEV_UP): veth0_vlan: link is not ready
IPv6: ADDRCONF(NETDEV_UP): vlan0: link is not ready
IPv6: ADDRCONF(NETDEV_UP): vlan1: link is not ready
IPv6: ADDRCONF(NETDEV_UP): veth0_macvtap: link is not ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_virt_wifi: link becomes ready
device veth0_vlan entered promiscuous mode
IPv6: ADDRCONF(NETDEV_UP): veth0_macvtap: link is not ready
device veth0_macvtap entered promiscuous mode
IPv6: ADDRCONF(NETDEV_UP): macvtap0: link is not ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_vlan: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_macvtap: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): vlan0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): vlan1: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): macvtap0: link becomes ready
device veth0_macvtap entered promiscuous mode
IPv6: ADDRCONF(NETDEV_UP): macvtap0: link is not ready
device veth1_macvtap entered promiscuous mode
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_macvtap: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): macvtap0: link becomes ready
device veth1_macvtap entered promiscuous mode
device veth1_vlan entered promiscuous mode
IPv6: ADDRCONF(NETDEV_UP): veth0_to_batadv: link is not ready
IPv6: ADDRCONF(NETDEV_UP): veth0_to_batadv: link is not ready
IPv6: ADDRCONF(NETDEV_UP): veth0_macvtap: link is not ready
IPv6: ADDRCONF(NETDEV_UP): veth0_vlan: link is not ready
IPv6: ADDRCONF(NETDEV_UP): vlan0: link is not ready
IPv6: ADDRCONF(NETDEV_UP): vlan1: link is not ready
device veth0_vlan entered promiscuous mode
IPv6: ADDRCONF(NETDEV_UP): veth1_to_batadv: link is not ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_vlan: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_macvtap: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): vlan0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): vlan1: link becomes ready
IPv6: ADDRCONF(NETDEV_UP): veth1_to_batadv: link is not ready
device veth0_macvtap entered promiscuous mode
8021q: adding VLAN 0 to HW filter on device batadv0
batman_adv: batadv0: Interface activated: batadv_slave_0
device veth1_vlan entered promiscuous mode
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3d) already exists on: batadv_slave_0
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: batadv0: Interface activated: batadv_slave_0
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_to_batadv: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_to_batadv: link becomes ready
batman_adv: batadv0: Interface activated: batadv_slave_1
device veth1_macvtap entered promiscuous mode
8021q: adding VLAN 0 to HW filter on device batadv0
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3e) already exists on: batadv_slave_1
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: batadv0: Interface activated: batadv_slave_1
IPv6: ADDRCONF(NETDEV_CHANGE): veth1_to_batadv: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth1_to_batadv: link becomes ready
IPv6: ADDRCONF(NETDEV_UP): veth0_to_batadv: link is not ready
IPv6: ADDRCONF(NETDEV_UP): veth1_to_batadv: link is not ready
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3d) already exists on: batadv_slave_0
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3d) already exists on: batadv_slave_0
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: batadv0: Interface activated: batadv_slave_0
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3e) already exists on: batadv_slave_1
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3e) already exists on: batadv_slave_1
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: batadv0: Interface activated: batadv_slave_1
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_to_batadv: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth1_to_batadv: link becomes ready
IPv6: ADDRCONF(NETDEV_UP): veth0_macvtap: link is not ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_macvtap: link becomes ready
device veth0_macvtap entered promiscuous mode
device veth1_macvtap entered promiscuous mode
IPv6: ADDRCONF(NETDEV_UP): veth0_to_batadv: link is not ready
IPv6: ADDRCONF(NETDEV_UP): veth0_virt_wifi: link is not ready
IPv6: ADDRCONF(NETDEV_UP): veth1_to_batadv: link is not ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_virt_wifi: link becomes ready
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3d) already exists on: batadv_slave_0
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3d) already exists on: batadv_slave_0
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3d) already exists on: batadv_slave_0
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: batadv0: Interface activated: batadv_slave_0
IPv6: ADDRCONF(NETDEV_UP): veth0_virt_wifi: link is not ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_to_batadv: link becomes ready
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3e) already exists on: batadv_slave_1
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3e) already exists on: batadv_slave_1
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3e) already exists on: batadv_slave_1
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: batadv0: Interface activated: batadv_slave_1
IPv6: ADDRCONF(NETDEV_CHANGE): veth1_to_batadv: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_virt_wifi: link becomes ready
IPv6: ADDRCONF(NETDEV_UP): veth0_vlan: link is not ready
IPv6: ADDRCONF(NETDEV_UP): vlan0: link is not ready
IPv6: ADDRCONF(NETDEV_UP): vlan1: link is not ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_vlan: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): vlan0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): vlan1: link becomes ready
device veth0_vlan entered promiscuous mode
device veth1_vlan entered promiscuous mode
IPv6: ADDRCONF(NETDEV_UP): veth0_vlan: link is not ready
IPv6: ADDRCONF(NETDEV_UP): vlan0: link is not ready
IPv6: ADDRCONF(NETDEV_UP): vlan1: link is not ready
IPv6: ADDRCONF(NETDEV_UP): veth0_macvtap: link is not ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_macvtap: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_vlan: link becomes ready
device veth0_macvtap entered promiscuous mode
device veth1_macvtap entered promiscuous mode
IPv6: ADDRCONF(NETDEV_CHANGE): vlan0: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): vlan1: link becomes ready
device veth0_vlan entered promiscuous mode
IPv6: ADDRCONF(NETDEV_UP): veth0_to_batadv: link is not ready
IPv6: ADDRCONF(NETDEV_UP): veth1_to_batadv: link is not ready
device veth1_vlan entered promiscuous mode
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3d) already exists on: batadv_slave_0
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3d) already exists on: batadv_slave_0
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3d) already exists on: batadv_slave_0
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3d) already exists on: batadv_slave_0
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: batadv0: Interface activated: batadv_slave_0
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_to_batadv: link becomes ready
IPv6: ADDRCONF(NETDEV_UP): veth0_macvtap: link is not ready
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3e) already exists on: batadv_slave_1
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3e) already exists on: batadv_slave_1
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3e) already exists on: batadv_slave_1
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3e) already exists on: batadv_slave_1
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: batadv0: Interface activated: batadv_slave_1
IPv6: ADDRCONF(NETDEV_CHANGE): veth1_to_batadv: link becomes ready
device veth0_macvtap entered promiscuous mode
IPv6: ADDRCONF(NETDEV_UP): macvtap0: link is not ready
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_macvtap: link becomes ready
IPv6: ADDRCONF(NETDEV_CHANGE): macvtap0: link becomes ready
device veth1_macvtap entered promiscuous mode
IPv6: ADDRCONF(NETDEV_UP): veth0_to_batadv: link is not ready
IPv6: ADDRCONF(NETDEV_UP): veth1_to_batadv: link is not ready
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3d) already exists on: batadv_slave_0
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3d) already exists on: batadv_slave_0
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3d) already exists on: batadv_slave_0
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3d) already exists on: batadv_slave_0
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3d) already exists on: batadv_slave_0
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: batadv0: Interface activated: batadv_slave_0
IPv6: ADDRCONF(NETDEV_CHANGE): veth0_to_batadv: link becomes ready
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3e) already exists on: batadv_slave_1
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3e) already exists on: batadv_slave_1
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3e) already exists on: batadv_slave_1
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3e) already exists on: batadv_slave_1
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: The newly added mac address (aa:aa:aa:aa:aa:3e) already exists on: batadv_slave_1
batman_adv: It is strongly recommended to keep mac addresses unique to avoid problems!
batman_adv: batadv0: Interface activated: batadv_slave_1
IPv6: ADDRCONF(NETDEV_CHANGE): veth1_to_batadv: link becomes ready

