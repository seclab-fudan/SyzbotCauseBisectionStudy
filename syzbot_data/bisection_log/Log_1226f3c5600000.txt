bisecting cause commit starting from bb2aee77c82d7e7c08d4c78a4f65c703eef0fc60
building syzkaller on d8074e0bb985b9be6611e16b45b8657f20157a4b
testing commit bb2aee77c82d7e7c08d4c78a4f65c703eef0fc60 with gcc (GCC) 8.1.0
all runs: crashed: INFO: task hung in nbd_ioctl
testing release v5.3
testing commit 4d856f72c10ecb060868ed10ff1b1453943fc6c8 with gcc (GCC) 8.1.0
all runs: OK
# git bisect start bb2aee77c82d7e7c08d4c78a4f65c703eef0fc60 v5.3
Bisecting: 6679 revisions left to test after this (roughly 13 steps)
[81160dda9a7aad13c04e78bb2cfd3c4630e3afab] Merge git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net-next
testing commit 81160dda9a7aad13c04e78bb2cfd3c4630e3afab with gcc (GCC) 8.1.0
all runs: crashed: INFO: task hung in nbd_ioctl
# git bisect bad 81160dda9a7aad13c04e78bb2cfd3c4630e3afab
Bisecting: 3707 revisions left to test after this (roughly 12 steps)
[04cbfba6208592999d7bfe6609ec01dc3fde73f5] Merge tag 'dmaengine-5.4-rc1' of git://git.infradead.org/users/vkoul/slave-dma
testing commit 04cbfba6208592999d7bfe6609ec01dc3fde73f5 with gcc (GCC) 8.1.0
all runs: crashed: INFO: task hung in nbd_ioctl
# git bisect bad 04cbfba6208592999d7bfe6609ec01dc3fde73f5
Bisecting: 1775 revisions left to test after this (roughly 11 steps)
[772c1d06bd402f7ee72c61a18c2db74cd74b6758] Merge branch 'perf-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
testing commit 772c1d06bd402f7ee72c61a18c2db74cd74b6758 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 772c1d06bd402f7ee72c61a18c2db74cd74b6758
Bisecting: 995 revisions left to test after this (roughly 10 steps)
[ea982ba7f79141d86eb7a440fcba6796ed718b9b] Merge tag 'mmc-v5.4' of git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc
testing commit ea982ba7f79141d86eb7a440fcba6796ed718b9b with gcc (GCC) 8.1.0
all runs: crashed: INFO: task hung in nbd_ioctl
# git bisect bad ea982ba7f79141d86eb7a440fcba6796ed718b9b
Bisecting: 413 revisions left to test after this (roughly 9 steps)
[1e24aaabdee9e07f19b09bd305ffc069b0b07371] Merge tag 'for-linus' of git://github.com/openrisc/linux
testing commit 1e24aaabdee9e07f19b09bd305ffc069b0b07371 with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 1e24aaabdee9e07f19b09bd305ffc069b0b07371
Bisecting: 221 revisions left to test after this (roughly 8 steps)
[9c7eddf1b080f98fed1aadb74fe784f29bf77a08] null_blk: format pr_* logs with pr_fmt
testing commit 9c7eddf1b080f98fed1aadb74fe784f29bf77a08 with gcc (GCC) 8.1.0
all runs: crashed: INFO: task hung in nbd_ioctl
# git bisect bad 9c7eddf1b080f98fed1aadb74fe784f29bf77a08
Bisecting: 95 revisions left to test after this (roughly 7 steps)
[3bec2e3754becebd4c452999adb49bc62c575ea4] nvmet: fix data units read and written counters in SMART log
testing commit 3bec2e3754becebd4c452999adb49bc62c575ea4 with gcc (GCC) 8.1.0
all runs: crashed: INFO: task hung in nbd_ioctl
# git bisect bad 3bec2e3754becebd4c452999adb49bc62c575ea4
Bisecting: 47 revisions left to test after this (roughly 6 steps)
[00514677ed829efa2fc688ca60a72e52695529cc] nbd: add function to convert blk req op to nbd cmd
testing commit 00514677ed829efa2fc688ca60a72e52695529cc with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 00514677ed829efa2fc688ca60a72e52695529cc
Bisecting: 24 revisions left to test after this (roughly 5 steps)
[cecf5d87ff2035127bb5a9ee054d0023a4a7cad3] block: split .sysfs_lock into two locks
testing commit cecf5d87ff2035127bb5a9ee054d0023a4a7cad3 with gcc (GCC) 8.1.0
all runs: crashed: INFO: task hung in nbd_ioctl
# git bisect bad cecf5d87ff2035127bb5a9ee054d0023a4a7cad3
Bisecting: 11 revisions left to test after this (roughly 4 steps)
[fceb5d1b19cbe6263f09dbe8e8138edf02eb6e6b] null_blk: create a helper for zoned devices
testing commit fceb5d1b19cbe6263f09dbe8e8138edf02eb6e6b with gcc (GCC) 8.1.0
all runs: crashed: INFO: task hung in nbd_ioctl
# git bisect bad fceb5d1b19cbe6263f09dbe8e8138edf02eb6e6b
Bisecting: 5 revisions left to test after this (roughly 3 steps)
[384209cd5b93a926321fafe880ed05b1bca97260] block: create a bio_try_merge_pc_page helper
testing commit 384209cd5b93a926321fafe880ed05b1bca97260 with gcc (GCC) 8.1.0
all runs: crashed: INFO: task hung in nbd_ioctl
# git bisect bad 384209cd5b93a926321fafe880ed05b1bca97260
Bisecting: 2 revisions left to test after this (roughly 1 step)
[2da22da573481cc4837e246d0eee4d518b3f715e] nbd: fix zero cmd timeout handling v2
testing commit 2da22da573481cc4837e246d0eee4d518b3f715e with gcc (GCC) 8.1.0
all runs: OK
# git bisect good 2da22da573481cc4837e246d0eee4d518b3f715e
Bisecting: 0 revisions left to test after this (roughly 1 step)
[320ea869a12cec206756207c6ca5f817ec45c7f2] block: improve the gap check in __bio_add_pc_page
testing commit 320ea869a12cec206756207c6ca5f817ec45c7f2 with gcc (GCC) 8.1.0
all runs: crashed: INFO: task hung in nbd_ioctl
# git bisect bad 320ea869a12cec206756207c6ca5f817ec45c7f2
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[e9e006f5fcf2bab59149cb38a48a4817c1b538b4] nbd: fix max number of supported devs
testing commit e9e006f5fcf2bab59149cb38a48a4817c1b538b4 with gcc (GCC) 8.1.0
all runs: crashed: INFO: task hung in nbd_ioctl
# git bisect bad e9e006f5fcf2bab59149cb38a48a4817c1b538b4
e9e006f5fcf2bab59149cb38a48a4817c1b538b4 is the first bad commit
commit e9e006f5fcf2bab59149cb38a48a4817c1b538b4
Author: Mike Christie <mchristi@redhat.com>
Date:   Sun Aug 4 14:10:06 2019 -0500

    nbd: fix max number of supported devs
    
    This fixes a bug added in 4.10 with commit:
    
    commit 9561a7ade0c205bc2ee035a2ac880478dcc1a024
    Author: Josef Bacik <jbacik@fb.com>
    Date:   Tue Nov 22 14:04:40 2016 -0500
    
        nbd: add multi-connection support
    
    that limited the number of devices to 256. Before the patch we could
    create 1000s of devices, but the patch switched us from using our
    own thread to using a work queue which has a default limit of 256
    active works.
    
    The problem is that our recv_work function sits in a loop until
    disconnection but only handles IO for one connection. The work is
    started when the connection is started/restarted, but if we end up
    creating 257 or more connections, the queue_work call just queues
    connection257+'s recv_work and that waits for connection 1 - 256's
    recv_work to be disconnected and that work instance completing.
    
    Instead of reverting back to kthreads, this has us allocate a
    workqueue_struct per device, so we can block in the work.
    
    Cc: stable@vger.kernel.org
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Mike Christie <mchristi@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>

:040000 040000 0eac197fb018614660357ce45aa4772fe3b99e22 2c5b05fc04f4e3a25f86840bee0be13243eb31af M	drivers
revisions tested: 16, total time: 3h39m40.948528157s (build: 1h30m54.39241694s, test: 2h3m12.804606394s)
first bad commit: e9e006f5fcf2bab59149cb38a48a4817c1b538b4 nbd: fix max number of supported devs
cc: ["axboe@kernel.dk" "josef@toxicpanda.com" "linux-block@vger.kernel.org" "linux-kernel@vger.kernel.org" "mchristi@redhat.com" "nbd@other.debian.org"]
crash: INFO: task hung in nbd_ioctl
INFO: task syz-executor.2:8671 blocked for more than 143 seconds.
      Not tainted 5.3.0-rc3+ #0
"echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
syz-executor.2  D27760  8671   8648 0x00004004
Call Trace:
 context_switch kernel/sched/core.c:3254 [inline]
 __schedule+0x713/0x1520 kernel/sched/core.c:3880
 schedule+0x8f/0x260 kernel/sched/core.c:3944
 schedule_timeout+0x5c4/0xad0 kernel/time/timer.c:1783
 do_wait_for_common kernel/sched/completion.c:83 [inline]
 __wait_for_common kernel/sched/completion.c:104 [inline]
 wait_for_common kernel/sched/completion.c:115 [inline]
 wait_for_completion+0x28b/0x460 kernel/sched/completion.c:136
 flush_workqueue+0x35d/0x13c0 kernel/workqueue.c:2826
 nbd_start_device_ioctl drivers/block/nbd.c:1254 [inline]
 __nbd_ioctl drivers/block/nbd.c:1329 [inline]
 nbd_ioctl+0x975/0xb40 drivers/block/nbd.c:1369
 __blkdev_driver_ioctl block/ioctl.c:304 [inline]
 blkdev_ioctl+0x9aa/0x1840 block/ioctl.c:606
 block_ioctl+0xd7/0x130 fs/block_dev.c:1994
 vfs_ioctl fs/ioctl.c:46 [inline]
 file_ioctl fs/ioctl.c:509 [inline]
 do_vfs_ioctl+0x196/0x1150 fs/ioctl.c:696
 ksys_ioctl+0x62/0x90 fs/ioctl.c:713
 __do_sys_ioctl fs/ioctl.c:720 [inline]
 __se_sys_ioctl fs/ioctl.c:718 [inline]
 __x64_sys_ioctl+0x6e/0xb0 fs/ioctl.c:718
 do_syscall_64+0xd0/0x540 arch/x86/entry/common.c:296
 entry_SYSCALL_64_after_hwframe+0x49/0xbe
RIP: 0033:0x459a29
Code: fa ff 48 8b 44 24 10 48 8b 4c 24 30 48 8d 91 d0 10 00 00 48 89 14 24 48 89 44 24 08 48 c7 44 24 10 02 00 00 00 e8 57 d8 fa ff <48> 8b 44 24 18 48 8b 4c 24 30 48 81 c1 d8 10 00 00 48 89 0c 24 48
RSP: 002b:00007fcbcad83c78 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 0000000000459a29
RDX: 0000000000000000 RSI: 000000000000ab03 RDI: 0000000000000004
RBP: 000000000075bf20 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 00007fcbcad846d4
R13: 00000000004c333c R14: 00000000004d6c60 R15: 00000000ffffffff
INFO: task syz-executor.0:8682 blocked for more than 143 seconds.
      Not tainted 5.3.0-rc3+ #0
"echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
syz-executor.0  D27760  8682   8652 0x00004004
Call Trace:
 context_switch kernel/sched/core.c:3254 [inline]
 __schedule+0x713/0x1520 kernel/sched/core.c:3880
 schedule+0x8f/0x260 kernel/sched/core.c:3944
 schedule_timeout+0x5c4/0xad0 kernel/time/timer.c:1783
 do_wait_for_common kernel/sched/completion.c:83 [inline]
 __wait_for_common kernel/sched/completion.c:104 [inline]
 wait_for_common kernel/sched/completion.c:115 [inline]
 wait_for_completion+0x28b/0x460 kernel/sched/completion.c:136
 flush_workqueue+0x35d/0x13c0 kernel/workqueue.c:2826
 nbd_start_device_ioctl drivers/block/nbd.c:1254 [inline]
 __nbd_ioctl drivers/block/nbd.c:1329 [inline]
 nbd_ioctl+0x975/0xb40 drivers/block/nbd.c:1369
 __blkdev_driver_ioctl block/ioctl.c:304 [inline]
 blkdev_ioctl+0x9aa/0x1840 block/ioctl.c:606
 block_ioctl+0xd7/0x130 fs/block_dev.c:1994
 vfs_ioctl fs/ioctl.c:46 [inline]
 file_ioctl fs/ioctl.c:509 [inline]
 do_vfs_ioctl+0x196/0x1150 fs/ioctl.c:696
 ksys_ioctl+0x62/0x90 fs/ioctl.c:713
 __do_sys_ioctl fs/ioctl.c:720 [inline]
 __se_sys_ioctl fs/ioctl.c:718 [inline]
 __x64_sys_ioctl+0x6e/0xb0 fs/ioctl.c:718
 do_syscall_64+0xd0/0x540 arch/x86/entry/common.c:296
 entry_SYSCALL_64_after_hwframe+0x49/0xbe
RIP: 0033:0x459a29
Code: fa ff 48 8b 44 24 10 48 8b 4c 24 30 48 8d 91 d0 10 00 00 48 89 14 24 48 89 44 24 08 48 c7 44 24 10 02 00 00 00 e8 57 d8 fa ff <48> 8b 44 24 18 48 8b 4c 24 30 48 81 c1 d8 10 00 00 48 89 0c 24 48
RSP: 002b:00007f4a37daac78 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 0000000000459a29
RDX: 0000000000000000 RSI: 000000000000ab03 RDI: 0000000000000004
RBP: 000000000075bf20 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 00007f4a37dab6d4
R13: 00000000004c333c R14: 00000000004d6c60 R15: 00000000ffffffff
INFO: task syz-executor.3:8689 blocked for more than 144 seconds.
      Not tainted 5.3.0-rc3+ #0
"echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
syz-executor.3  D27760  8689   8654 0x00004004
Call Trace:
 context_switch kernel/sched/core.c:3254 [inline]
 __schedule+0x713/0x1520 kernel/sched/core.c:3880
 schedule+0x8f/0x260 kernel/sched/core.c:3944
 schedule_timeout+0x5c4/0xad0 kernel/time/timer.c:1783
 do_wait_for_common kernel/sched/completion.c:83 [inline]
 __wait_for_common kernel/sched/completion.c:104 [inline]
 wait_for_common kernel/sched/completion.c:115 [inline]
 wait_for_completion+0x28b/0x460 kernel/sched/completion.c:136
 flush_workqueue+0x35d/0x13c0 kernel/workqueue.c:2826
 nbd_start_device_ioctl drivers/block/nbd.c:1254 [inline]
 __nbd_ioctl drivers/block/nbd.c:1329 [inline]
 nbd_ioctl+0x975/0xb40 drivers/block/nbd.c:1369
 __blkdev_driver_ioctl block/ioctl.c:304 [inline]
 blkdev_ioctl+0x9aa/0x1840 block/ioctl.c:606
 block_ioctl+0xd7/0x130 fs/block_dev.c:1994
 vfs_ioctl fs/ioctl.c:46 [inline]
 file_ioctl fs/ioctl.c:509 [inline]
 do_vfs_ioctl+0x196/0x1150 fs/ioctl.c:696
 ksys_ioctl+0x62/0x90 fs/ioctl.c:713
 __do_sys_ioctl fs/ioctl.c:720 [inline]
 __se_sys_ioctl fs/ioctl.c:718 [inline]
 __x64_sys_ioctl+0x6e/0xb0 fs/ioctl.c:718
 do_syscall_64+0xd0/0x540 arch/x86/entry/common.c:296
 entry_SYSCALL_64_after_hwframe+0x49/0xbe
RIP: 0033:0x459a29
Code: fa ff 48 8b 44 24 10 48 8b 4c 24 30 48 8d 91 d0 10 00 00 48 89 14 24 48 89 44 24 08 48 c7 44 24 10 02 00 00 00 e8 57 d8 fa ff <48> 8b 44 24 18 48 8b 4c 24 30 48 81 c1 d8 10 00 00 48 89 0c 24 48
RSP: 002b:00007f1da422ac78 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 0000000000459a29
RDX: 0000000000000000 RSI: 000000000000ab03 RDI: 0000000000000004
RBP: 000000000075bf20 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 00007f1da422b6d4
R13: 00000000004c333c R14: 00000000004d6c60 R15: 00000000ffffffff
INFO: task syz-executor.4:8700 blocked for more than 144 seconds.
      Not tainted 5.3.0-rc3+ #0
"echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
syz-executor.4  D27760  8700   8651 0x00004004
Call Trace:
 context_switch kernel/sched/core.c:3254 [inline]
 __schedule+0x713/0x1520 kernel/sched/core.c:3880
 schedule+0x8f/0x260 kernel/sched/core.c:3944
 schedule_timeout+0x5c4/0xad0 kernel/time/timer.c:1783
 do_wait_for_common kernel/sched/completion.c:83 [inline]
 __wait_for_common kernel/sched/completion.c:104 [inline]
 wait_for_common kernel/sched/completion.c:115 [inline]
 wait_for_completion+0x28b/0x460 kernel/sched/completion.c:136
 flush_workqueue+0x35d/0x13c0 kernel/workqueue.c:2826
 nbd_start_device_ioctl drivers/block/nbd.c:1254 [inline]
 __nbd_ioctl drivers/block/nbd.c:1329 [inline]
 nbd_ioctl+0x975/0xb40 drivers/block/nbd.c:1369
 __blkdev_driver_ioctl block/ioctl.c:304 [inline]
 blkdev_ioctl+0x9aa/0x1840 block/ioctl.c:606
 block_ioctl+0xd7/0x130 fs/block_dev.c:1994
 vfs_ioctl fs/ioctl.c:46 [inline]
 file_ioctl fs/ioctl.c:509 [inline]
 do_vfs_ioctl+0x196/0x1150 fs/ioctl.c:696
 ksys_ioctl+0x62/0x90 fs/ioctl.c:713
 __do_sys_ioctl fs/ioctl.c:720 [inline]
 __se_sys_ioctl fs/ioctl.c:718 [inline]
 __x64_sys_ioctl+0x6e/0xb0 fs/ioctl.c:718
 do_syscall_64+0xd0/0x540 arch/x86/entry/common.c:296
 entry_SYSCALL_64_after_hwframe+0x49/0xbe
RIP: 0033:0x459a29
Code: fa ff 48 8b 44 24 10 48 8b 4c 24 30 48 8d 91 d0 10 00 00 48 89 14 24 48 89 44 24 08 48 c7 44 24 10 02 00 00 00 e8 57 d8 fa ff <48> 8b 44 24 18 48 8b 4c 24 30 48 81 c1 d8 10 00 00 48 89 0c 24 48
RSP: 002b:00007fe7de916c78 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 0000000000459a29
RDX: 0000000000000000 RSI: 000000000000ab03 RDI: 0000000000000004
RBP: 000000000075bf20 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 00007fe7de9176d4
R13: 00000000004c333c R14: 00000000004d6c60 R15: 00000000ffffffff
INFO: task syz-executor.5:8714 blocked for more than 144 seconds.
      Not tainted 5.3.0-rc3+ #0
"echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
syz-executor.5  D27760  8714   8655 0x00004004
Call Trace:
 context_switch kernel/sched/core.c:3254 [inline]
 __schedule+0x713/0x1520 kernel/sched/core.c:3880
 schedule+0x8f/0x260 kernel/sched/core.c:3944
 schedule_timeout+0x5c4/0xad0 kernel/time/timer.c:1783
 do_wait_for_common kernel/sched/completion.c:83 [inline]
 __wait_for_common kernel/sched/completion.c:104 [inline]
 wait_for_common kernel/sched/completion.c:115 [inline]
 wait_for_completion+0x28b/0x460 kernel/sched/completion.c:136
 flush_workqueue+0x35d/0x13c0 kernel/workqueue.c:2826
 nbd_start_device_ioctl drivers/block/nbd.c:1254 [inline]
 __nbd_ioctl drivers/block/nbd.c:1329 [inline]
 nbd_ioctl+0x975/0xb40 drivers/block/nbd.c:1369
 __blkdev_driver_ioctl block/ioctl.c:304 [inline]
 blkdev_ioctl+0x9aa/0x1840 block/ioctl.c:606
 block_ioctl+0xd7/0x130 fs/block_dev.c:1994
 vfs_ioctl fs/ioctl.c:46 [inline]
 file_ioctl fs/ioctl.c:509 [inline]
 do_vfs_ioctl+0x196/0x1150 fs/ioctl.c:696
 ksys_ioctl+0x62/0x90 fs/ioctl.c:713
 __do_sys_ioctl fs/ioctl.c:720 [inline]
 __se_sys_ioctl fs/ioctl.c:718 [inline]
 __x64_sys_ioctl+0x6e/0xb0 fs/ioctl.c:718
 do_syscall_64+0xd0/0x540 arch/x86/entry/common.c:296
 entry_SYSCALL_64_after_hwframe+0x49/0xbe
RIP: 0033:0x459a29
Code: fa ff 48 8b 44 24 10 48 8b 4c 24 30 48 8d 91 d0 10 00 00 48 89 14 24 48 89 44 24 08 48 c7 44 24 10 02 00 00 00 e8 57 d8 fa ff <48> 8b 44 24 18 48 8b 4c 24 30 48 81 c1 d8 10 00 00 48 89 0c 24 48
RSP: 002b:00007f1a7f3bdc78 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 0000000000459a29
RDX: 0000000000000000 RSI: 000000000000ab03 RDI: 0000000000000004
RBP: 000000000075bf20 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 00007f1a7f3be6d4
R13: 00000000004c333c R14: 00000000004d6c60 R15: 00000000ffffffff
INFO: task syz-executor.1:8717 blocked for more than 145 seconds.
      Not tainted 5.3.0-rc3+ #0
"echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
syz-executor.1  D27760  8717   8646 0x00004004
Call Trace:
 context_switch kernel/sched/core.c:3254 [inline]
 __schedule+0x713/0x1520 kernel/sched/core.c:3880
 schedule+0x8f/0x260 kernel/sched/core.c:3944
 schedule_timeout+0x5c4/0xad0 kernel/time/timer.c:1783
 do_wait_for_common kernel/sched/completion.c:83 [inline]
 __wait_for_common kernel/sched/completion.c:104 [inline]
 wait_for_common kernel/sched/completion.c:115 [inline]
 wait_for_completion+0x28b/0x460 kernel/sched/completion.c:136
 flush_workqueue+0x35d/0x13c0 kernel/workqueue.c:2826
 nbd_start_device_ioctl drivers/block/nbd.c:1254 [inline]
 __nbd_ioctl drivers/block/nbd.c:1329 [inline]
 nbd_ioctl+0x975/0xb40 drivers/block/nbd.c:1369
 __blkdev_driver_ioctl block/ioctl.c:304 [inline]
 blkdev_ioctl+0x9aa/0x1840 block/ioctl.c:606
 block_ioctl+0xd7/0x130 fs/block_dev.c:1994
 vfs_ioctl fs/ioctl.c:46 [inline]
 file_ioctl fs/ioctl.c:509 [inline]
 do_vfs_ioctl+0x196/0x1150 fs/ioctl.c:696
 ksys_ioctl+0x62/0x90 fs/ioctl.c:713
 __do_sys_ioctl fs/ioctl.c:720 [inline]
 __se_sys_ioctl fs/ioctl.c:718 [inline]
 __x64_sys_ioctl+0x6e/0xb0 fs/ioctl.c:718
 do_syscall_64+0xd0/0x540 arch/x86/entry/common.c:296
 entry_SYSCALL_64_after_hwframe+0x49/0xbe
RIP: 0033:0x459a29
Code: fa ff 48 8b 44 24 10 48 8b 4c 24 30 48 8d 91 d0 10 00 00 48 89 14 24 48 89 44 24 08 48 c7 44 24 10 02 00 00 00 e8 57 d8 fa ff <48> 8b 44 24 18 48 8b 4c 24 30 48 81 c1 d8 10 00 00 48 89 0c 24 48
RSP: 002b:00007f1c75883c78 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 0000000000459a29
RDX: 0000000000000000 RSI: 000000000000ab03 RDI: 0000000000000004
RBP: 000000000075bf20 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 00007f1c758846d4
R13: 00000000004c333c R14: 00000000004d6c60 R15: 00000000ffffffff
INFO: lockdep is turned off.
NMI backtrace for cpu 1
CPU: 1 PID: 1056 Comm: khungtaskd Not tainted 5.3.0-rc3+ #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Call Trace:
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x113/0x167 lib/dump_stack.c:113
 nmi_cpu_backtrace.cold.7+0x4b/0x84 lib/nmi_backtrace.c:101
 nmi_trigger_cpumask_backtrace+0x18b/0x1b7 lib/nmi_backtrace.c:62
 arch_trigger_cpumask_backtrace+0x14/0x20 arch/x86/kernel/apic/hw_nmi.c:38
 trigger_all_cpu_backtrace include/linux/nmi.h:146 [inline]
 check_hung_uninterruptible_tasks kernel/hung_task.c:205 [inline]
 watchdog+0x592/0xb60 kernel/hung_task.c:289
 kthread+0x331/0x3f0 kernel/kthread.c:255
 ret_from_fork+0x24/0x30 arch/x86/entry/entry_64.S:352
Sending NMI from CPU 1 to CPUs 0:
NMI backtrace for cpu 0 skipped: idling at native_safe_halt+0x12/0x20 arch/x86/include/asm/irqflags.h:60

