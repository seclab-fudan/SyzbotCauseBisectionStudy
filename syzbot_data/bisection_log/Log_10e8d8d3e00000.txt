bisecting cause commit starting from fb33c6510d5595144d585aa194d377cf74d31911
building syzkaller on 749688d22abef3f3cb9a0480e15c19a3f2ed8e13
testing commit fb33c6510d5595144d585aa194d377cf74d31911 with gcc (GCC) 8.1.0
kernel signature: ebc9988d893314933fbc5350e2418f2a960fc4a72ab29c0739ad4386210817b9
all runs: crashed: KASAN: null-ptr-deref Write in get_block
testing release v5.5
testing commit d5226fa6dbae0569ee43ecfc08bdcd6770fc4755 with gcc (GCC) 8.1.0
kernel signature: e5e80daa082a8a95db7bf064c47fa8108268607e072b69701c521999842b5778
all runs: crashed: KASAN: null-ptr-deref Write in get_block
testing release v5.4
testing commit 219d54332a09e8d8741c1e1982f5eae56099de85 with gcc (GCC) 8.1.0
kernel signature: 258be1532985ee51b99b0398212cb343a994886f54bf675508cfb1895a10ab4c
all runs: crashed: KASAN: null-ptr-deref Write in get_block
testing release v5.3
testing commit 4d856f72c10ecb060868ed10ff1b1453943fc6c8 with gcc (GCC) 8.1.0
kernel signature: b1726bb5258afc4ca4d31e237a65b3234672f909b8062ca7c70018b4e4b9b940
all runs: crashed: KASAN: null-ptr-deref Write in get_block
testing release v5.2
testing commit 0ecfebd2b52404ae0c54a878c872bb93363ada36 with gcc (GCC) 8.1.0
kernel signature: bf33cfdb91a478ab6f5065e76fb9e714b8140c7ecb8a56cd927958a6469aefa7
all runs: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
testing release v5.1
testing commit e93c9c99a629c61837d5a7fc2120cd2b6c70dbdd with gcc (GCC) 8.1.0
kernel signature: f123fdcead5bdb6eaf93ef43f68a4f4c1acc9b19dd803b2e56a83b7893b67c08
all runs: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
testing release v5.0
testing commit 1c163f4c7b3f621efff9b28a47abb36f7378d783 with gcc (GCC) 8.1.0
kernel signature: d12cef915af98ac200f577ac1b44aeb0665796866412a7819b98e23e104ee9a1
run #0: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #1: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #2: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #3: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #4: crashed: BUG: unable to handle kernel NULL pointer dereference in corrupted
run #5: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #6: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #7: crashed: BUG: unable to handle kernel NULL pointer dereference in corrupted
run #8: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #9: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
testing release v4.20
testing commit 8fe28cb58bcb235034b64cbbb7550a8a43fd88be with gcc (GCC) 8.1.0
kernel signature: e23108e632acc7a8476515411028d1c89593cd0cc52f3b602db6dab757506020
run #0: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #1: crashed: BUG: unable to handle kernel NULL pointer dereference in corrupted
run #2: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #3: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #4: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #5: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #6: crashed: BUG: unable to handle kernel NULL pointer dereference in corrupted
run #7: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #8: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #9: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
testing release v4.19
testing commit 84df9525b0c27f3ebc2ebb1864fa62a97fdedb7d with gcc (GCC) 8.1.0
kernel signature: 99d6a1cce2019d60bcbdcd2d40bf7c531356008cbfc465dfad875f1beecf4d5b
all runs: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
testing release v4.18
testing commit 94710cac0ef4ee177a63b5227664b38c95bbf703 with gcc (GCC) 8.1.0
kernel signature: 30f94c780ecddb55f901f14abb683bb65dc727e0c4cdfe5a286680b73ade327c
all runs: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
testing release v4.17
testing commit 29dcea88779c856c7dc92040a0c01233263101d4 with gcc (GCC) 8.1.0
kernel signature: eccc04f713a13454a2b5df3247cff0b6f248983fd1648c0242f92ca31e62e137
all runs: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
testing release v4.16
testing commit 0adb32858b0bddf4ada5f364a84ed60b196dbcda with gcc (GCC) 8.1.0
kernel signature: 680a5d47b1228063a119272a65616292d99a3772afd782d390bdf607344c84d2
all runs: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
testing release v4.15
testing commit d8a5b80568a9cb66810e75b182018e9edb68e8ff with gcc (GCC) 8.1.0
kernel signature: dfdb34ba267b0c2800e8c67f353821fd726eea1087635777f7515f5a211b5321
all runs: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
testing release v4.14
testing commit bebc6082da0a9f5d47a1ea2edc099bf671058bd4 with gcc (GCC) 8.1.0
kernel signature: 1940df7e260d48cde9ba35a784c57a7ae120d068870247536373fa188d4ab094
run #0: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #1: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #2: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #3: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #4: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #5: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #6: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #7: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
run #8: OK
run #9: OK
testing release v4.13
testing commit 569dbb88e80deb68974ef6fdd6a13edb9d686261 with gcc (GCC) 8.1.0
kernel signature: 81f50dd735bce8fb70d0b701f692f92f2a22f8902c938dcf24b5722d1fdaee8c
all runs: crashed: BUG: unable to handle kernel NULL pointer dereference in get_block
testing release v4.12
testing commit 6f7da290413ba713f0cdd9ff1a2a9bb129ef4f6c with gcc (GCC) 8.1.0
kernel signature: 1574fed99ad8906ff9460bb3611d9f5cf12c9b1a9f09531b938d77eb6d3330e5
all runs: crashed: BUG: sleeping function called from invalid context in tap_get_minor
testing release v4.11
testing commit a351e9b9fc24e982ec2f0e76379a49826036da12 with gcc (GCC) 7.3.0
kernel signature: 46f76cf1932d0eeced1b3a7d16c9fa3424a6659ee50ee3c016c85dc64107ad64
all runs: crashed: BUG: sleeping function called from invalid context in tap_get_minor
testing release v4.10
testing commit c470abd4fde40ea6a0846a2beab642a578c0b8cd with gcc (GCC) 5.5.0
kernel signature: 297b545f3db8d447981c5529a01abc6df2e7980f0192178c58d280a3a2640a41
all runs: crashed: BUG: unable to handle kernel NULL pointer dereference in V1_minix_get_block
testing release v4.9
testing commit 69973b830859bc6529a7a0468ba0d80ee5117826 with gcc (GCC) 5.5.0
kernel signature: 9950cd7c1a11b26f4e7ac79e1b872f61a909d612c7cffe8dbf8e0c9eb903326c
all runs: crashed: BUG: unable to handle kernel NULL pointer dereference in V1_minix_get_block
testing release v4.8
testing commit c8d2bc9bc39ebea8437fd974fdbc21847bb897a3 with gcc (GCC) 5.5.0
kernel signature: 759307cb510f0e947db23654fb86451b21f588b724cea41503c24ab2324b026c
all runs: crashed: BUG: unable to handle kernel NULL pointer dereference in V1_minix_get_block
testing release v4.7
testing commit 523d939ef98fd712632d93a5a2b588e477a7565e with gcc (GCC) 5.5.0
kernel signature: 1cfe2100aeee89107c489764d6385541f1049274ae5aa03f5122adbdf5e6a353
all runs: crashed: BUG: unable to handle kernel NULL pointer dereference in V1_minix_get_block
testing release v4.6
testing commit 2dcd0af568b0cf583645c8a317dd12e344b1c72a with gcc (GCC) 5.5.0
kernel signature: 32ef582933bd2bd5f127678bc7af41ccd8877c49cbdbbd66d4ae742582b7904e
all runs: crashed: WARNING in sysfs_warn_dup
revisions tested: 22, total time: 3h47m49.016060392s (build: 1h58m1.893487678s, test: 1h47m26.03208097s)
the crash already happened on the oldest tested release
commit msg: Linux 4.6
crash: WARNING in sysfs_warn_dup
bridge0: port 2(bridge_slave_1) entered blocking state
bridge0: port 2(bridge_slave_1) entered disabled state
device bridge_slave_1 entered promiscuous mode
IPv6: ADDRCONF(NETDEV_UP): hsr_slave_0: link is not ready
------------[ cut here ]------------
WARNING: CPU: 0 PID: 7525 at fs/sysfs/dir.c:31 sysfs_warn_dup+0x7b/0xa0 fs/sysfs/dir.c:30
sysfs: cannot create duplicate filename '/class/macvtap/tap50'
Kernel panic - not syncing: panic_on_warn set ...

CPU: 0 PID: 7525 Comm: syz-executor.0 Not tainted 4.6.0-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
 1ffffffff0d95756 ffff880129c4efb0 ffffffff82c74fc6 ffffffff85c81040
 ffff880129c4f088 ffffffff85d2bac0 ffffffff81922ccb ffff880129c4f078
 ffffffff8160cf4e 0000000041b58ab3 ffffffff868f1f61 ffffffff8160cd9f
Call Trace:
 [<ffffffff82c74fc6>] __dump_stack lib/dump_stack.c:15 [inline]
 [<ffffffff82c74fc6>] dump_stack+0xe6/0x120 lib/dump_stack.c:51
 [<ffffffff8160cf4e>] panic+0x1af/0x348 kernel/panic.c:152
 [<ffffffff8133960d>] __warn+0x18d/0x1b0 kernel/panic.c:504
 [<ffffffff813396c2>] warn_slowpath_fmt+0x92/0xb0 kernel/panic.c:527
 [<ffffffff81922ccb>] sysfs_warn_dup+0x7b/0xa0 fs/sysfs/dir.c:30
 [<ffffffff81923561>] sysfs_do_create_link_sd.isra.2+0xd1/0xf0 fs/sysfs/symlink.c:51
 [<ffffffff819235c3>] sysfs_do_create_link fs/sysfs/symlink.c:80 [inline]
 [<ffffffff819235c3>] sysfs_create_link+0x43/0xb0 fs/sysfs/symlink.c:92
 [<ffffffff83547c79>] device_add_class_symlinks drivers/base/core.c:891 [inline]
 [<ffffffff83547c79>] device_add+0x689/0x1360 drivers/base/core.c:1086
 [<ffffffff83548cb8>] device_create_groups_vargs+0x1c8/0x220 drivers/base/core.c:1709
 [<ffffffff83548db8>] device_create_vargs drivers/base/core.c:1749 [inline]
 [<ffffffff83548db8>] device_create+0x88/0xa0 drivers/base/core.c:1785
 [<ffffffff838e6c74>] macvtap_device_event+0x1c4/0x2a0 drivers/net/macvtap.c:1298
 [<ffffffff8139f90b>] notifier_call_chain+0x8b/0x170 kernel/notifier.c:93
 [<ffffffff8139fa11>] __raw_notifier_call_chain kernel/notifier.c:394 [inline]
 [<ffffffff8139fa11>] raw_notifier_call_chain+0x11/0x20 kernel/notifier.c:401
 [<ffffffff84941897>] call_netdevice_notifiers_info+0x47/0x80 net/core/dev.c:1643
 [<ffffffff849675ea>] call_netdevice_notifiers net/core/dev.c:1659 [inline]
 [<ffffffff849675ea>] register_netdevice+0x88a/0xce0 net/core/dev.c:7027
 [<ffffffff838df9c9>] macvlan_common_newlink+0x8b9/0x1090 drivers/net/macvlan.c:1316
 [<ffffffff838e582f>] macvtap_newlink+0xbf/0x110 drivers/net/macvtap.c:471
 [<ffffffff8499494b>] rtnl_newlink+0xd4b/0x1230 net/core/rtnetlink.c:2466
 [<ffffffff8498fcf2>] rtnetlink_rcv_msg+0x222/0x680 net/core/rtnetlink.c:3513
 [<ffffffff84b198d2>] netlink_rcv_skb+0x242/0x350 net/netlink/af_netlink.c:2277
 [<ffffffff8498fac5>] rtnetlink_rcv+0x25/0x30 net/core/rtnetlink.c:3519
 [<ffffffff84b184d5>] netlink_unicast_kernel net/netlink/af_netlink.c:1214 [inline]
 [<ffffffff84b184d5>] netlink_unicast+0x455/0x660 net/netlink/af_netlink.c:1240
 [<ffffffff84b18f73>] netlink_sendmsg+0x893/0xb40 net/netlink/af_netlink.c:1786
 [<ffffffff848f1815>] sock_sendmsg_nosec net/socket.c:612 [inline]
 [<ffffffff848f1815>] sock_sendmsg+0xb5/0xf0 net/socket.c:622
 [<ffffffff848f27e9>] SYSC_sendto+0x1c9/0x300 net/socket.c:1648
 [<ffffffff848f4ad9>] SyS_sendto+0x9/0x10 net/socket.c:1616
 [<ffffffff85b9b640>] entry_SYSCALL_64_fastpath+0x23/0xc1
Kernel Offset: disabled

