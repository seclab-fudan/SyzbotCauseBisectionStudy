bisecting cause commit starting from 4e78c578cb987725eef1cec7d11b6437109e9a49
building syzkaller on 8bc4594f832068a30c0eff44d468311780057d1f
testing commit 4e78c578cb987725eef1cec7d11b6437109e9a49 with gcc (GCC) 8.1.0
kernel signature: 739f818d39665bd64d08a81f674031b693e454e109b1076875680b54bd71e1fb
all runs: crashed: possible deadlock in do_fcntl
testing release v5.9
testing commit bbf5c979011a099af5dc76498918ed7df445635b with gcc (GCC) 8.1.0
kernel signature: 934f0a134532bbbd345c7e8b605e59600f755e76ac937b8aa8fb348b839f419b
all runs: OK
# git bisect start 4e78c578cb987725eef1cec7d11b6437109e9a49 bbf5c979011a099af5dc76498918ed7df445635b
Bisecting: 9369 revisions left to test after this (roughly 13 steps)
[4d0e9df5e43dba52d38b251e3b909df8fa1110be] lib, uaccess: add failure injection to usercopy functions
testing commit 4d0e9df5e43dba52d38b251e3b909df8fa1110be with gcc (GCC) 8.1.0
kernel signature: f516cdde94a64662621805b57d241f61efba079163a3e86b24d39afe19b15a4c
all runs: crashed: possible deadlock in do_fcntl
# git bisect bad 4d0e9df5e43dba52d38b251e3b909df8fa1110be
Bisecting: 3935 revisions left to test after this (roughly 12 steps)
[f888bdf9823c85fe945c4eb3ba353f749dec3856] Merge tag 'devicetree-for-5.10' of git://git.kernel.org/pub/scm/linux/kernel/git/robh/linux
testing commit f888bdf9823c85fe945c4eb3ba353f749dec3856 with gcc (GCC) 8.1.0
kernel signature: a41270ebc1c7fc37844ceec11916736f39fc2437ad244f6a699031102a9084bc
all runs: crashed: possible deadlock in do_fcntl
# git bisect bad f888bdf9823c85fe945c4eb3ba353f749dec3856
Bisecting: 1997 revisions left to test after this (roughly 11 steps)
[57218d7f2e87069f73c7a841b6ed6c1cc7acf616] Merge tag 'regmap-v5.10' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regmap
testing commit 57218d7f2e87069f73c7a841b6ed6c1cc7acf616 with gcc (GCC) 8.1.0
kernel signature: 62e98e4e62a1e7bd6ee42da29b9ec8477ae70fe2436eee69577390a9b755f777
all runs: crashed: possible deadlock in do_fcntl
# git bisect bad 57218d7f2e87069f73c7a841b6ed6c1cc7acf616
Bisecting: 873 revisions left to test after this (roughly 10 steps)
[39a5101f989e8d2be557136704d53990f9b402c8] Merge branch 'linus' of git://git.kernel.org/pub/scm/linux/kernel/git/herbert/crypto-2.6
testing commit 39a5101f989e8d2be557136704d53990f9b402c8 with gcc (GCC) 8.1.0
kernel signature: 1374962090f587a10cecb0565e38d1a079378f2e8c2af9ca1a031b2d410ba858
all runs: crashed: possible deadlock in do_fcntl
# git bisect bad 39a5101f989e8d2be557136704d53990f9b402c8
Bisecting: 521 revisions left to test after this (roughly 9 steps)
[ed016af52ee3035b4799ebd7d53f9ae59d5782c4] Merge tag 'locking-core-2020-10-12' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
testing commit ed016af52ee3035b4799ebd7d53f9ae59d5782c4 with gcc (GCC) 8.1.0
kernel signature: 1090f57acd6737d3b74032dd7a1a6456ff204198b54c0fd5f3e07b0a5fca98f9
all runs: crashed: possible deadlock in do_fcntl
# git bisect bad ed016af52ee3035b4799ebd7d53f9ae59d5782c4
Bisecting: 274 revisions left to test after this (roughly 8 steps)
[f94ab231136c53ee26b1ddda76b29218018834ff] Merge tag 'x86_cleanups_for_v5.10' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
testing commit f94ab231136c53ee26b1ddda76b29218018834ff with gcc (GCC) 8.1.0
kernel signature: db4c7ab135c53cd863aa4dba5a4b1ad3136654063805cff0d39dd16e4e2e1650
all runs: OK
# git bisect good f94ab231136c53ee26b1ddda76b29218018834ff
Bisecting: 125 revisions left to test after this (roughly 7 steps)
[cc7343724eb77ce0752b1097a275f22f6fe47057] Merge tag 'x86-irq-2020-10-12' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
testing commit cc7343724eb77ce0752b1097a275f22f6fe47057 with gcc (GCC) 8.1.0
kernel signature: 996bdd9dd0e614858c9a5c565597521b1a54f6447c4f6740b87534fa8b36161f
all runs: OK
# git bisect good cc7343724eb77ce0752b1097a275f22f6fe47057
Bisecting: 61 revisions left to test after this (roughly 6 steps)
[d6c4c11348816fb4d16e33bf47d559d7aa59350a] Merge branch 'kcsan' of git://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu into locking/core
testing commit d6c4c11348816fb4d16e33bf47d559d7aa59350a with gcc (GCC) 8.1.0
kernel signature: f6216a9c1e050e4946f60dd097fcdd9cdfb14ca4d43a713adaf15bc12d43ed93
all runs: crashed: possible deadlock in do_fcntl
# git bisect bad d6c4c11348816fb4d16e33bf47d559d7aa59350a
Bisecting: 31 revisions left to test after this (roughly 5 steps)
[6dd699b13d53f26a7603702d8bada3482312df74] seqlock: seqcount_LOCKNAME_t: Standardize naming convention
testing commit 6dd699b13d53f26a7603702d8bada3482312df74 with gcc (GCC) 8.1.0
kernel signature: 3c2d11c8ba005ac47133d69aedf713c80485c30fd883f805ac591db2f5d70f4a
all runs: crashed: possible deadlock in do_fcntl
# git bisect bad 6dd699b13d53f26a7603702d8bada3482312df74
Bisecting: 15 revisions left to test after this (roughly 4 steps)
[621c9dac0eea7607cb9a57cc9ba47fbcd4e644c9] lockdep: Add recursive read locks into dependency graph
testing commit 621c9dac0eea7607cb9a57cc9ba47fbcd4e644c9 with gcc (GCC) 8.1.0
kernel signature: 2357a0d5e6ec0a1aa85004bd9d2f14e0dc0185ff005c4cb68bcaa5c63bb2e4b3
all runs: crashed: possible deadlock in do_fcntl
# git bisect bad 621c9dac0eea7607cb9a57cc9ba47fbcd4e644c9
Bisecting: 7 revisions left to test after this (roughly 3 steps)
[d563bc6ead9e79be37067d58509a605b67378184] lockdep: Make __bfs() visit every dependency until a match
testing commit d563bc6ead9e79be37067d58509a605b67378184 with gcc (GCC) 8.1.0
kernel signature: 81cea1bd102c682f01caf4e4e748e204d008934a737fcfa3bca0204d87c0d0d9
all runs: crashed: possible deadlock in do_fcntl
# git bisect bad d563bc6ead9e79be37067d58509a605b67378184
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[92b4e9f11a636d1723cc0866bf8b9111b1e24339] Documentation/locking/locktypes: Fix local_locks documentation
testing commit 92b4e9f11a636d1723cc0866bf8b9111b1e24339 with gcc (GCC) 8.1.0
kernel signature: 4c8fc504e56c2ad2b2856da9628c3f663b061f4dbdecf72c32596665385cab4e
all runs: OK
# git bisect good 92b4e9f11a636d1723cc0866bf8b9111b1e24339
Bisecting: 1 revision left to test after this (roughly 1 step)
[224ec489d3cdb0af6794e257eeee39d98dc9c5b2] lockdep/Documention: Recursive read lock detection reasoning
testing commit 224ec489d3cdb0af6794e257eeee39d98dc9c5b2 with gcc (GCC) 8.1.0
kernel signature: 9f9268efaebaf6fda2578f2ad9599e0825b920284efce893ce4b22a9ac086d1d
all runs: crashed: possible deadlock in do_fcntl
# git bisect bad 224ec489d3cdb0af6794e257eeee39d98dc9c5b2
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[e918188611f073063415f40fae568fa4d86d9044] locking: More accurate annotations for read_lock()
testing commit e918188611f073063415f40fae568fa4d86d9044 with gcc (GCC) 8.1.0
kernel signature: 9f9268efaebaf6fda2578f2ad9599e0825b920284efce893ce4b22a9ac086d1d
all runs: crashed: possible deadlock in do_fcntl
# git bisect bad e918188611f073063415f40fae568fa4d86d9044
e918188611f073063415f40fae568fa4d86d9044 is the first bad commit
commit e918188611f073063415f40fae568fa4d86d9044
Author: Boqun Feng <boqun.feng@gmail.com>
Date:   Fri Aug 7 15:42:20 2020 +0800

    locking: More accurate annotations for read_lock()
    
    On the archs using QUEUED_RWLOCKS, read_lock() is not always a recursive
    read lock, actually it's only recursive if in_interrupt() is true. So
    change the annotation accordingly to catch more deadlocks.
    
    Note we used to treat read_lock() as pure recursive read locks in
    lib/locking-seftest.c, and this is useful, especially for the lockdep
    development selftest, so we keep this via a variable to force switching
    lock annotation for read_lock().
    
    Signed-off-by: Boqun Feng <boqun.feng@gmail.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20200807074238.1632519-2-boqun.feng@gmail.com

 include/linux/lockdep.h  | 23 ++++++++++++++++++++++-
 kernel/locking/lockdep.c | 14 ++++++++++++++
 lib/locking-selftest.c   | 11 +++++++++++
 3 files changed, 47 insertions(+), 1 deletion(-)
culprit signature: 9f9268efaebaf6fda2578f2ad9599e0825b920284efce893ce4b22a9ac086d1d
parent  signature: 4c8fc504e56c2ad2b2856da9628c3f663b061f4dbdecf72c32596665385cab4e
revisions tested: 16, total time: 2h33m48.518977955s (build: 1h17m36.128380174s, test: 1h14m40.516479506s)
first bad commit: e918188611f073063415f40fae568fa4d86d9044 locking: More accurate annotations for read_lock()
recipients (to): ["boqun.feng@gmail.com" "linux-kernel@vger.kernel.org" "mingo@redhat.com" "peterz@infradead.org" "peterz@infradead.org" "will@kernel.org"]
recipients (cc): []
crash: possible deadlock in do_fcntl
========================================================
WARNING: possible irq lock inversion dependency detected
5.9.0-rc2-syzkaller #0 Not tainted
--------------------------------------------------------
syz-executor.1/10183 just changed the state of lock:
ffff88812f4cdf38 (&f->f_owner.lock){.+..}-{2:2}, at: f_getown_ex fs/fcntl.c:206 [inline]
ffff88812f4cdf38 (&f->f_owner.lock){.+..}-{2:2}, at: do_fcntl+0x5bb/0x780 fs/fcntl.c:387
but this lock was taken by another, HARDIRQ-safe lock in the past:
 (&dev->event_lock){-...}-{2:2}


and interrupts could create inverse lock ordering between them.


other info that might help us debug this:
Chain exists of:
  &dev->event_lock --> &new->fa_lock --> &f->f_owner.lock

 Possible interrupt unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(&f->f_owner.lock);
                               local_irq_disable();
                               lock(&dev->event_lock);
                               lock(&new->fa_lock);
  <Interrupt>
    lock(&dev->event_lock);

 *** DEADLOCK ***

no locks held by syz-executor.1/10183.

the shortest dependencies between 2nd lock and 1st lock:
   -> (&dev->event_lock){-...}-{2:2} {
      IN-HARDIRQ-W at:
                          lock_acquire+0xb0/0x3a0 kernel/locking/lockdep.c:5020
                          __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:110 [inline]
                          _raw_spin_lock_irqsave+0x33/0x50 kernel/locking/spinlock.c:159
                          input_event+0x33/0x70 drivers/input/input.c:440
                          input_report_key include/linux/input.h:417 [inline]
                          psmouse_report_standard_buttons+0x1b/0x50 drivers/input/mouse/psmouse-base.c:123
                          psmouse_report_standard_packet drivers/input/mouse/psmouse-base.c:141 [inline]
                          psmouse_process_byte+0x70/0x260 drivers/input/mouse/psmouse-base.c:232
                          psmouse_handle_byte+0xa/0x50 drivers/input/mouse/psmouse-base.c:274
                          psmouse_interrupt+0xc5/0x3f0 drivers/input/mouse/psmouse-base.c:426
                          serio_interrupt+0x3b/0x80 drivers/input/serio/serio.c:1002
                          i8042_interrupt+0x153/0x280 drivers/input/serio/i8042.c:598
                          __handle_irq_event_percpu+0x3c/0x320 kernel/irq/handle.c:156
                          handle_irq_event_percpu+0x2b/0x70 kernel/irq/handle.c:196
                          handle_irq_event+0x2f/0x4c kernel/irq/handle.c:213
                          handle_edge_irq+0x8f/0x1b0 kernel/irq/chip.c:819
                          asm_call_on_stack+0xf/0x20 arch/x86/entry/entry_64.S:706
                          __run_on_irqstack arch/x86/include/asm/irq_stack.h:22 [inline]
                          run_on_irqstack_cond arch/x86/include/asm/irq_stack.h:48 [inline]
                          handle_irq arch/x86/kernel/irq.c:230 [inline]
                          __common_interrupt arch/x86/kernel/irq.c:249 [inline]
                          common_interrupt+0x159/0x220 arch/x86/kernel/irq.c:239
                          asm_common_interrupt+0x1e/0x40 arch/x86/include/asm/idtentry.h:572
                          native_restore_fl arch/x86/include/asm/irqflags.h:41 [inline]
                          arch_local_irq_restore arch/x86/include/asm/irqflags.h:84 [inline]
                          __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
                          _raw_spin_unlock_irqrestore+0x25/0x50 kernel/locking/spinlock.c:191
                          spin_unlock_irqrestore include/linux/spinlock.h:409 [inline]
                          i8042_command+0x35/0x40 drivers/input/serio/i8042.c:348
                          i8042_aux_write+0x29/0x30 drivers/input/serio/i8042.c:383
                          serio_write include/linux/serio.h:125 [inline]
                          ps2_do_sendbyte+0xb3/0x260 drivers/input/serio/libps2.c:40
                          ps2_sendbyte+0x31/0x80 drivers/input/serio/libps2.c:92
                          cypress_ps2_sendbyte+0x15/0x70 drivers/input/mouse/cypress_ps2.c:42
                          cypress_ps2_read_cmd_status drivers/input/mouse/cypress_ps2.c:116 [inline]
                          cypress_send_ext_cmd+0xff/0x430 drivers/input/mouse/cypress_ps2.c:189
                          cypress_detect+0x27/0x80 drivers/input/mouse/cypress_ps2.c:205
                          psmouse_do_detect+0x2a/0x50 drivers/input/mouse/psmouse-base.c:1009
                          psmouse_try_protocol+0xb1/0x170 drivers/input/mouse/psmouse-base.c:1023
                          psmouse_extensions+0x1f6/0x420 drivers/input/mouse/psmouse-base.c:1146
                          psmouse_switch_protocol+0x145/0x1f0 drivers/input/mouse/psmouse-base.c:1542
                          psmouse_connect+0x1b7/0x370 drivers/input/mouse/psmouse-base.c:1632
                          serio_connect_driver+0x24/0x40 drivers/input/serio/serio.c:47
                          really_probe+0xd1/0x400 drivers/base/dd.c:553
                          driver_probe_device+0xd9/0x140 drivers/base/dd.c:738
                          device_driver_attach+0x4a/0x50 drivers/base/dd.c:1013
                          __driver_attach+0x80/0x140 drivers/base/dd.c:1090
                          bus_for_each_dev+0x71/0xb0 drivers/base/bus.c:305
                          serio_attach_driver drivers/input/serio/serio.c:808 [inline]
                          serio_handle_event+0x1ee/0x250 drivers/input/serio/serio.c:227
                          process_one_work+0x26a/0x5f0 kernel/workqueue.c:2269
                          worker_thread+0x38/0x380 kernel/workqueue.c:2415
                          kthread+0x147/0x170 kernel/kthread.c:292
                          ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:294
      INITIAL USE at:
                         lock_acquire+0xb0/0x3a0 kernel/locking/lockdep.c:5020
                         __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:110 [inline]
                         _raw_spin_lock_irqsave+0x33/0x50 kernel/locking/spinlock.c:159
                         input_inject_event+0x44/0x1b6 drivers/input/input.c:466
                         led_trigger_event+0x3c/0x60 drivers/leds/led-triggers.c:387
                         kbd_led_trigger_activate+0x4b/0x60 drivers/tty/vt/keyboard.c:1005
                         led_trigger_set+0x1fc/0x300 drivers/leds/led-triggers.c:195
                         led_trigger_set_default+0x8b/0xb0 drivers/leds/led-triggers.c:259
                         led_classdev_register_ext+0x23d/0x310 drivers/leds/led-class.c:412
                         led_classdev_register include/linux/leds.h:190 [inline]
                         input_leds_connect+0x177/0x2ff drivers/input/input-leds.c:139
                         input_attach_handler+0x68/0x90 drivers/input/input.c:1031
                         input_register_device.cold.22+0xa4/0x152 drivers/input/input.c:2229
                         atkbd_connect+0x214/0x30e drivers/input/keyboard/atkbd.c:1293
                         serio_connect_driver+0x24/0x40 drivers/input/serio/serio.c:47
                         really_probe+0xd1/0x400 drivers/base/dd.c:553
                         driver_probe_device+0xd9/0x140 drivers/base/dd.c:738
                         device_driver_attach+0x4a/0x50 drivers/base/dd.c:1013
                         __driver_attach+0x80/0x140 drivers/base/dd.c:1090
                         bus_for_each_dev+0x71/0xb0 drivers/base/bus.c:305
                         serio_attach_driver drivers/input/serio/serio.c:808 [inline]
                         serio_handle_event+0x1ee/0x250 drivers/input/serio/serio.c:227
                         process_one_work+0x26a/0x5f0 kernel/workqueue.c:2269
                         worker_thread+0x38/0x380 kernel/workqueue.c:2415
                         kthread+0x147/0x170 kernel/kthread.c:292
                         ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:294
    }
    ... key      at: [<ffffffff8744a6d0>] __key.34105+0x0/0x10
    ... acquired at:
   __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
   _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
   spin_lock include/linux/spinlock.h:354 [inline]
   evdev_pass_values+0x71/0x280 drivers/input/evdev.c:262
   evdev_events+0xf7/0x1a0 drivers/input/evdev.c:307
   input_to_handler+0x83/0xe0 drivers/input/input.c:115
   input_pass_values.part.8+0x1b0/0x260 drivers/input/input.c:145
   input_pass_values drivers/input/input.c:134 [inline]
   input_handle_event+0x4cf/0x5f0 drivers/input/input.c:399
   input_inject_event+0x14f/0x1b6 drivers/input/input.c:471
   evdev_write+0x136/0x230 drivers/input/evdev.c:530
   vfs_write+0xc7/0x230 fs/read_write.c:576
   ksys_write+0xb9/0xd0 fs/read_write.c:631
   do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
   entry_SYSCALL_64_after_hwframe+0x44/0xa9

  -> (&client->buffer_lock){....}-{2:2} {
     INITIAL USE at:
                       lock_acquire+0xb0/0x3a0 kernel/locking/lockdep.c:5020
                       __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
                       _raw_spin_lock+0x2a/0x40 kernel/locking/spinlock.c:151
                       spin_lock include/linux/spinlock.h:354 [inline]
                       evdev_pass_values+0x71/0x280 drivers/input/evdev.c:262
                       evdev_events+0xf7/0x1a0 drivers/input/evdev.c:307
                       input_to_handler+0x83/0xe0 drivers/input/input.c:115
                       input_pass_values.part.8+0x1b0/0x260 drivers/input/input.c:145
                       input_pass_values drivers/input/input.c:134 [inline]
                       input_handle_event+0x4cf/0x5f0 drivers/input/input.c:399
                       input_inject_event+0x14f/0x1b6 drivers/input/input.c:471
                       evdev_write+0x136/0x230 drivers/input/evdev.c:530
                       vfs_write+0xc7/0x230 fs/read_write.c:576
                       ksys_write+0xb9/0xd0 fs/read_write.c:631
                       do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
                       entry_SYSCALL_64_after_hwframe+0x44/0xa9
   }
   ... key      at: [<ffffffff8744a7f0>] __key.36392+0x0/0x10
   ... acquired at:
   __raw_read_lock include/linux/rwlock_api_smp.h:149 [inline]
   _raw_read_lock+0x5b/0x70 kernel/locking/spinlock.c:223
   kill_fasync_rcu fs/fcntl.c:1002 [inline]
   kill_fasync+0xa7/0x200 fs/fcntl.c:1023
   __pass_event drivers/input/evdev.c:240 [inline]
   evdev_pass_values+0x18a/0x280 drivers/input/evdev.c:279
   evdev_events+0xf7/0x1a0 drivers/input/evdev.c:307
   input_to_handler+0x83/0xe0 drivers/input/input.c:115
   input_pass_values.part.8+0x1b0/0x260 drivers/input/input.c:145
   input_pass_values drivers/input/input.c:134 [inline]
   input_handle_event+0x4cf/0x5f0 drivers/input/input.c:399
   input_inject_event+0x14f/0x1b6 drivers/input/input.c:471
   evdev_write+0x136/0x230 drivers/input/evdev.c:530
   vfs_write+0xc7/0x230 fs/read_write.c:576
   ksys_write+0xb9/0xd0 fs/read_write.c:631
   do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
   entry_SYSCALL_64_after_hwframe+0x44/0xa9

 -> (&new->fa_lock){....}-{2:2} {
    INITIAL USE at:
                     lock_acquire+0xb0/0x3a0 kernel/locking/lockdep.c:5020
                     __raw_read_lock include/linux/rwlock_api_smp.h:149 [inline]
                     _raw_read_lock+0x5b/0x70 kernel/locking/spinlock.c:223
                     kill_fasync_rcu fs/fcntl.c:1002 [inline]
                     kill_fasync+0xa7/0x200 fs/fcntl.c:1023
                     __pass_event drivers/input/evdev.c:240 [inline]
                     evdev_pass_values+0x18a/0x280 drivers/input/evdev.c:279
                     evdev_events+0xf7/0x1a0 drivers/input/evdev.c:307
                     input_to_handler+0x83/0xe0 drivers/input/input.c:115
                     input_pass_values.part.8+0x1b0/0x260 drivers/input/input.c:145
                     input_pass_values drivers/input/input.c:134 [inline]
                     input_handle_event+0x4cf/0x5f0 drivers/input/input.c:399
                     input_inject_event+0x14f/0x1b6 drivers/input/input.c:471
                     evdev_write+0x136/0x230 drivers/input/evdev.c:530
                     vfs_write+0xc7/0x230 fs/read_write.c:576
                     ksys_write+0xb9/0xd0 fs/read_write.c:631
                     do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
                     entry_SYSCALL_64_after_hwframe+0x44/0xa9
  }
  ... key      at: [<ffffffff869cbf90>] __key.45767+0x0/0x10
  ... acquired at:
   __raw_read_lock include/linux/rwlock_api_smp.h:149 [inline]
   _raw_read_lock+0x5b/0x70 kernel/locking/spinlock.c:223
   send_sigio+0x23/0x200 fs/fcntl.c:786
   kill_fasync_rcu fs/fcntl.c:1009 [inline]
   kill_fasync+0xd2/0x200 fs/fcntl.c:1023
   __pass_event drivers/input/evdev.c:240 [inline]
   evdev_pass_values+0x18a/0x280 drivers/input/evdev.c:279
   evdev_events+0xf7/0x1a0 drivers/input/evdev.c:307
   input_to_handler+0x83/0xe0 drivers/input/input.c:115
   input_pass_values.part.8+0x1b0/0x260 drivers/input/input.c:145
   input_pass_values drivers/input/input.c:134 [inline]
   input_handle_event+0x4cf/0x5f0 drivers/input/input.c:399
   input_inject_event+0x14f/0x1b6 drivers/input/input.c:471
   evdev_write+0x136/0x230 drivers/input/evdev.c:530
   vfs_write+0xc7/0x230 fs/read_write.c:576
   ksys_write+0xb9/0xd0 fs/read_write.c:631
   do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
   entry_SYSCALL_64_after_hwframe+0x44/0xa9

-> (&f->f_owner.lock){.+..}-{2:2} {
   HARDIRQ-ON-R at:
                    lock_acquire+0xb0/0x3a0 kernel/locking/lockdep.c:5020
                    __raw_read_lock include/linux/rwlock_api_smp.h:149 [inline]
                    _raw_read_lock+0x5b/0x70 kernel/locking/spinlock.c:223
                    f_getown_ex fs/fcntl.c:206 [inline]
                    do_fcntl+0x5bb/0x780 fs/fcntl.c:387
                    __do_sys_fcntl fs/fcntl.c:463 [inline]
                    __se_sys_fcntl fs/fcntl.c:448 [inline]
                    __x64_sys_fcntl+0x89/0xb0 fs/fcntl.c:448
                    do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
                    entry_SYSCALL_64_after_hwframe+0x44/0xa9
   INITIAL USE at:
                   lock_acquire+0xb0/0x3a0 kernel/locking/lockdep.c:5020
                   __raw_read_lock include/linux/rwlock_api_smp.h:149 [inline]
                   _raw_read_lock+0x5b/0x70 kernel/locking/spinlock.c:223
                   send_sigio+0x23/0x200 fs/fcntl.c:786
                   kill_fasync_rcu fs/fcntl.c:1009 [inline]
                   kill_fasync+0xd2/0x200 fs/fcntl.c:1023
                   __pass_event drivers/input/evdev.c:240 [inline]
                   evdev_pass_values+0x18a/0x280 drivers/input/evdev.c:279
                   evdev_events+0xf7/0x1a0 drivers/input/evdev.c:307
                   input_to_handler+0x83/0xe0 drivers/input/input.c:115
                   input_pass_values.part.8+0x1b0/0x260 drivers/input/input.c:145
                   input_pass_values drivers/input/input.c:134 [inline]
                   input_handle_event+0x4cf/0x5f0 drivers/input/input.c:399
                   input_inject_event+0x14f/0x1b6 drivers/input/input.c:471
                   evdev_write+0x136/0x230 drivers/input/evdev.c:530
                   vfs_write+0xc7/0x230 fs/read_write.c:576
                   ksys_write+0xb9/0xd0 fs/read_write.c:631
                   do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
                   entry_SYSCALL_64_after_hwframe+0x44/0xa9
 }
 ... key      at: [<ffffffff869cb620>] __key.49897+0x0/0x10
 ... acquired at:
   mark_lock_irq kernel/locking/lockdep.c:3568 [inline]
   mark_lock+0x24f/0x850 kernel/locking/lockdep.c:4006
   mark_usage kernel/locking/lockdep.c:3911 [inline]
   __lock_acquire+0x874/0x2ad0 kernel/locking/lockdep.c:4380
   lock_acquire+0xb0/0x3a0 kernel/locking/lockdep.c:5020
   __raw_read_lock include/linux/rwlock_api_smp.h:149 [inline]
   _raw_read_lock+0x5b/0x70 kernel/locking/spinlock.c:223
   f_getown_ex fs/fcntl.c:206 [inline]
   do_fcntl+0x5bb/0x780 fs/fcntl.c:387
   __do_sys_fcntl fs/fcntl.c:463 [inline]
   __se_sys_fcntl fs/fcntl.c:448 [inline]
   __x64_sys_fcntl+0x89/0xb0 fs/fcntl.c:448
   do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
   entry_SYSCALL_64_after_hwframe+0x44/0xa9


stack backtrace:
CPU: 0 PID: 10183 Comm: syz-executor.1 Not tainted 5.9.0-rc2-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Call Trace:
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x77/0xa0 lib/dump_stack.c:118
 print_irq_inversion_bug kernel/locking/lockdep.c:3429 [inline]
 check_usage_backwards.cold.63+0x1d/0x26 kernel/locking/lockdep.c:3480
 mark_lock_irq kernel/locking/lockdep.c:3568 [inline]
 mark_lock+0x24f/0x850 kernel/locking/lockdep.c:4006
 mark_usage kernel/locking/lockdep.c:3911 [inline]
 __lock_acquire+0x874/0x2ad0 kernel/locking/lockdep.c:4380
 lock_acquire+0xb0/0x3a0 kernel/locking/lockdep.c:5020
 __raw_read_lock include/linux/rwlock_api_smp.h:149 [inline]
 _raw_read_lock+0x5b/0x70 kernel/locking/spinlock.c:223
 f_getown_ex fs/fcntl.c:206 [inline]
 do_fcntl+0x5bb/0x780 fs/fcntl.c:387
 __do_sys_fcntl fs/fcntl.c:463 [inline]
 __se_sys_fcntl fs/fcntl.c:448 [inline]
 __x64_sys_fcntl+0x89/0xb0 fs/fcntl.c:448
 do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x45deb9
Code: 0d b4 fb ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 0f 83 db b3 fb ff c3 66 2e 0f 1f 84 00 00 00 00
RSP: 002b:00007f2a96ed8c78 EFLAGS: 00000246 ORIG_RAX: 0000000000000048
RAX: ffffffffffffffda RBX: 0000000000003340 RCX: 000000000045deb9
RDX: 0000000000000000 RSI: 0000000000000010 RDI: 0000000000000006
RBP: 000000000118bf60 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 000000000118bf2c
R13: 00007ffe393495ff R14: 00007f2a96ed99c0 R15: 000000000118bf2c

