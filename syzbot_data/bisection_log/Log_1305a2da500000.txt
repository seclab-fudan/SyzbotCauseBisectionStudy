bisecting cause commit starting from cb5dc5b062a915bc92def951ea7f33bad6d2ff1f
building syzkaller on a6e3ac3bf259067ffd6e50fe8e4a158f097c1da5
testing commit cb5dc5b062a915bc92def951ea7f33bad6d2ff1f with gcc (GCC) 8.1.0
kernel signature: eeeccc37b183b0d45d620b9fc3e36604aee3df0250730f6fabe70a4a0bd9d76c
run #0: crashed: WARNING in htab_map_alloc
run #1: crashed: WARNING in htab_map_alloc
run #2: crashed: WARNING in htab_map_alloc
run #3: crashed: WARNING in htab_map_alloc
run #4: crashed: WARNING in htab_map_alloc
run #5: crashed: WARNING in htab_map_alloc
run #6: crashed: WARNING in htab_map_alloc
run #7: crashed: no output from test machine
run #8: crashed: no output from test machine
run #9: crashed: no output from test machine
testing release v5.9
testing commit bbf5c979011a099af5dc76498918ed7df445635b with gcc (GCC) 8.1.0
kernel signature: 934f0a134532bbbd345c7e8b605e59600f755e76ac937b8aa8fb348b839f419b
all runs: OK
# git bisect start cb5dc5b062a915bc92def951ea7f33bad6d2ff1f bbf5c979011a099af5dc76498918ed7df445635b
Bisecting: 6516 revisions left to test after this (roughly 13 steps)
[93b694d096cc10994c817730d4d50288f9ae3d66] Merge tag 'drm-next-2020-10-15' of git://anongit.freedesktop.org/drm/drm
testing commit 93b694d096cc10994c817730d4d50288f9ae3d66 with gcc (GCC) 8.1.0
kernel signature: 6016eb75af664d4d9c17405452b3c78810e32bfe56e144231efb112cab8d414d
all runs: OK
# git bisect good 93b694d096cc10994c817730d4d50288f9ae3d66
Bisecting: 3697 revisions left to test after this (roughly 12 steps)
[105faa8742437c28815b2a3eb8314ebc5fd9288c] Merge git://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next
testing commit 105faa8742437c28815b2a3eb8314ebc5fd9288c with gcc (GCC) 8.1.0
kernel signature: a20e75da5ef55819cceccb6ecb31ff6a350d0b257064f8f8968052a6e6a037fc
all runs: OK
# git bisect good 105faa8742437c28815b2a3eb8314ebc5fd9288c
Bisecting: 1762 revisions left to test after this (roughly 11 steps)
[a1e16bc7d5f7ca3599d8a7f061841c93a563665e] Merge tag 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/rdma/rdma
testing commit a1e16bc7d5f7ca3599d8a7f061841c93a563665e with gcc (GCC) 8.1.0
kernel signature: f68fafdf0d64b30e727d5ae1f0b1295e61e36a49f38809d6a746ea2351265396
all runs: OK
# git bisect good a1e16bc7d5f7ca3599d8a7f061841c93a563665e
Bisecting: 886 revisions left to test after this (roughly 10 steps)
[f56e65dff6ad52395ef45738799b4fb70ff43376] Merge branch 'work.set_fs' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs
testing commit f56e65dff6ad52395ef45738799b4fb70ff43376 with gcc (GCC) 8.1.0
kernel signature: cc8a77c9deca6b8ee7e8cc6b96f17c3ce6039bcdf55ac890d186f7eef39abaf1
all runs: OK
# git bisect good f56e65dff6ad52395ef45738799b4fb70ff43376
Bisecting: 439 revisions left to test after this (roughly 9 steps)
[746b25b1aa0f5736d585728ded70a8141da91edb] Merge tag 'kbuild-v5.10' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild
testing commit 746b25b1aa0f5736d585728ded70a8141da91edb with gcc (GCC) 8.1.0
kernel signature: c2ed492ee4525e2c0b391490610b40b330f32a50d6de227b3a8241cd4c71309e
all runs: OK
# git bisect good 746b25b1aa0f5736d585728ded70a8141da91edb
Bisecting: 219 revisions left to test after this (roughly 8 steps)
[30031c2b0574f43cc6888532b715f639afd39196] KVM: x86: Let the guest own CR4.FSGSBASE
testing commit 30031c2b0574f43cc6888532b715f639afd39196 with gcc (GCC) 8.1.0
kernel signature: ffa326817388e0b4d60ac368f2da3d3108f490ceb8f7b477f9c875ffcdab0eff
run #0: basic kernel testing failed: failed to copy test binary to VM: failed to run ["scp" "-P" "22" "-F" "/dev/null" "-o" "UserKnownHostsFile=/dev/null" "-o" "BatchMode=yes" "-o" "IdentitiesOnly=yes" "-o" "StrictHostKeyChecking=no" "-o" "ConnectTimeout=10" "-i" "/syzkaller/jobs/linux/workdir/image/key" "/tmp/syz-executor865813469" "root@10.128.0.129:./syz-executor865813469"]: exit status 1
ssh: connect to host 10.128.0.129 port 22: Connection timed out
lost connection

run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect good 30031c2b0574f43cc6888532b715f639afd39196
Bisecting: 101 revisions left to test after this (roughly 7 steps)
[0613ed91901b5f87afcd28b4560fb0aa37a0db13] Merge tag '5.10-rc-smb3-fixes-part1' of git://git.samba.org/sfrench/cifs-2.6
testing commit 0613ed91901b5f87afcd28b4560fb0aa37a0db13 with gcc (GCC) 8.1.0
kernel signature: 629b38c4d98be5928fa389b63817b2604aa14e7a484c8c493dbc2e68f4dee495
all runs: OK
# git bisect good 0613ed91901b5f87afcd28b4560fb0aa37a0db13
Bisecting: 54 revisions left to test after this (roughly 6 steps)
[d9b0e599b2b892422f1cbc5d2658049b895b2b58] ibmvnic: save changed mac address to adapter->mac_addr
testing commit d9b0e599b2b892422f1cbc5d2658049b895b2b58 with gcc (GCC) 8.1.0
kernel signature: f3fe0117f0bdcbcce11a38364c12cf599c3ca10eb46eecd82845394127ec186e
all runs: OK
# git bisect good d9b0e599b2b892422f1cbc5d2658049b895b2b58
Bisecting: 27 revisions left to test after this (roughly 5 steps)
[ed3adb375b704662bf36d62d5611f304e2b56c7e] gfs2: Ignore subsequent errors after withdraw in rgrp_go_sync
testing commit ed3adb375b704662bf36d62d5611f304e2b56c7e with gcc (GCC) 8.1.0
kernel signature: 60f0fef2ad0fc6e763680c49ed6aef9efaaff48df55c866ba0cd8d9a54d9a815
all runs: OK
# git bisect good ed3adb375b704662bf36d62d5611f304e2b56c7e
Bisecting: 10 revisions left to test after this (roughly 4 steps)
[594850ca439d036173ace66e7f0d022f132f70a8] Merge git://git.kernel.org/pub/scm/linux/kernel/git/pablo/nf
testing commit 594850ca439d036173ace66e7f0d022f132f70a8 with gcc (GCC) 8.1.0
kernel signature: ac28f82317d801cb9adf2b7abb0608290a25f17845677afa753b819ef49aa3eb
all runs: OK
# git bisect good 594850ca439d036173ace66e7f0d022f132f70a8
Bisecting: 6 revisions left to test after this (roughly 3 steps)
[0adc313c4f20639f7e235b8d6719d96a2024cf91] Merge tag 'gfs2-for-5.10' of git://git.kernel.org/pub/scm/linux/kernel/git/gfs2/linux-gfs2
testing commit 0adc313c4f20639f7e235b8d6719d96a2024cf91 with gcc (GCC) 8.1.0
kernel signature: 48e9e74e036668dba0ad57c71756626b2fcf0b8fa87e91df7a5fa5d7f6018c7b
all runs: OK
# git bisect good 0adc313c4f20639f7e235b8d6719d96a2024cf91
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[3cb12d27ff655e57e8efe3486dca2a22f4e30578] Merge tag 'net-5.10-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net
testing commit 3cb12d27ff655e57e8efe3486dca2a22f4e30578 with gcc (GCC) 8.1.0
kernel signature: d7d107b756ccb169a94fe5d049e2760c95a65cc5ba61b5d6fbce1a0e4cda1396
all runs: OK
# git bisect good 3cb12d27ff655e57e8efe3486dca2a22f4e30578
Bisecting: 1 revision left to test after this (roughly 1 step)
[c50eb518e262fa06bd334e6eec172eaf5d7a5bd9] bpf: Use separate lockdep class for each hashtab
testing commit c50eb518e262fa06bd334e6eec172eaf5d7a5bd9 with gcc (GCC) 8.1.0
kernel signature: 1d84b6f0c9fb120bd210c20c93dc55df2754f4d1b39c80056da989f96d44c648
all runs: crashed: WARNING in htab_map_alloc
# git bisect bad c50eb518e262fa06bd334e6eec172eaf5d7a5bd9
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[cf83b2d2e2b64920bd6999b199dfa271d7e94cf8] bpf: Permit cond_resched for some iterators
testing commit cf83b2d2e2b64920bd6999b199dfa271d7e94cf8 with gcc (GCC) 8.1.0
kernel signature: c7b07a603c20bc733860a74c415c255e6ba07bd04e4862b64ef8fdeba92e5a42
all runs: OK
# git bisect good cf83b2d2e2b64920bd6999b199dfa271d7e94cf8
c50eb518e262fa06bd334e6eec172eaf5d7a5bd9 is the first bad commit
commit c50eb518e262fa06bd334e6eec172eaf5d7a5bd9
Author: Song Liu <songliubraving@fb.com>
Date:   Thu Oct 29 00:19:24 2020 -0700

    bpf: Use separate lockdep class for each hashtab
    
    If a hashtab is accessed in both NMI and non-NMI contexts, it may cause
    deadlock in bucket->lock. LOCKDEP NMI warning highlighted this issue:
    
    ./test_progs -t stacktrace
    
    [   74.828970]
    [   74.828971] ================================
    [   74.828972] WARNING: inconsistent lock state
    [   74.828973] 5.9.0-rc8+ #275 Not tainted
    [   74.828974] --------------------------------
    [   74.828975] inconsistent {INITIAL USE} -> {IN-NMI} usage.
    [   74.828976] taskset/1174 [HC2[2]:SC0[0]:HE0:SE1] takes:
    [   74.828977] ffffc90000ee96b0 (&htab->buckets[i].raw_lock){....}-{2:2}, at: htab_map_update_elem+0x271/0x5a0
    [   74.828981] {INITIAL USE} state was registered at:
    [   74.828982]   lock_acquire+0x137/0x510
    [   74.828983]   _raw_spin_lock_irqsave+0x43/0x90
    [   74.828984]   htab_map_update_elem+0x271/0x5a0
    [   74.828984]   0xffffffffa0040b34
    [   74.828985]   trace_call_bpf+0x159/0x310
    [   74.828986]   perf_trace_run_bpf_submit+0x5f/0xd0
    [   74.828987]   perf_trace_urandom_read+0x1be/0x220
    [   74.828988]   urandom_read_nowarn.isra.0+0x26f/0x380
    [   74.828989]   vfs_read+0xf8/0x280
    [   74.828989]   ksys_read+0xc9/0x160
    [   74.828990]   do_syscall_64+0x33/0x40
    [   74.828991]   entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [   74.828992] irq event stamp: 1766
    [   74.828993] hardirqs last  enabled at (1765): [<ffffffff82800ace>] asm_exc_page_fault+0x1e/0x30
    [   74.828994] hardirqs last disabled at (1766): [<ffffffff8267df87>] irqentry_enter+0x37/0x60
    [   74.828995] softirqs last  enabled at (856): [<ffffffff81043e7c>] fpu__clear+0xac/0x120
    [   74.828996] softirqs last disabled at (854): [<ffffffff81043df0>] fpu__clear+0x20/0x120
    [   74.828997]
    [   74.828998] other info that might help us debug this:
    [   74.828999]  Possible unsafe locking scenario:
    [   74.828999]
    [   74.829000]        CPU0
    [   74.829001]        ----
    [   74.829001]   lock(&htab->buckets[i].raw_lock);
    [   74.829003]   <Interrupt>
    [   74.829004]     lock(&htab->buckets[i].raw_lock);
    [   74.829006]
    [   74.829006]  *** DEADLOCK ***
    [   74.829007]
    [   74.829008] 1 lock held by taskset/1174:
    [   74.829008]  #0: ffff8883ec3fd020 (&cpuctx_lock){-...}-{2:2}, at: perf_event_task_tick+0x101/0x650
    [   74.829012]
    [   74.829013] stack backtrace:
    [   74.829014] CPU: 0 PID: 1174 Comm: taskset Not tainted 5.9.0-rc8+ #275
    [   74.829015] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-2.el7 04/01/2014
    [   74.829016] Call Trace:
    [   74.829016]  <NMI>
    [   74.829017]  dump_stack+0x9a/0xd0
    [   74.829018]  lock_acquire+0x461/0x510
    [   74.829019]  ? lock_release+0x6b0/0x6b0
    [   74.829020]  ? stack_map_get_build_id_offset+0x45e/0x800
    [   74.829021]  ? htab_map_update_elem+0x271/0x5a0
    [   74.829022]  ? rcu_read_lock_held_common+0x1a/0x50
    [   74.829022]  ? rcu_read_lock_held+0x5f/0xb0
    [   74.829023]  _raw_spin_lock_irqsave+0x43/0x90
    [   74.829024]  ? htab_map_update_elem+0x271/0x5a0
    [   74.829025]  htab_map_update_elem+0x271/0x5a0
    [   74.829026]  bpf_prog_1fd9e30e1438d3c5_oncpu+0x9c/0xe88
    [   74.829027]  bpf_overflow_handler+0x127/0x320
    [   74.829028]  ? perf_event_text_poke_output+0x4d0/0x4d0
    [   74.829029]  ? sched_clock_cpu+0x18/0x130
    [   74.829030]  __perf_event_overflow+0xae/0x190
    [   74.829030]  handle_pmi_common+0x34c/0x470
    [   74.829031]  ? intel_pmu_save_and_restart+0x90/0x90
    [   74.829032]  ? lock_acquire+0x3f8/0x510
    [   74.829033]  ? lock_release+0x6b0/0x6b0
    [   74.829034]  intel_pmu_handle_irq+0x11e/0x240
    [   74.829034]  perf_event_nmi_handler+0x40/0x60
    [   74.829035]  nmi_handle+0x110/0x360
    [   74.829036]  ? __intel_pmu_enable_all.constprop.0+0x72/0xf0
    [   74.829037]  default_do_nmi+0x6b/0x170
    [   74.829038]  exc_nmi+0x106/0x130
    [   74.829038]  end_repeat_nmi+0x16/0x55
    [   74.829039] RIP: 0010:__intel_pmu_enable_all.constprop.0+0x72/0xf0
    [   74.829042] Code: 2f 1f 03 48 8d bb b8 0c 00 00 e8 29 09 41 00 48 ...
    [   74.829043] RSP: 0000:ffff8880a604fc90 EFLAGS: 00000002
    [   74.829044] RAX: 000000070000000f RBX: ffff8883ec2195a0 RCX: 000000000000038f
    [   74.829045] RDX: 0000000000000007 RSI: ffffffff82e72c20 RDI: ffff8883ec21a258
    [   74.829046] RBP: 000000070000000f R08: ffffffff8101b013 R09: fffffbfff0a7982d
    [   74.829047] R10: ffffffff853cc167 R11: fffffbfff0a7982c R12: 0000000000000000
    [   74.829049] R13: ffff8883ec3f0af0 R14: ffff8883ec3fd120 R15: ffff8883e9c92098
    [   74.829049]  ? intel_pmu_lbr_enable_all+0x43/0x240
    [   74.829050]  ? __intel_pmu_enable_all.constprop.0+0x72/0xf0
    [   74.829051]  ? __intel_pmu_enable_all.constprop.0+0x72/0xf0
    [   74.829052]  </NMI>
    [   74.829053]  perf_event_task_tick+0x48d/0x650
    [   74.829054]  scheduler_tick+0x129/0x210
    [   74.829054]  update_process_times+0x37/0x70
    [   74.829055]  tick_sched_handle.isra.0+0x35/0x90
    [   74.829056]  tick_sched_timer+0x8f/0xb0
    [   74.829057]  __hrtimer_run_queues+0x364/0x7d0
    [   74.829058]  ? tick_sched_do_timer+0xa0/0xa0
    [   74.829058]  ? enqueue_hrtimer+0x1e0/0x1e0
    [   74.829059]  ? recalibrate_cpu_khz+0x10/0x10
    [   74.829060]  ? ktime_get_update_offsets_now+0x1a3/0x360
    [   74.829061]  hrtimer_interrupt+0x1bb/0x360
    [   74.829062]  ? rcu_read_lock_sched_held+0xa1/0xd0
    [   74.829063]  __sysvec_apic_timer_interrupt+0xed/0x3d0
    [   74.829064]  sysvec_apic_timer_interrupt+0x3f/0xd0
    [   74.829064]  ? asm_sysvec_apic_timer_interrupt+0xa/0x20
    [   74.829065]  asm_sysvec_apic_timer_interrupt+0x12/0x20
    [   74.829066] RIP: 0033:0x7fba18d579b4
    [   74.829068] Code: 74 54 44 0f b6 4a 04 41 83 e1 0f 41 80 f9 ...
    [   74.829069] RSP: 002b:00007ffc9ba69570 EFLAGS: 00000206
    [   74.829071] RAX: 00007fba192084c0 RBX: 00007fba18c24d28 RCX: 00000000000007a4
    [   74.829072] RDX: 00007fba18c30488 RSI: 0000000000000000 RDI: 000000000000037b
    [   74.829073] RBP: 00007fba18ca5760 R08: 00007fba18c248fc R09: 00007fba18c94c30
    [   74.829074] R10: 000000000000002f R11: 0000000000073c30 R12: 00007ffc9ba695e0
    [   74.829075] R13: 00000000000003f3 R14: 00007fba18c21ac8 R15: 00000000000058d6
    
    However, such warning should not apply across multiple hashtabs. The
    system will not deadlock if one hashtab is used in NMI, while another
    hashtab is used in non-NMI.
    
    Use separate lockdep class for each hashtab, so that we don't get this
    false alert.
    
    Signed-off-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20201029071925.3103400-2-songliubraving@fb.com

 kernel/bpf/hashtab.c | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)
culprit signature: 1d84b6f0c9fb120bd210c20c93dc55df2754f4d1b39c80056da989f96d44c648
parent  signature: c7b07a603c20bc733860a74c415c255e6ba07bd04e4862b64ef8fdeba92e5a42
revisions tested: 16, total time: 4h3m9.655674674s (build: 1h18m33.801332044s, test: 2h41m44.306058951s)
first bad commit: c50eb518e262fa06bd334e6eec172eaf5d7a5bd9 bpf: Use separate lockdep class for each hashtab
recipients (to): ["ast@kernel.org" "linux-kernel@vger.kernel.org" "songliubraving@fb.com"]
recipients (cc): ["andriin@fb.com" "ast@kernel.org" "bpf@vger.kernel.org" "daniel@iogearbox.net" "john.fastabend@gmail.com" "kafai@fb.com" "kpsingh@chromium.org" "netdev@vger.kernel.org" "songliubraving@fb.com" "yhs@fb.com"]
crash: WARNING in htab_map_alloc
------------[ cut here ]------------
WARNING: CPU: 0 PID: 10177 at kernel/locking/lockdep.c:1183 lockdep_register_key+0xd9/0x210 kernel/locking/lockdep.c:1183
Modules linked in:
CPU: 0 PID: 10177 Comm: syz-executor.3 Not tainted 5.9.0-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
RIP: 0010:lockdep_register_key+0xd9/0x210 kernel/locking/lockdep.c:1183
Code: 48 85 c0 48 89 1c ed 60 29 95 86 74 04 48 89 58 08 8b 0d 46 0f 02 04 85 c9 74 31 eb 0f 48 8b 00 48 85 c0 74 cc 48 39 c3 75 f3 <0f> 0b 8b 15 67 ae 8e 05 85 d2 75 16 65 48 8b 04 25 00 70 01 00 48
RSP: 0018:ffffc900027c3dc8 EFLAGS: 00010046
RAX: ffff88811e6a86d8 RBX: ffff88811e6a86d8 RCX: 0000000000000001
RDX: 0000000000000001 RSI: 0000000000000001 RDI: ffffffff84591fce
RBP: 0000000000000196 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000206
R13: ffffffff86953610 R14: ffffffff86b1b970 R15: ffff88811e6a8400
FS:  00007f01548ea700(0000) GS:ffff88813bc00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000768000 CR3: 000000011e5d4000 CR4: 00000000001506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 htab_init_buckets kernel/bpf/hashtab.c:140 [inline]
 htab_map_alloc+0x207/0x530 kernel/bpf/hashtab.c:495
 find_and_alloc_map kernel/bpf/syscall.c:122 [inline]
 map_create kernel/bpf/syscall.c:825 [inline]
 __do_sys_bpf+0x321/0x24e0 kernel/bpf/syscall.c:4381
 do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
 entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x45deb9
Code: 0d b4 fb ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 0f 83 db b3 fb ff c3 66 2e 0f 1f 84 00 00 00 00
RSP: 002b:00007f01548e9c78 EFLAGS: 00000246 ORIG_RAX: 0000000000000141
RAX: ffffffffffffffda RBX: 0000000000001a00 RCX: 000000000045deb9
RDX: 0000000000000040 RSI: 0000000020000040 RDI: 405a020000000000
RBP: 000000000118bf60 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 000000000118bf2c
R13: 00007ffe1c07bdef R14: 00007f01548ea9c0 R15: 000000000118bf2c

