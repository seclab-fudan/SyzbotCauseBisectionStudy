bisecting cause commit starting from d1dc87763f406d4e67caf16dbe438a5647692395
building syzkaller on 5783034f220fa03dd9407034a4804be5890c3377
testing commit d1dc87763f406d4e67caf16dbe438a5647692395
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 3710c376fa5b8a77353c6a4fc2aec0d1739ee9d02ec0348d01d9d6d85215b292
all runs: crashed: general protection fault in __device_attach
testing release v5.18
testing commit 4b0986a3613c92f4ec1bdc7f60ec66fea135991f
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: e761241590e88551336a23b6d5056fe1f12eb8fae9eed4df6d9b269598975a09
run #0: basic kernel testing failed: BUG: program execution failed: executor NUM: failed to write control pipe: write |NUM: broken pipe
run #1: crashed: general protection fault in __device_attach
run #2: crashed: general protection fault in __device_attach
run #3: crashed: general protection fault in __device_attach
run #4: crashed: general protection fault in __device_attach
run #5: crashed: general protection fault in __device_attach
run #6: crashed: general protection fault in __device_attach
run #7: crashed: general protection fault in __device_attach
run #8: OK
run #9: OK
testing release v5.17
testing commit f443e374ae131c168a065ea1748feac6b2e76613
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 6bb33aa31d782863575c2c50f624c1d4db7c756fe4c607086af18ff2c53df828
run #0: crashed: general protection fault in __device_attach
run #1: crashed: general protection fault in __device_attach
run #2: crashed: general protection fault in __device_attach
run #3: crashed: general protection fault in __device_attach
run #4: crashed: general protection fault in __device_attach
run #5: crashed: general protection fault in __device_attach
run #6: crashed: general protection fault in __device_attach
run #7: crashed: general protection fault in __device_attach
run #8: crashed: general protection fault in __device_attach
run #9: OK
testing release v5.16
testing commit df0cc57e057f18e44dac8e6c18aba47ab53202f9
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 55eda60464719941a5efc4bd5ce4760111711ade9be69508b7c5d1e4f91e0dce
run #0: crashed: general protection fault in __device_attach
run #1: crashed: general protection fault in __device_attach
run #2: crashed: general protection fault in __device_attach
run #3: crashed: general protection fault in __device_attach
run #4: crashed: general protection fault in __device_attach
run #5: crashed: general protection fault in __device_attach
run #6: OK
run #7: OK
run #8: OK
run #9: OK
testing release v5.15
testing commit 8bb7eca972ad531c9b149c0a51ab43a417385813
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 697712e37513cf079419692b6ccf6a5e35b36a8195d1c19c4416d2e2472ff663
run #0: crashed: general protection fault in __device_attach
run #1: crashed: general protection fault in __device_attach
run #2: crashed: general protection fault in __device_attach
run #3: crashed: general protection fault in __device_attach
run #4: crashed: general protection fault in __device_attach
run #5: crashed: general protection fault in __device_attach
run #6: crashed: general protection fault in __device_attach
run #7: crashed: general protection fault in __device_attach
run #8: OK
run #9: OK
testing release v5.14
testing commit 7d2a07b769330c34b4deabeed939325c77a7ec2f
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 474fe81e795cc02e5ee3f39823209d7bbf77f59d84f6d909281bece606f5f2e6
run #0: crashed: general protection fault in __device_attach
run #1: crashed: general protection fault in __device_attach
run #2: crashed: general protection fault in __device_attach
run #3: crashed: general protection fault in __device_attach
run #4: crashed: general protection fault in __device_attach
run #5: crashed: general protection fault in __device_attach
run #6: crashed: general protection fault in __device_attach
run #7: crashed: general protection fault in __device_attach
run #8: OK
run #9: OK
testing release v5.13
testing commit 62fb9874f5da54fdb243003b386128037319b219
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 81e5c91ed4a482aec2c2fd5c60ff39f8f85a479ffdce0ec6f0204110468b7ee8
all runs: OK
# git bisect start 7d2a07b769330c34b4deabeed939325c77a7ec2f 62fb9874f5da54fdb243003b386128037319b219
Bisecting: 7914 revisions left to test after this (roughly 13 steps)
[406254918b232db198ed60f5bf1f8b84d96bca00] Merge tag 'perf-tools-for-v5.14-2021-07-01' of git://git.kernel.org/pub/scm/linux/kernel/git/acme/linux

testing commit 406254918b232db198ed60f5bf1f8b84d96bca00
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 364a00526c6122c78da920e9ea474ae3cc7c392d6739b9cea266c411110a30dc
run #0: crashed: general protection fault in __device_attach
run #1: crashed: general protection fault in __device_attach
run #2: crashed: general protection fault in __device_attach
run #3: crashed: general protection fault in __device_attach
run #4: crashed: general protection fault in __device_attach
run #5: crashed: general protection fault in __device_attach
run #6: crashed: general protection fault in __device_attach
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 406254918b232db198ed60f5bf1f8b84d96bca00
Bisecting: 4970 revisions left to test after this (roughly 12 steps)
[a6eaf3850cb171c328a8b0db6d3c79286a1eba9d] Merge tag 'sched-urgent-2021-06-30' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip

testing commit a6eaf3850cb171c328a8b0db6d3c79286a1eba9d
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 0bbde273b0c550f9dce30c31316e3db06849ee524cdb25f0cfb6e0d0de5ae42c
run #0: crashed: general protection fault in __device_attach
run #1: crashed: general protection fault in __device_attach
run #2: crashed: general protection fault in __device_attach
run #3: crashed: general protection fault in __device_attach
run #4: crashed: general protection fault in __device_attach
run #5: crashed: general protection fault in __device_attach
run #6: crashed: general protection fault in __device_attach
run #7: crashed: general protection fault in __device_attach
run #8: OK
run #9: OK
# git bisect bad a6eaf3850cb171c328a8b0db6d3c79286a1eba9d
Bisecting: 1489 revisions left to test after this (roughly 11 steps)
[31e798fd6f0ff0acdc49c1a358b581730936a09a] Merge tag 'media/v5.14-1' of git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-media

testing commit 31e798fd6f0ff0acdc49c1a358b581730936a09a
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 392cbbfbe4b192a2f90968237e2b0ee697ac24b5cf1b92b1c24a4b106d52fb06
all runs: OK
# git bisect good 31e798fd6f0ff0acdc49c1a358b581730936a09a
Bisecting: 744 revisions left to test after this (roughly 10 steps)
[5e6928249b81b4d8727ab6a4037a171d15455cb0] Merge tag 'acpi-5.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm

testing commit 5e6928249b81b4d8727ab6a4037a171d15455cb0
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: be3765c5e836c96606e44081706b2f7ea6d364ab65e39a22665b857d86aefe79
run #0: crashed: general protection fault in __device_attach
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
reproducer seems to be flaky
# git bisect bad 5e6928249b81b4d8727ab6a4037a171d15455cb0
Bisecting: 337 revisions left to test after this (roughly 9 steps)
[233a806b00e31b3ab8d57a68f1aab40cf1e5eaea] Merge tag 'docs-5.14' of git://git.lwn.net/linux

testing commit 233a806b00e31b3ab8d57a68f1aab40cf1e5eaea
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 125eb3e9af6cf11aa4f6bc75bff07b86cecd145eb6ce4176f9cef75865a83e14
all runs: OK
# git bisect good 233a806b00e31b3ab8d57a68f1aab40cf1e5eaea
Bisecting: 170 revisions left to test after this (roughly 7 steps)
[a22c3f615a6fef6553e20c559d31ea817216b4e6] Merge tag 'x86-irq-2021-06-29' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip

testing commit a22c3f615a6fef6553e20c559d31ea817216b4e6
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: c589f269ad6175284c2b273ff199f40e4fafd39a94a9525369f29fcce01891dd
all runs: OK
# git bisect good a22c3f615a6fef6553e20c559d31ea817216b4e6
Bisecting: 79 revisions left to test after this (roughly 7 steps)
[8b457d60608aa76d7ce9c04a312669761025ba42] Merge branches 'acpi-dptf' and 'acpi-messages'

testing commit 8b457d60608aa76d7ce9c04a312669761025ba42
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 62add830bdc09a2e8f2cf3b85d031243ca952a54f994907a49ce6f0cdd7984bd
run #0: crashed: general protection fault in __device_attach
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad 8b457d60608aa76d7ce9c04a312669761025ba42
Bisecting: 54 revisions left to test after this (roughly 6 steps)
[dfef7710d749617513a6c8c2bfb29ba415dab7e8] Merge branches 'acpi-bus', 'acpi-scan' and 'acpi-tables'

testing commit dfef7710d749617513a6c8c2bfb29ba415dab7e8
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 21c0ddedcb811bbde02e67f3a7018077446925d74b9be3ae71e919d98a9cb1dc
all runs: OK
# git bisect good dfef7710d749617513a6c8c2bfb29ba415dab7e8
Bisecting: 34 revisions left to test after this (roughly 5 steps)
[2f4edfadbcb2b50b47b4b6cfbe943db9c3262bc0] Merge branches 'acpi-pm', 'acpi-processor' and 'acpi-resources'

testing commit 2f4edfadbcb2b50b47b4b6cfbe943db9c3262bc0
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 2ed25533379ad146b0bc35241b5fd4e9673062be0cee2a7ad497c921dc45434f
all runs: OK
# git bisect good 2f4edfadbcb2b50b47b4b6cfbe943db9c3262bc0
Bisecting: 17 revisions left to test after this (roughly 4 steps)
[f5ee87df7a4dabadf7d560e943cbae24ed8be455] ACPI: sleep: Unify the message printing

testing commit f5ee87df7a4dabadf7d560e943cbae24ed8be455
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: db872cc194f96327f09aa84cb763cdef764b3618b13dff5e589ae062cf4b3f1d
all runs: OK
# git bisect good f5ee87df7a4dabadf7d560e943cbae24ed8be455
Bisecting: 8 revisions left to test after this (roughly 3 steps)
[a9c4cf299f5f79d5016c8a9646fa1fc49381a8c1] ACPI: sysfs: Use __ATTR_RO() and __ATTR_RW() macros

testing commit a9c4cf299f5f79d5016c8a9646fa1fc49381a8c1
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: b92a1130c1305bd88a4c5bfa8face426099958637ffe92b1936339074280d506
run #0: crashed: general protection fault in __device_attach
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect bad a9c4cf299f5f79d5016c8a9646fa1fc49381a8c1
Bisecting: 4 revisions left to test after this (roughly 2 steps)
[bdd56d7d8931e842775d2e5b93d426a8d1940e33] ACPI: sysfs: Make sparse happy about address space in use

testing commit bdd56d7d8931e842775d2e5b93d426a8d1940e33
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 1262a3c6378984a94e6e09d802aed79c14a4ee59af31320b809a979d94ea59bf
all runs: OK
# git bisect good bdd56d7d8931e842775d2e5b93d426a8d1940e33
Bisecting: 2 revisions left to test after this (roughly 1 step)
[b272c05984679c855ff2d08c9d54957bdcfd9b3b] ACPI: sysfs: Unify pattern of memory allocations

testing commit b272c05984679c855ff2d08c9d54957bdcfd9b3b
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 17636221a0ed81983961d68bacf497f11588e55573c1fac37b39825682b1e27f
run #0: basic kernel testing failed: BUG: sleeping function called from invalid context in lock_sock_nested
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
run #10: OK
run #11: OK
run #12: OK
run #13: OK
run #14: OK
run #15: OK
run #16: OK
run #17: OK
run #18: OK
run #19: OK
# git bisect good b272c05984679c855ff2d08c9d54957bdcfd9b3b
Bisecting: 0 revisions left to test after this (roughly 1 step)
[44497fab681ba4ad439792eea6d118743f3e84d4] ACPI: sysfs: Sort headers alphabetically

testing commit 44497fab681ba4ad439792eea6d118743f3e84d4
compiler: gcc (GCC) 10.2.1 20210217, GNU ld (GNU Binutils for Debian) 2.35.2
kernel signature: 343ba4a8d9f21a2546f6b2926e32d835c320862a50c0157e957b56bdeaaacf22
all runs: OK
# git bisect good 44497fab681ba4ad439792eea6d118743f3e84d4
a9c4cf299f5f79d5016c8a9646fa1fc49381a8c1 is the first bad commit
commit a9c4cf299f5f79d5016c8a9646fa1fc49381a8c1
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Jun 18 16:41:27 2021 +0300

    ACPI: sysfs: Use __ATTR_RO() and __ATTR_RW() macros
    
    We have a few open-coded __ATTR_RO() and __ATTR_RW() macros.
    Replace the custom code with generic macros.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

 drivers/acpi/sysfs.c | 23 +++++++----------------
 1 file changed, 7 insertions(+), 16 deletions(-)

culprit signature: b92a1130c1305bd88a4c5bfa8face426099958637ffe92b1936339074280d506
parent  signature: 343ba4a8d9f21a2546f6b2926e32d835c320862a50c0157e957b56bdeaaacf22
Reproducer flagged being flaky
revisions tested: 21, total time: 6h7m23.988101583s (build: 2h12m24.329684661s, test: 3h52m44.504126822s)
first bad commit: a9c4cf299f5f79d5016c8a9646fa1fc49381a8c1 ACPI: sysfs: Use __ATTR_RO() and __ATTR_RW() macros
recipients (to): ["andriy.shevchenko@linux.intel.com" "lenb@kernel.org" "linux-acpi@vger.kernel.org" "rafael.j.wysocki@intel.com" "rjw@rjwysocki.net"]
recipients (cc): ["linux-kernel@vger.kernel.org"]
crash: general protection fault in __device_attach
RAX: ffffffffffffffda RBX: 00007f0e988eff60 RCX: 00007f0e987dd109
RDX: 0000000020000000 RSI: 0000000080045505 RDI: 0000000000000004
RBP: 00007f0e97f521d0 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000001
R13: 00007fffbd15827f R14: 00007f0e97f52300 R15: 0000000000022000
usb usb9: device_add((null)) --> -22
general protection fault, probably for non-canonical address 0xdffffc0000000021: 0000 [#1] PREEMPT SMP KASAN
KASAN: null-ptr-deref in range [0x0000000000000108-0x000000000000010f]
CPU: 0 PID: 8652 Comm: syz-executor.0 Not tainted 5.13.0-rc5-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
RIP: 0010:__device_attach+0xa7/0x410 drivers/base/dd.c:914
Code: e8 03 42 80 3c 20 00 0f 85 f5 02 00 00 48 b8 00 00 00 00 00 fc ff df 4c 8b 65 48 49 8d bc 24 08 01 00 00 48 89 fa 48 c1 ea 03 <0f> b6 04 02 84 c0 74 06 0f 8e c0 02 00 00 45 31 ff 41 f6 84 24 08
RSP: 0018:ffffc90001917b98 EFLAGS: 00010206
RAX: dffffc0000000000 RBX: 1ffff92000322f74 RCX: 0000000000000000
RDX: 0000000000000021 RSI: 0000000000000008 RDI: 0000000000000108
RBP: ffff8880123a5030 R08: 0000000000000000 R09: ffff8880123a5147
R10: ffffed1002474a28 R11: 0000000000078087 R12: 0000000000000000
R13: 0000000000000000 R14: ffff8880123a5140 R15: 00000000fffffff0
FS:  00007f0e97f52700(0000) GS:ffff8880b9e00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007f0e97f30d38 CR3: 0000000013bb4000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 proc_ioctl.part.0+0x36e/0x430 drivers/usb/core/devio.c:2262
 proc_ioctl drivers/usb/core/devio.c:169 [inline]
 proc_ioctl_default drivers/usb/core/devio.c:2297 [inline]
 usbdev_do_ioctl drivers/usb/core/devio.c:2653 [inline]
 usbdev_ioctl+0x228b/0x2ea0 drivers/usb/core/devio.c:2713
 vfs_ioctl fs/ioctl.c:51 [inline]
 __do_sys_ioctl fs/ioctl.c:1069 [inline]
 __se_sys_ioctl fs/ioctl.c:1055 [inline]
 __x64_sys_ioctl+0x11f/0x190 fs/ioctl.c:1055
 do_syscall_64+0x3a/0x70 arch/x86/entry/common.c:47
 entry_SYSCALL_64_after_hwframe+0x44/0xae
RIP: 0033:0x7f0e987dd109
Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f0e97f52168 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
RAX: ffffffffffffffda RBX: 00007f0e988eff60 RCX: 00007f0e987dd109
RDX: 0000000020000040 RSI: 00000000c0105512 RDI: 0000000000000006
RBP: 00007f0e9883708d R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 00007fffbd15827f R14: 00007f0e97f52300 R15: 0000000000022000
Modules linked in:
---[ end trace ad64c48785514804 ]---
RIP: 0010:__device_attach+0xa7/0x410 drivers/base/dd.c:914
Code: e8 03 42 80 3c 20 00 0f 85 f5 02 00 00 48 b8 00 00 00 00 00 fc ff df 4c 8b 65 48 49 8d bc 24 08 01 00 00 48 89 fa 48 c1 ea 03 <0f> b6 04 02 84 c0 74 06 0f 8e c0 02 00 00 45 31 ff 41 f6 84 24 08
RSP: 0018:ffffc90001917b98 EFLAGS: 00010206
RAX: dffffc0000000000 RBX: 1ffff92000322f74 RCX: 0000000000000000
RDX: 0000000000000021 RSI: 0000000000000008 RDI: 0000000000000108
RBP: ffff8880123a5030 R08: 0000000000000000 R09: ffff8880123a5147
R10: ffffed1002474a28 R11: 0000000000078087 R12: 0000000000000000
R13: 0000000000000000 R14: ffff8880123a5140 R15: 00000000fffffff0
FS:  00007f0e97f52700(0000) GS:ffff8880b9e00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007f0e97f30d38 CR3: 0000000013bb4000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
----------------
Code disassembly (best guess):
   0:	e8 03 42 80 3c       	callq  0x3c804208
   5:	20 00                	and    %al,(%rax)
   7:	0f 85 f5 02 00 00    	jne    0x302
   d:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax
  14:	fc ff df
  17:	4c 8b 65 48          	mov    0x48(%rbp),%r12
  1b:	49 8d bc 24 08 01 00 	lea    0x108(%r12),%rdi
  22:	00
  23:	48 89 fa             	mov    %rdi,%rdx
  26:	48 c1 ea 03          	shr    $0x3,%rdx
* 2a:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax <-- trapping instruction
  2e:	84 c0                	test   %al,%al
  30:	74 06                	je     0x38
  32:	0f 8e c0 02 00 00    	jle    0x2f8
  38:	45 31 ff             	xor    %r15d,%r15d
  3b:	41                   	rex.B
  3c:	f6                   	.byte 0xf6
  3d:	84 24 08             	test   %ah,(%rax,%rcx,1)

