bisecting cause commit starting from c6dd78fcb8eefa15dd861889e0f59d301cb5230c
building syzkaller on 55e0c07757deebc0c6094915fae19fc0959849e4
testing commit c6dd78fcb8eefa15dd861889e0f59d301cb5230c with gcc (GCC) 8.1.0
all runs: crashed: memory leak in rds_send_probe
testing release v5.2
testing commit 0ecfebd2b52404ae0c54a878c872bb93363ada36 with gcc (GCC) 8.1.0
all runs: crashed: memory leak in rds_send_probe
testing release v5.1
testing commit e93c9c99a629c61837d5a7fc2120cd2b6c70dbdd with gcc (GCC) 8.1.0
all runs: crashed: memory leak in rds_send_probe
testing release v5.0
testing commit 1c163f4c7b3f621efff9b28a47abb36f7378d783 with gcc (GCC) 8.1.0
run #0: OK
run #1: crashed: memory leak in batadv_tvlv_handler_register
run #2: crashed: memory leak in batadv_tvlv_handler_register
run #3: crashed: memory leak in batadv_tvlv_handler_register
run #4: crashed: memory leak in batadv_tvlv_handler_register
run #5: crashed: memory leak in batadv_tvlv_handler_register
run #6: crashed: memory leak in batadv_tvlv_handler_register
run #7: crashed: memory leak in batadv_tvlv_handler_register
run #8: crashed: memory leak in batadv_tvlv_handler_register
run #9: crashed: memory leak in batadv_tvlv_handler_register
testing release v4.20
testing commit 8fe28cb58bcb235034b64cbbb7550a8a43fd88be with gcc (GCC) 8.1.0
run #0: crashed: memory leak in __neigh_create
run #1: crashed: memory leak in __neigh_create
run #2: crashed: memory leak in __neigh_create
run #3: crashed: memory leak in __neigh_create
run #4: crashed: memory leak in batadv_tvlv_handler_register
run #5: crashed: memory leak in batadv_tvlv_handler_register
run #6: crashed: memory leak in batadv_tvlv_handler_register
run #7: crashed: memory leak in batadv_tvlv_handler_register
run #8: crashed: memory leak in batadv_tvlv_handler_register
run #9: crashed: memory leak in batadv_tvlv_handler_register
testing release v4.19
testing commit 84df9525b0c27f3ebc2ebb1864fa62a97fdedb7d with gcc (GCC) 8.1.0
all runs: crashed: memory leak in __neigh_create
testing release v4.18
testing commit 94710cac0ef4ee177a63b5227664b38c95bbf703 with gcc (GCC) 8.1.0
all runs: crashed: memory leak in corrupted
testing release v4.17
testing commit 29dcea88779c856c7dc92040a0c01233263101d4 with gcc (GCC) 8.1.0
all runs: crashed: memory leak in corrupted
testing release v4.16
testing commit 0adb32858b0bddf4ada5f364a84ed60b196dbcda with gcc (GCC) 8.1.0
all runs: crashed: memory leak in __neigh_create
testing release v4.15
testing commit d8a5b80568a9cb66810e75b182018e9edb68e8ff with gcc (GCC) 8.1.0
all runs: crashed: memory leak in __neigh_create
testing release v4.14
testing commit bebc6082da0a9f5d47a1ea2edc099bf671058bd4 with gcc (GCC) 8.1.0
all runs: crashed: memory leak in __neigh_create
testing release v4.13
testing commit 569dbb88e80deb68974ef6fdd6a13edb9d686261 with gcc (GCC) 8.1.0
run #0: crashed: WARNING: kernel stack regs has bad 'bp' value
run #1: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #2: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #3: crashed: WARNING: kernel stack regs has bad 'bp' value
run #4: crashed: WARNING: kernel stack regs has bad 'bp' value
run #5: crashed: WARNING: kernel stack regs has bad 'bp' value
run #6: crashed: memory leak in __neigh_create
run #7: crashed: memory leak in __neigh_create
run #8: crashed: memory leak in __neigh_create
run #9: OK
testing release v4.12
testing commit 6f7da290413ba713f0cdd9ff1a2a9bb129ef4f6c with gcc (GCC) 8.1.0
run #0: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #1: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #2: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #3: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #4: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #5: crashed: memory leak in copy_process
run #6: crashed: WARNING: kernel stack regs has bad 'bp' value
run #7: basic kernel testing failed: WARNING: kernel stack regs has bad 'bp' value
run #8: crashed: WARNING: kernel stack regs has bad 'bp' value
run #9: crashed: memory leak in copy_process
testing release v4.11
testing commit a351e9b9fc24e982ec2f0e76379a49826036da12 with gcc (GCC) 7.3.0
run #0: crashed: memory leak in copy_process
run #1: crashed: memory leak in copy_process
run #2: crashed: memory leak in copy_process
run #3: crashed: memory leak in copy_process
run #4: crashed: memory leak in copy_process
run #5: crashed: memory leak in copy_process
run #6: crashed: memory leak in copy_process
run #7: crashed: memory leak in __neigh_create
run #8: crashed: memory leak in copy_process
run #9: crashed: memory leak in copy_process
testing release v4.10
testing commit c470abd4fde40ea6a0846a2beab642a578c0b8cd with gcc (GCC) 5.5.0
all runs: crashed: memory leak in copy_process
testing release v4.9
testing commit 69973b830859bc6529a7a0468ba0d80ee5117826 with gcc (GCC) 5.5.0
run #0: crashed: memory leak in copy_process
run #1: crashed: memory leak in copy_process
run #2: crashed: memory leak in __neigh_create
run #3: crashed: memory leak in copy_process
run #4: crashed: memory leak in copy_process
run #5: crashed: memory leak in copy_process
run #6: crashed: memory leak in copy_process
run #7: crashed: memory leak in copy_process
run #8: crashed: memory leak in copy_process
run #9: crashed: memory leak in copy_process
testing release v4.8
testing commit c8d2bc9bc39ebea8437fd974fdbc21847bb897a3 with gcc (GCC) 5.5.0
run #0: OK
run #1: OK
run #2: OK
run #3: crashed: memory leak in batadv_tvlv_handler_register
run #4: crashed: memory leak in batadv_tvlv_handler_register
run #5: crashed: memory leak in batadv_tvlv_handler_register
run #6: crashed: memory leak in batadv_tvlv_handler_register
run #7: crashed: memory leak in batadv_tvlv_handler_register
run #8: crashed: memory leak in batadv_tvlv_handler_register
run #9: crashed: memory leak in batadv_tvlv_handler_register
testing release v4.7
testing commit 523d939ef98fd712632d93a5a2b588e477a7565e with gcc (GCC) 5.5.0
run #0: OK
run #1: OK
run #2: OK
run #3: crashed: memory leak in batadv_tvlv_handler_register
run #4: crashed: memory leak in batadv_tvlv_handler_register
run #5: crashed: memory leak in batadv_tvlv_handler_register
run #6: crashed: memory leak in batadv_tvlv_handler_register
run #7: crashed: memory leak in batadv_tvlv_handler_register
run #8: crashed: memory leak in batadv_tvlv_handler_register
run #9: crashed: memory leak in batadv_tvlv_handler_register
testing release v4.6
testing commit 2dcd0af568b0cf583645c8a317dd12e344b1c72a with gcc (GCC) 5.5.0
all runs: OK
# git bisect start v4.7 v4.6
Bisecting: 6716 revisions left to test after this (roughly 13 steps)
[0694f0c9e20c47063e4237e5f6649ae5ce5a369a] radix tree test suite: remove dependencies on height
testing commit 0694f0c9e20c47063e4237e5f6649ae5ce5a369a with gcc (GCC) 5.5.0
all runs: OK
# git bisect good 0694f0c9e20c47063e4237e5f6649ae5ce5a369a
Bisecting: 3352 revisions left to test after this (roughly 12 steps)
[e4f7bdc2ec0d0dcc27f7d70db27a620dfdc1f697] Merge branch 'for-4.7-zac' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata
testing commit e4f7bdc2ec0d0dcc27f7d70db27a620dfdc1f697 with gcc (GCC) 5.5.0
run #0: crashed: memory leak in next_bio
run #1: crashed: memory leak in next_bio
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad e4f7bdc2ec0d0dcc27f7d70db27a620dfdc1f697
Bisecting: 1442 revisions left to test after this (roughly 11 steps)
[2f37dd131c5d3a2eac21cd5baf80658b1b02a8ac] Merge tag 'staging-4.7-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging
testing commit 2f37dd131c5d3a2eac21cd5baf80658b1b02a8ac with gcc (GCC) 5.5.0
all runs: OK
# git bisect good 2f37dd131c5d3a2eac21cd5baf80658b1b02a8ac
Bisecting: 737 revisions left to test after this (roughly 10 steps)
[2b669875332fbdff0a7ad559e8662e875e7a1526] drm/msm: Drop load/unload drm_driver ops
testing commit 2b669875332fbdff0a7ad559e8662e875e7a1526 with gcc (GCC) 5.5.0
all runs: OK
# git bisect good 2b669875332fbdff0a7ad559e8662e875e7a1526
Bisecting: 360 revisions left to test after this (roughly 9 steps)
[d5fa33f28401414959b68591075c8053e8276547] Merge branch 'linux-4.7' of git://github.com/skeggsb/linux into drm-next
testing commit d5fa33f28401414959b68591075c8053e8276547 with gcc (GCC) 5.5.0
all runs: OK
# git bisect good d5fa33f28401414959b68591075c8053e8276547
Bisecting: 182 revisions left to test after this (roughly 8 steps)
[07be1337b9e8bfcd855c6e9175b5066a30ac609b] Merge branch 'for-linus-4.7' of git://git.kernel.org/pub/scm/linux/kernel/git/mason/linux-btrfs
testing commit 07be1337b9e8bfcd855c6e9175b5066a30ac609b with gcc (GCC) 5.5.0
run #0: crashed: memory leak in next_bio
run #1: crashed: memory leak in next_bio
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: crashed: memory leak in next_bio
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 07be1337b9e8bfcd855c6e9175b5066a30ac609b
Bisecting: 81 revisions left to test after this (roughly 7 steps)
[c315ef8d9db7f1a0ebd023a395ebdfde1c68057e] Merge branch 'for-chris-4.7' of git://git.kernel.org/pub/scm/linux/kernel/git/fdmanana/linux into for-linus-4.7
testing commit c315ef8d9db7f1a0ebd023a395ebdfde1c68057e with gcc (GCC) 5.5.0
all runs: OK
# git bisect good c315ef8d9db7f1a0ebd023a395ebdfde1c68057e
Bisecting: 41 revisions left to test after this (roughly 5 steps)
[b9ba1eb0336877b9b83556fd30d2becda110fd8c] rtc: tps6586x: rename so module can be autoloaded
testing commit b9ba1eb0336877b9b83556fd30d2becda110fd8c with gcc (GCC) 5.5.0
all runs: OK
# git bisect good b9ba1eb0336877b9b83556fd30d2becda110fd8c
Bisecting: 20 revisions left to test after this (roughly 4 steps)
[4a593c3448312906358b00898c29a95278d82cc9] checkpatch: add support to check already applied git commits
testing commit 4a593c3448312906358b00898c29a95278d82cc9 with gcc (GCC) 5.5.0
run #0: crashed: memory leak in next_bio
run #1: crashed: memory leak in next_bio
run #2: crashed: memory leak in next_bio
run #3: crashed: memory leak in next_bio
run #4: crashed: memory leak in next_bio
run #5: crashed: memory leak in next_bio
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 4a593c3448312906358b00898c29a95278d82cc9
Bisecting: 10 revisions left to test after this (roughly 3 steps)
[d604c324524bf61c68182bb27db64656a78fe911] radix-tree: introduce radix_tree_replace_clear_tags()
testing commit d604c324524bf61c68182bb27db64656a78fe911 with gcc (GCC) 5.5.0
run #0: crashed: memory leak in next_bio
run #1: crashed: memory leak in next_bio
run #2: crashed: memory leak in next_bio
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad d604c324524bf61c68182bb27db64656a78fe911
Bisecting: 4 revisions left to test after this (roughly 2 steps)
[b194d16c27af905d6e3552f4851bc7d9fee4e90f] radix-tree: rename radix_tree_is_indirect_ptr()
testing commit b194d16c27af905d6e3552f4851bc7d9fee4e90f with gcc (GCC) 5.5.0
all runs: OK
# git bisect good b194d16c27af905d6e3552f4851bc7d9fee4e90f
Bisecting: 2 revisions left to test after this (roughly 1 step)
[8c1244de00ef98f73e21eecc42d84b2742fbb4f9] radix-tree: tidy up next_chunk
testing commit 8c1244de00ef98f73e21eecc42d84b2742fbb4f9 with gcc (GCC) 5.5.0
run #0: crashed: memory leak in next_bio
run #1: OK
run #2: OK
run #3: OK
run #4: OK
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad 8c1244de00ef98f73e21eecc42d84b2742fbb4f9
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[af49a63e101eb62376cc1d6bd25b97eb8c691d54] radix-tree: change naming conventions in radix_tree_shrink
testing commit af49a63e101eb62376cc1d6bd25b97eb8c691d54 with gcc (GCC) 5.5.0
run #0: crashed: memory leak in next_bio
run #1: crashed: memory leak in next_bio
run #2: crashed: memory leak in next_bio
run #3: crashed: memory leak in next_bio
run #4: crashed: memory leak in next_bio
run #5: OK
run #6: OK
run #7: OK
run #8: OK
run #9: OK
# git bisect bad af49a63e101eb62376cc1d6bd25b97eb8c691d54
af49a63e101eb62376cc1d6bd25b97eb8c691d54 is the first bad commit
commit af49a63e101eb62376cc1d6bd25b97eb8c691d54
Author: Matthew Wilcox <willy@linux.intel.com>
Date:   Fri May 20 17:03:33 2016 -0700

    radix-tree: change naming conventions in radix_tree_shrink
    
    Use the more standard 'node' and 'child' instead of 'to_free' and
    'slot'.
    
    Signed-off-by: Matthew Wilcox <willy@linux.intel.com>
    Cc: Konstantin Khlebnikov <koct9i@gmail.com>
    Cc: Kirill Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Jan Kara <jack@suse.com>
    Cc: Neil Brown <neilb@suse.de>
    Cc: Ross Zwisler <ross.zwisler@linux.intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

:040000 040000 c35951e1763b3397c645a0546f37c9686dd6c3fb b301859d12a3b72aebbf560d41f9168bfca08d2a M	lib
revisions tested: 32, total time: 7h15m29.870034611s (build: 1h50m6.851151762s, test: 5h15m24.442336354s)
first bad commit: af49a63e101eb62376cc1d6bd25b97eb8c691d54 radix-tree: change naming conventions in radix_tree_shrink
cc: ["akpm@linux-foundation.org" "jack@suse.com" "kirill.shutemov@linux.intel.com" "koct9i@gmail.com" "neilb@suse.de" "ross.zwisler@linux.intel.com" "torvalds@linux-foundation.org" "willy@linux.intel.com"]
crash: memory leak in next_bio
BUG: memory leak
unreferenced object 0xffff8800a7650a00 (size 256):
  comm "ext4lazyinit", pid 4278, jiffies 4294948591 (age 81.190s)
  hex dump (first 32 bytes):
    00 00 00 00 00 00 00 00 40 94 00 1b 02 88 ff ff  ........@.......
    02 00 00 f0 00 00 00 00 11 02 00 00 00 00 00 00  ................
  backtrace:
    [<ffffffff824be693>] kmemleak_alloc+0x23/0x40 mm/kmemleak.c:913
    [<ffffffff8128dc37>] kmemleak_alloc_recursive include/linux/kmemleak.h:47 [inline]
    [<ffffffff8128dc37>] slab_post_alloc_hook mm/slab.h:406 [inline]
    [<ffffffff8128dc37>] slab_alloc mm/slab.c:3447 [inline]
    [<ffffffff8128dc37>] kmem_cache_alloc+0x177/0x270 mm/slab.c:3607
    [<ffffffff81232aa0>] mempool_alloc_slab+0x10/0x20 mm/mempool.c:465
    [<ffffffff81232b80>] mempool_alloc+0x60/0x150 mm/mempool.c:344
    [<ffffffff81796a85>] bio_alloc_bioset+0xb5/0x220 block/bio.c:469
    [<ffffffff817a6cff>] bio_alloc include/linux/bio.h:446 [inline]
    [<ffffffff817a6cff>] next_bio+0x1f/0x50 block/blk-lib.c:15
    [<ffffffff817a6f11>] blkdev_issue_write_same+0x51/0x110 block/blk-lib.c:150
    [<ffffffff817a710d>] blkdev_issue_zeroout+0x9d/0x1d0 block/blk-lib.c:245
    [<ffffffff8137fe41>] sb_issue_zeroout include/linux/blkdev.h:1148 [inline]
    [<ffffffff8137fe41>] ext4_init_inode_table+0x151/0x350 fs/ext4/ialloc.c:1371
    [<ffffffff8139b561>] ext4_run_li_request fs/ext4/super.c:2654 [inline]
    [<ffffffff8139b561>] ext4_lazyinit_thread+0x201/0x340 fs/ext4/super.c:2736
    [<ffffffff81175f74>] kthread+0xc4/0xe0 kernel/kthread.c:209
    [<ffffffff824c469f>] ret_from_fork+0x1f/0x40 arch/x86/entry/entry_64.S:389
    [<ffffffffffffffff>] 0xffffffffffffffff


