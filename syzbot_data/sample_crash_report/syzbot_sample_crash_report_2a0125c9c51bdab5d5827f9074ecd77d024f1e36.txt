ext4 filesystem being mounted at /root/syzkaller-testdir908355133/syzkaller.WCwzPv/1090/file0 supports timestamps until 2038 (0x7fffffff)
======================================================
WARNING: possible circular locking dependency detected
6.3.0-rc4-syzkaller-00051-g8bb95a1662f8 #0 Not tainted
------------------------------------------------------
syz-executor.3/22540 is trying to acquire lock:
ffffffff8c8e73e0 (fs_reclaim){+.+.}-{0:0}, at: might_alloc include/linux/sched/mm.h:271 [inline]
ffffffff8c8e73e0 (fs_reclaim){+.+.}-{0:0}, at: slab_pre_alloc_hook mm/slab.h:728 [inline]
ffffffff8c8e73e0 (fs_reclaim){+.+.}-{0:0}, at: slab_alloc_node mm/slub.c:3434 [inline]
ffffffff8c8e73e0 (fs_reclaim){+.+.}-{0:0}, at: __kmem_cache_alloc_node+0x41/0x320 mm/slub.c:3491

but task is already holding lock:
ffff8880741ca8e8 (&ei->xattr_sem){++++}-{3:3}, at: ext4_write_lock_xattr fs/ext4/xattr.h:155 [inline]
ffff8880741ca8e8 (&ei->xattr_sem){++++}-{3:3}, at: ext4_xattr_set_handle+0x160/0x1510 fs/ext4/xattr.c:2373

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #2 (&ei->xattr_sem){++++}-{3:3}:
       down_write+0x92/0x200 kernel/locking/rwsem.c:1573
       ext4_write_lock_xattr fs/ext4/xattr.h:155 [inline]
       ext4_xattr_set_handle+0x160/0x1510 fs/ext4/xattr.c:2373
       __ext4_set_acl+0x35c/0x5a0 fs/ext4/acl.c:217
       ext4_set_acl+0x484/0x5f0 fs/ext4/acl.c:259
       set_posix_acl+0x25b/0x320 fs/posix_acl.c:956
       vfs_remove_acl+0x276/0x640 fs/posix_acl.c:1208
       ovl_do_remove_acl fs/overlayfs/overlayfs.h:293 [inline]
       ovl_workdir_create+0x4b0/0x900 fs/overlayfs/super.c:821
       ovl_make_workdir fs/overlayfs/super.c:1294 [inline]
       ovl_get_workdir fs/overlayfs/super.c:1444 [inline]
       ovl_fill_super+0x1c8a/0x7270 fs/overlayfs/super.c:2000
       mount_nodev+0x64/0x120 fs/super.c:1426
       legacy_get_tree+0x109/0x220 fs/fs_context.c:610
       vfs_get_tree+0x8d/0x350 fs/super.c:1510
       do_new_mount fs/namespace.c:3042 [inline]
       path_mount+0x1342/0x1e40 fs/namespace.c:3372
       do_mount fs/namespace.c:3385 [inline]
       __do_sys_mount fs/namespace.c:3594 [inline]
       __se_sys_mount fs/namespace.c:3571 [inline]
       __x64_sys_mount+0x283/0x300 fs/namespace.c:3571
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

-> #1 (jbd2_handle){++++}-{0:0}:
       start_this_handle+0xfe7/0x14e0 fs/jbd2/transaction.c:463
       jbd2__journal_start+0x390/0x850 fs/jbd2/transaction.c:520
       __ext4_journal_start_sb+0x411/0x5d0 fs/ext4/ext4_jbd2.c:111
       __ext4_journal_start fs/ext4/ext4_jbd2.h:326 [inline]
       ext4_dirty_inode+0xa5/0x130 fs/ext4/inode.c:6110
       __mark_inode_dirty+0x1e0/0xd60 fs/fs-writeback.c:2421
       mark_inode_dirty_sync include/linux/fs.h:2132 [inline]
       iput.part.0+0x57/0x740 fs/inode.c:1771
       iput+0x5c/0x80 fs/inode.c:1764
       dentry_unlink_inode+0x2b1/0x460 fs/dcache.c:401
       __dentry_kill+0x3c0/0x640 fs/dcache.c:607
       shrink_dentry_list+0x12c/0x4f0 fs/dcache.c:1201
       prune_dcache_sb+0xeb/0x150 fs/dcache.c:1282
       super_cache_scan+0x33a/0x590 fs/super.c:104
       do_shrink_slab+0x428/0xaa0 mm/vmscan.c:853
       shrink_slab+0x175/0x660 mm/vmscan.c:1013
       shrink_one+0x502/0x810 mm/vmscan.c:5343
       shrink_many mm/vmscan.c:5394 [inline]
       lru_gen_shrink_node mm/vmscan.c:5511 [inline]
       shrink_node+0x2064/0x35f0 mm/vmscan.c:6459
       kswapd_shrink_node mm/vmscan.c:7262 [inline]
       balance_pgdat+0xa02/0x1ac0 mm/vmscan.c:7452
       kswapd+0x677/0xd60 mm/vmscan.c:7712
       kthread+0x2e8/0x3a0 kernel/kthread.c:376
       ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:308

-> #0 (fs_reclaim){+.+.}-{0:0}:
       check_prev_add kernel/locking/lockdep.c:3098 [inline]
       check_prevs_add kernel/locking/lockdep.c:3217 [inline]
       validate_chain kernel/locking/lockdep.c:3832 [inline]
       __lock_acquire+0x2ec7/0x5d40 kernel/locking/lockdep.c:5056
       lock_acquire kernel/locking/lockdep.c:5669 [inline]
       lock_acquire+0x1af/0x520 kernel/locking/lockdep.c:5634
       __fs_reclaim_acquire mm/page_alloc.c:4717 [inline]
       fs_reclaim_acquire+0x11d/0x160 mm/page_alloc.c:4731
       might_alloc include/linux/sched/mm.h:271 [inline]
       slab_pre_alloc_hook mm/slab.h:728 [inline]
       slab_alloc_node mm/slub.c:3434 [inline]
       __kmem_cache_alloc_node+0x41/0x320 mm/slub.c:3491
       __do_kmalloc_node mm/slab_common.c:966 [inline]
       __kmalloc_node+0x51/0x1a0 mm/slab_common.c:974
       kmalloc_node include/linux/slab.h:610 [inline]
       kvmalloc_node+0x76/0x1a0 mm/util.c:603
       kvmalloc include/linux/slab.h:737 [inline]
       ext4_xattr_inode_cache_find fs/ext4/xattr.c:1552 [inline]
       ext4_xattr_inode_lookup_create fs/ext4/xattr.c:1595 [inline]
       ext4_xattr_set_entry+0x1d82/0x39e0 fs/ext4/xattr.c:1737
       ext4_xattr_block_set+0xcb7/0x3030 fs/ext4/xattr.c:2043
       ext4_xattr_set_handle+0xd8a/0x1510 fs/ext4/xattr.c:2458
       ext4_xattr_set+0x144/0x360 fs/ext4/xattr.c:2560
       __vfs_setxattr+0x173/0x1e0 fs/xattr.c:203
       __vfs_setxattr_noperm+0x129/0x5f0 fs/xattr.c:237
       __vfs_setxattr_locked+0x1d3/0x260 fs/xattr.c:298
       vfs_setxattr+0x143/0x340 fs/xattr.c:324
       do_setxattr+0x147/0x190 fs/xattr.c:609
       setxattr+0x146/0x160 fs/xattr.c:632
       path_setxattr+0x197/0x1c0 fs/xattr.c:651
       __do_sys_setxattr fs/xattr.c:667 [inline]
       __se_sys_setxattr fs/xattr.c:663 [inline]
       __x64_sys_setxattr+0xc4/0x160 fs/xattr.c:663
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

other info that might help us debug this:

Chain exists of:
  fs_reclaim --> jbd2_handle --> &ei->xattr_sem

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(&ei->xattr_sem);
                               lock(jbd2_handle);
                               lock(&ei->xattr_sem);
  lock(fs_reclaim);

 *** DEADLOCK ***

3 locks held by syz-executor.3/22540:
 #0: ffff88808bc30460 (sb_writers#4){.+.+}-{0:0}, at: path_setxattr+0xb2/0x1c0 fs/xattr.c:649
 #1: ffff8880741cac20 (&sb->s_type->i_mutex_key#8){++++}-{3:3}, at: inode_lock include/linux/fs.h:758 [inline]
 #1: ffff8880741cac20 (&sb->s_type->i_mutex_key#8){++++}-{3:3}, at: vfs_setxattr+0x120/0x340 fs/xattr.c:323
 #2: ffff8880741ca8e8 (&ei->xattr_sem){++++}-{3:3}, at: ext4_write_lock_xattr fs/ext4/xattr.h:155 [inline]
 #2: ffff8880741ca8e8 (&ei->xattr_sem){++++}-{3:3}, at: ext4_xattr_set_handle+0x160/0x1510 fs/ext4/xattr.c:2373

stack backtrace:
CPU: 0 PID: 22540 Comm: syz-executor.3 Not tainted 6.3.0-rc4-syzkaller-00051-g8bb95a1662f8 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/02/2023
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xd9/0x150 lib/dump_stack.c:106
 check_noncircular+0x25f/0x2e0 kernel/locking/lockdep.c:2178
 check_prev_add kernel/locking/lockdep.c:3098 [inline]
 check_prevs_add kernel/locking/lockdep.c:3217 [inline]
 validate_chain kernel/locking/lockdep.c:3832 [inline]
 __lock_acquire+0x2ec7/0x5d40 kernel/locking/lockdep.c:5056
 lock_acquire kernel/locking/lockdep.c:5669 [inline]
 lock_acquire+0x1af/0x520 kernel/locking/lockdep.c:5634
 __fs_reclaim_acquire mm/page_alloc.c:4717 [inline]
 fs_reclaim_acquire+0x11d/0x160 mm/page_alloc.c:4731
 might_alloc include/linux/sched/mm.h:271 [inline]
 slab_pre_alloc_hook mm/slab.h:728 [inline]
 slab_alloc_node mm/slub.c:3434 [inline]
 __kmem_cache_alloc_node+0x41/0x320 mm/slub.c:3491
 __do_kmalloc_node mm/slab_common.c:966 [inline]
 __kmalloc_node+0x51/0x1a0 mm/slab_common.c:974
 kmalloc_node include/linux/slab.h:610 [inline]
 kvmalloc_node+0x76/0x1a0 mm/util.c:603
 kvmalloc include/linux/slab.h:737 [inline]
 ext4_xattr_inode_cache_find fs/ext4/xattr.c:1552 [inline]
 ext4_xattr_inode_lookup_create fs/ext4/xattr.c:1595 [inline]
 ext4_xattr_set_entry+0x1d82/0x39e0 fs/ext4/xattr.c:1737
 ext4_xattr_block_set+0xcb7/0x3030 fs/ext4/xattr.c:2043
 ext4_xattr_set_handle+0xd8a/0x1510 fs/ext4/xattr.c:2458
 ext4_xattr_set+0x144/0x360 fs/ext4/xattr.c:2560
 __vfs_setxattr+0x173/0x1e0 fs/xattr.c:203
 __vfs_setxattr_noperm+0x129/0x5f0 fs/xattr.c:237
 __vfs_setxattr_locked+0x1d3/0x260 fs/xattr.c:298
 vfs_setxattr+0x143/0x340 fs/xattr.c:324
 do_setxattr+0x147/0x190 fs/xattr.c:609
 setxattr+0x146/0x160 fs/xattr.c:632
 path_setxattr+0x197/0x1c0 fs/xattr.c:651
 __do_sys_setxattr fs/xattr.c:667 [inline]
 __se_sys_setxattr fs/xattr.c:663 [inline]
 __x64_sys_setxattr+0xc4/0x160 fs/xattr.c:663
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7f12d008c0f9
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 f1 19 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f12d0e4c168 EFLAGS: 00000246 ORIG_RAX: 00000000000000bc
RAX: ffffffffffffffda RBX: 00007f12d01abf80 RCX: 00007f12d008c0f9
RDX: 00000000200005c0 RSI: 0000000020000180 RDI: 00000000200000c0
RBP: 00007f12d00e7b39 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000002000 R11: 0000000000000246 R12: 0000000000000000
R13: 00007ffc8cb7ee5f R14: 00007f12d0e4c300 R15: 0000000000022000
 </TASK>
