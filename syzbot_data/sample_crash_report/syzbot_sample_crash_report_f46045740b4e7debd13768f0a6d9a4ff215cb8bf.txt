FAULT_INJECTION: forcing a failure.
name failslab, interval 1, probability 0, space 0, times 1
======================================================
WARNING: possible circular locking dependency detected
5.18.0-syzkaller-01850-gaa051d36ce4a #0 Not tainted
------------------------------------------------------
syz-executor354/3608 is trying to acquire lock:
ffffffff8bc92f80 (console_owner){....}-{0:0}, at: console_unlock+0x35e/0xdd0 kernel/printk/printk.c:2770

but task is already holding lock:
ffff888011b7e958 (&port->lock){-...}-{2:2}, at: pty_write+0xea/0x1e0 drivers/tty/pty.c:120

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #2 (&port->lock){-...}-{2:2}:
       __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:110 [inline]
       _raw_spin_lock_irqsave+0x39/0x50 kernel/locking/spinlock.c:162
       tty_port_tty_get+0x1f/0x100 drivers/tty/tty_port.c:306
       tty_port_default_wakeup+0x11/0x40 drivers/tty/tty_port.c:48
       serial8250_tx_chars+0x4f3/0xa50 drivers/tty/serial/8250/8250_port.c:1866
       serial8250_handle_irq.part.0+0x328/0x3d0 drivers/tty/serial/8250/8250_port.c:1953
       serial8250_handle_irq drivers/tty/serial/8250/8250_port.c:1926 [inline]
       serial8250_default_handle_irq+0xb2/0x220 drivers/tty/serial/8250/8250_port.c:1970
       serial8250_interrupt+0xfd/0x200 drivers/tty/serial/8250/8250_core.c:126
       __handle_irq_event_percpu+0x22b/0x880 kernel/irq/handle.c:158
       handle_irq_event_percpu kernel/irq/handle.c:193 [inline]
       handle_irq_event+0xa7/0x1e0 kernel/irq/handle.c:210
       handle_edge_irq+0x25f/0xd00 kernel/irq/chip.c:817
       generic_handle_irq_desc include/linux/irqdesc.h:158 [inline]
       handle_irq arch/x86/kernel/irq.c:231 [inline]
       __common_interrupt+0x9d/0x210 arch/x86/kernel/irq.c:250
       common_interrupt+0xa4/0xc0 arch/x86/kernel/irq.c:240
       asm_common_interrupt+0x27/0x40 arch/x86/include/asm/idtentry.h:640
       native_safe_halt arch/x86/include/asm/irqflags.h:51 [inline]
       arch_safe_halt arch/x86/include/asm/irqflags.h:89 [inline]
       acpi_safe_halt drivers/acpi/processor_idle.c:111 [inline]
       acpi_idle_do_entry+0x1c6/0x250 drivers/acpi/processor_idle.c:554
       acpi_idle_enter+0x369/0x510 drivers/acpi/processor_idle.c:691
       cpuidle_enter_state+0x1b1/0xc80 drivers/cpuidle/cpuidle.c:237
       cpuidle_enter+0x4a/0xa0 drivers/cpuidle/cpuidle.c:351
       call_cpuidle kernel/sched/idle.c:155 [inline]
       cpuidle_idle_call kernel/sched/idle.c:236 [inline]
       do_idle+0x3e8/0x590 kernel/sched/idle.c:303
       cpu_startup_entry+0x14/0x20 kernel/sched/idle.c:400
       rest_init+0x169/0x270 init/main.c:726
       arch_call_rest_init+0xf/0x14 init/main.c:882
       start_kernel+0x46e/0x48f init/main.c:1137
       secondary_startup_64_no_verify+0xce/0xdb

-> #1 (&port_lock_key){-...}-{2:2}:
       __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:110 [inline]
       _raw_spin_lock_irqsave+0x39/0x50 kernel/locking/spinlock.c:162
       serial8250_console_write+0x9cb/0xc30 drivers/tty/serial/8250/8250_port.c:3358
       call_console_drivers kernel/printk/printk.c:1952 [inline]
       console_unlock+0x9bc/0xdd0 kernel/printk/printk.c:2774
       vprintk_emit+0x1b4/0x5f0 kernel/printk/printk.c:2272
       vprintk+0x80/0x90 kernel/printk/printk_safe.c:50
       _printk+0xba/0xed kernel/printk/printk.c:2293
       register_console kernel/printk/printk.c:3131 [inline]
       register_console+0x410/0x7c0 kernel/printk/printk.c:3012
       univ8250_console_init+0x3a/0x46 drivers/tty/serial/8250/8250_core.c:679
       console_init+0x3c1/0x58d kernel/printk/printk.c:3231
       start_kernel+0x2fa/0x48f init/main.c:1065
       secondary_startup_64_no_verify+0xce/0xdb

-> #0 (console_owner){....}-{0:0}:
       check_prev_add kernel/locking/lockdep.c:3064 [inline]
       check_prevs_add kernel/locking/lockdep.c:3183 [inline]
       validate_chain kernel/locking/lockdep.c:3798 [inline]
       __lock_acquire+0x2ac6/0x56c0 kernel/locking/lockdep.c:5022
       lock_acquire kernel/locking/lockdep.c:5634 [inline]
       lock_acquire+0x1ab/0x570 kernel/locking/lockdep.c:5599
       console_lock_spinning_enable kernel/printk/printk.c:1794 [inline]
       console_unlock+0x3b1/0xdd0 kernel/printk/printk.c:2771
       vprintk_emit+0x1b4/0x5f0 kernel/printk/printk.c:2272
       vprintk+0x80/0x90 kernel/printk/printk_safe.c:50
       _printk+0xba/0xed kernel/printk/printk.c:2293
       fail_dump lib/fault-inject.c:45 [inline]
       should_fail+0x472/0x5a0 lib/fault-inject.c:146
       should_failslab+0x5/0x10 mm/slab_common.c:1313
       slab_pre_alloc_hook mm/slab.h:724 [inline]
       slab_alloc_node mm/slub.c:3131 [inline]
       slab_alloc mm/slub.c:3225 [inline]
       __kmalloc+0x7e/0x350 mm/slub.c:4410
       kmalloc include/linux/slab.h:586 [inline]
       tty_buffer_alloc+0x23f/0x2a0 drivers/tty/tty_buffer.c:178
       __tty_buffer_request_room+0x156/0x2a0 drivers/tty/tty_buffer.c:274
       tty_insert_flip_string_fixed_flag+0x8c/0x240 drivers/tty/tty_buffer.c:321
       tty_insert_flip_string include/linux/tty_flip.h:41 [inline]
       pty_write+0x11c/0x1e0 drivers/tty/pty.c:122
       n_tty_write+0xa7a/0xfc0 drivers/tty/n_tty.c:2271
       do_tty_write drivers/tty/tty_io.c:1024 [inline]
       file_tty_write.constprop.0+0x520/0x900 drivers/tty/tty_io.c:1095
       call_write_iter include/linux/fs.h:2052 [inline]
       new_sync_write+0x38a/0x560 fs/read_write.c:504
       vfs_write+0x7c0/0xac0 fs/read_write.c:591
       ksys_write+0x127/0x250 fs/read_write.c:644
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x46/0xb0

other info that might help us debug this:

Chain exists of:
  console_owner --> &port_lock_key --> &port->lock

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(&port->lock);
                               lock(&port_lock_key);
                               lock(&port->lock);
  lock(console_owner);

 *** DEADLOCK ***

6 locks held by syz-executor354/3608:
 #0: ffff88807dfa3098 (&tty->ldisc_sem){++++}-{0:0}, at: tty_ldisc_ref_wait+0x22/0x80 drivers/tty/tty_ldisc.c:244
 #1: ffff88807dfa3130 (&tty->atomic_write_lock){+.+.}-{3:3}, at: tty_write_lock drivers/tty/tty_io.c:950 [inline]
 #1: ffff88807dfa3130 (&tty->atomic_write_lock){+.+.}-{3:3}, at: do_tty_write drivers/tty/tty_io.c:973 [inline]
 #1: ffff88807dfa3130 (&tty->atomic_write_lock){+.+.}-{3:3}, at: file_tty_write.constprop.0+0x299/0x900 drivers/tty/tty_io.c:1095
 #2: ffff88807dfa32e8 (&tty->termios_rwsem){++++}-{3:3}, at: n_tty_write+0x1bf/0xfc0 drivers/tty/n_tty.c:2231
 #3: ffffc900013da378 (&ldata->output_lock){+.+.}-{3:3}, at: n_tty_write+0xa47/0xfc0 drivers/tty/n_tty.c:2270
 #4: ffff888011b7e958 (&port->lock){-...}-{2:2}, at: pty_write+0xea/0x1e0 drivers/tty/pty.c:120
 #5: ffffffff8bd733c0 (console_lock){+.+.}-{0:0}, at: vprintk+0x80/0x90 kernel/printk/printk_safe.c:50

stack backtrace:
CPU: 1 PID: 3608 Comm: syz-executor354 Not tainted 5.18.0-syzkaller-01850-gaa051d36ce4a #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106
 check_noncircular+0x25f/0x2e0 kernel/locking/lockdep.c:2144
 check_prev_add kernel/locking/lockdep.c:3064 [inline]
 check_prevs_add kernel/locking/lockdep.c:3183 [inline]
 validate_chain kernel/locking/lockdep.c:3798 [inline]
 __lock_acquire+0x2ac6/0x56c0 kernel/locking/lockdep.c:5022
 lock_acquire kernel/locking/lockdep.c:5634 [inline]
 lock_acquire+0x1ab/0x570 kernel/locking/lockdep.c:5599
 console_lock_spinning_enable kernel/printk/printk.c:1794 [inline]
 console_unlock+0x3b1/0xdd0 kernel/printk/printk.c:2771
 vprintk_emit+0x1b4/0x5f0 kernel/printk/printk.c:2272
 vprintk+0x80/0x90 kernel/printk/printk_safe.c:50
 _printk+0xba/0xed kernel/printk/printk.c:2293
 fail_dump lib/fault-inject.c:45 [inline]
 should_fail+0x472/0x5a0 lib/fault-inject.c:146
 should_failslab+0x5/0x10 mm/slab_common.c:1313
 slab_pre_alloc_hook mm/slab.h:724 [inline]
 slab_alloc_node mm/slub.c:3131 [inline]
 slab_alloc mm/slub.c:3225 [inline]
 __kmalloc+0x7e/0x350 mm/slub.c:4410
 kmalloc include/linux/slab.h:586 [inline]
 tty_buffer_alloc+0x23f/0x2a0 drivers/tty/tty_buffer.c:178
 __tty_buffer_request_room+0x156/0x2a0 drivers/tty/tty_buffer.c:274
 tty_insert_flip_string_fixed_flag+0x8c/0x240 drivers/tty/tty_buffer.c:321
 tty_insert_flip_string include/linux/tty_flip.h:41 [inline]
 pty_write+0x11c/0x1e0 drivers/tty/pty.c:122
 n_tty_write+0xa7a/0xfc0 drivers/tty/n_tty.c:2271
 do_tty_write drivers/tty/tty_io.c:1024 [inline]
 file_tty_write.constprop.0+0x520/0x900 drivers/tty/tty_io.c:1095
 call_write_iter include/linux/fs.h:2052 [inline]
 new_sync_write+0x38a/0x560 fs/read_write.c:504
 vfs_write+0x7c0/0xac0 fs/read_write.c:591
 ksys_write+0x127/0x250 fs/read_write.c:644
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x46/0xb0
RIP: 0033:0x7f9917a46669
Code: 28 c3 e8 2a 14 00 00 66 2e 0f 1f 84 00 00 00 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fff90698ff8 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
RAX: ffffffffffffffda RBX: 0000000000000001 RCX: 00007f9917a46669
RDX: 000000000000ff2e RSI: 00000000200000c0 RDI: 0000000000000003
RBP: 00007fff90699000 R08: 0000000000000001 R09: 00007f9917a00033
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000004
R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
 </TASK>
CPU: 1 PID: 3608 Comm: syz-executor354 Not tainted 5.18.0-syzkaller-01850-gaa051d36ce4a #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106
 fail_dump lib/fault-inject.c:52 [inline]
 should_fail.cold+0x5/0xa lib/fault-inject.c:146
 should_failslab+0x5/0x10 mm/slab_common.c:1313
 slab_pre_alloc_hook mm/slab.h:724 [inline]
 slab_alloc_node mm/slub.c:3131 [inline]
 slab_alloc mm/slub.c:3225 [inline]
 __kmalloc+0x7e/0x350 mm/slub.c:4410
 kmalloc include/linux/slab.h:586 [inline]
 tty_buffer_alloc+0x23f/0x2a0 drivers/tty/tty_buffer.c:178
 __tty_buffer_request_room+0x156/0x2a0 drivers/tty/tty_buffer.c:274
 tty_insert_flip_string_fixed_flag+0x8c/0x240 drivers/tty/tty_buffer.c:321
 tty_insert_flip_string include/linux/tty_flip.h:41 [inline]
 pty_write+0x11c/0x1e0 drivers/tty/pty.c:122
 n_tty_write+0xa7a/0xfc0 drivers/tty/n_tty.c:2271
 do_tty_write drivers/tty/tty_io.c:1024 [inline]
 file_tty_write.constprop.0+0x520/0x900 drivers/tty/tty_io.c:1095
 call_write_iter include/linux/fs.h:2052 [inline]
 new_sync_write+0x38a/0x560 fs/read_write.c:504
 vfs_write+0x7c0/0xac0 fs/read_write.c:591
 ksys_write+0x127/0x250 fs/read_write.c:644
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x46/0xb0
RIP: 0033:0x7f9917a46669
Code: 28 c3 e8 2a 14 00 00 66 2e 0f 1f 84 00 00 00 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fff90698ff8 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
RAX: ffffffffffffffda RBX: 0000000000000001 RCX: 00007f9917a46669
RDX: 000000000000ff2e RSI: 00000000200000c0 RDI: 0000000000000003
RBP: 00007fff90699000 R08: 0000000000000001 R09: 00007f9917a00033
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000004
R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
 </TASK>
