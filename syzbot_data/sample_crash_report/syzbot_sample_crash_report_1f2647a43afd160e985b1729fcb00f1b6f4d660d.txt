general protection fault, probably for non-canonical address 0xdffffc0000000025: 0000 [#1] PREEMPT SMP KASAN
KASAN: null-ptr-deref in range [0x0000000000000128-0x000000000000012f]
CPU: 0 PID: 3608 Comm: syz-executor126 Not tainted 6.0.0-rc3-syzkaller-00007-gdcf8e5633e2e #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 07/22/2022
RIP: 0010:__lock_acquire+0xd83/0x56d0 kernel/locking/lockdep.c:4923
Code: 9b 0e 41 bf 01 00 00 00 0f 86 c8 00 00 00 89 05 23 46 9b 0e e9 bd 00 00 00 48 b8 00 00 00 00 00 fc ff df 4c 89 f2 48 c1 ea 03 <80> 3c 02 00 0f 85 4e 31 00 00 49 81 3e 60 64 51 8f 0f 84 4c f3 ff
RSP: 0018:ffffc9000382f7a8 EFLAGS: 00010002
RAX: dffffc0000000000 RBX: 1ffff92000705f24 RCX: 0000000000000001
RDX: 0000000000000025 RSI: 0000000000000000 RDI: 0000000000000001
RBP: 0000000000000000 R08: 0000000000000001 R09: 0000000000000000
R10: fffffbfff1bbd2d2 R11: 0000000000000000 R12: 0000000000000000
R13: ffff8880775dd880 R14: 0000000000000128 R15: 0000000000000001
FS:  000055555625f300(0000) GS:ffff8880b9a00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007fc8bc473130 CR3: 00000000756ad000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 <TASK>
 lock_acquire kernel/locking/lockdep.c:5666 [inline]
 lock_acquire+0x1ab/0x570 kernel/locking/lockdep.c:5631
 down_read+0x98/0x450 kernel/locking/rwsem.c:1499
 mmap_read_lock include/linux/mmap_lock.h:117 [inline]
 binder_alloc_print_pages+0x64/0x440 drivers/android/binder_alloc.c:936
 print_binder_proc_stats drivers/android/binder.c:6289 [inline]
 stats_show+0x417/0x620 drivers/android/binder.c:6352
 seq_read_iter+0x4f5/0x1280 fs/seq_file.c:230
 seq_read+0x16d/0x210 fs/seq_file.c:162
 full_proxy_read+0x118/0x180 fs/debugfs/file.c:231
 vfs_read+0x257/0x930 fs/read_write.c:468
 ksys_read+0x127/0x250 fs/read_write.c:607
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7fc8bc400d89
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 51 15 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007ffd55bb67d8 EFLAGS: 00000246 ORIG_RAX: 0000000000000000
RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007fc8bc400d89
RDX: 0000000000002053 RSI: 0000000020004200 RDI: 0000000000000003
RBP: 0000000000000000 R08: 00007ffd55bb6800 R09: 00007ffd55bb6800
R10: 00007ffd55bb6800 R11: 0000000000000246 R12: 00007ffd55bb67fc
R13: 00007ffd55bb6810 R14: 00007ffd55bb6850 R15: 0000000000000000
 </TASK>
Modules linked in:
---[ end trace 0000000000000000 ]---
RIP: 0010:__lock_acquire+0xd83/0x56d0 kernel/locking/lockdep.c:4923
Code: 9b 0e 41 bf 01 00 00 00 0f 86 c8 00 00 00 89 05 23 46 9b 0e e9 bd 00 00 00 48 b8 00 00 00 00 00 fc ff df 4c 89 f2 48 c1 ea 03 <80> 3c 02 00 0f 85 4e 31 00 00 49 81 3e 60 64 51 8f 0f 84 4c f3 ff
RSP: 0018:ffffc9000382f7a8 EFLAGS: 00010002
RAX: dffffc0000000000 RBX: 1ffff92000705f24 RCX: 0000000000000001
RDX: 0000000000000025 RSI: 0000000000000000 RDI: 0000000000000001
RBP: 0000000000000000 R08: 0000000000000001 R09: 0000000000000000
R10: fffffbfff1bbd2d2 R11: 0000000000000000 R12: 0000000000000000
R13: ffff8880775dd880 R14: 0000000000000128 R15: 0000000000000001
FS:  000055555625f300(0000) GS:ffff8880b9a00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007fc8bc473130 CR3: 00000000756ad000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
----------------
Code disassembly (best guess), 2 bytes skipped:
   0:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   6:	0f 86 c8 00 00 00    	jbe    0xd4
   c:	89 05 23 46 9b 0e    	mov    %eax,0xe9b4623(%rip)        # 0xe9b4635
  12:	e9 bd 00 00 00       	jmpq   0xd4
  17:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax
  1e:	fc ff df
  21:	4c 89 f2             	mov    %r14,%rdx
  24:	48 c1 ea 03          	shr    $0x3,%rdx
* 28:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1) <-- trapping instruction
  2c:	0f 85 4e 31 00 00    	jne    0x3180
  32:	49 81 3e 60 64 51 8f 	cmpq   $0xffffffff8f516460,(%r14)
  39:	0f                   	.byte 0xf
  3a:	84 4c f3 ff          	test   %cl,-0x1(%rbx,%rsi,8)
