======================================================
WARNING: possible circular locking dependency detected
6.3.0-rc6-syzkaller-00034-ge62252bc55b6 #0 Not tainted
------------------------------------------------------
syz-executor.5/11817 is trying to acquire lock:
ffff8880747eac20 (&ea_inode->i_rwsem#8/1){+.+.}-{3:3}, at: inode_lock include/linux/fs.h:758 [inline]
ffff8880747eac20 (&ea_inode->i_rwsem#8/1){+.+.}-{3:3}, at: ext4_xattr_inode_iget+0x2b8/0x660 fs/ext4/xattr.c:474

but task is already holding lock:
ffff8880747edcd0 (&ei->i_data_sem){++++}-{3:3}, at: ext4_setattr+0x198b/0x2870 fs/ext4/inode.c:5588

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #1 (&ei->i_data_sem){++++}-{3:3}:
       down_write+0x92/0x200 kernel/locking/rwsem.c:1573
       ext4_update_i_disksize fs/ext4/ext4.h:3384 [inline]
       ext4_xattr_inode_write fs/ext4/xattr.c:1463 [inline]
       ext4_xattr_inode_lookup_create fs/ext4/xattr.c:1612 [inline]
       ext4_xattr_set_entry+0x30c5/0x39e0 fs/ext4/xattr.c:1737
       ext4_xattr_block_set+0xcb7/0x3030 fs/ext4/xattr.c:2043
       ext4_xattr_set_handle+0xd8a/0x1510 fs/ext4/xattr.c:2458
       ext4_xattr_set+0x144/0x360 fs/ext4/xattr.c:2560
       __vfs_setxattr+0x173/0x1e0 fs/xattr.c:203
       __vfs_setxattr_noperm+0x129/0x5f0 fs/xattr.c:237
       __vfs_setxattr_locked+0x1d3/0x260 fs/xattr.c:298
       vfs_setxattr+0x143/0x340 fs/xattr.c:324
       do_setxattr+0x147/0x190 fs/xattr.c:609
       setxattr+0x146/0x160 fs/xattr.c:632
       path_setxattr+0x197/0x1c0 fs/xattr.c:651
       __do_sys_lsetxattr fs/xattr.c:674 [inline]
       __se_sys_lsetxattr fs/xattr.c:670 [inline]
       __x64_sys_lsetxattr+0xc1/0x160 fs/xattr.c:670
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

-> #0 (
&ea_inode->i_rwsem
#8/1
){+.+.}-{3:3}
:
       check_prev_add kernel/locking/lockdep.c:3098 [inline]
       check_prevs_add kernel/locking/lockdep.c:3217 [inline]
       validate_chain kernel/locking/lockdep.c:3832 [inline]
       __lock_acquire+0x2ec7/0x5d40 kernel/locking/lockdep.c:5056
       lock_acquire kernel/locking/lockdep.c:5669 [inline]
       lock_acquire+0x1af/0x520 kernel/locking/lockdep.c:5634
       down_write+0x92/0x200 kernel/locking/rwsem.c:1573
       inode_lock include/linux/fs.h:758 [inline]
       ext4_xattr_inode_iget+0x2b8/0x660 fs/ext4/xattr.c:474
       ext4_xattr_inode_get+0x162/0x830 fs/ext4/xattr.c:551
       ext4_xattr_move_to_block fs/ext4/xattr.c:2641 [inline]
       ext4_xattr_make_inode_space fs/ext4/xattr.c:2743 [inline]
       ext4_expand_extra_isize_ea+0xf6d/0x1880 fs/ext4/xattr.c:2835
       __ext4_expand_extra_isize+0x33e/0x470 fs/ext4/inode.c:5960
       ext4_try_to_expand_extra_isize fs/ext4/inode.c:6003 [inline]
       __ext4_mark_inode_dirty+0x51b/0x800 fs/ext4/inode.c:6081
       ext4_setattr+0x1a05/0x2870 fs/ext4/inode.c:5591
       notify_change+0xb2c/0x1180 fs/attr.c:482
       do_truncate+0x143/0x200 fs/open.c:66
       handle_truncate fs/namei.c:3219 [inline]
       do_open fs/namei.c:3564 [inline]
       path_openat+0x2083/0x2750 fs/namei.c:3715
       do_filp_open+0x1ba/0x410 fs/namei.c:3742
       do_sys_openat2+0x16d/0x4c0 fs/open.c:1348
       do_sys_open fs/open.c:1364 [inline]
       __do_sys_open fs/open.c:1372 [inline]
       __se_sys_open fs/open.c:1368 [inline]
       __x64_sys_open+0x11d/0x1c0 fs/open.c:1368
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

other info that might help us debug this:

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(&ei->i_data_sem
);
                               lock(
&ea_inode->i_rwsem
#8/1
);
                               lock(
&ei->i_data_sem);
  lock(&ea_inode->i_rwsem
#8/1
);

 *** DEADLOCK ***

5 locks held by syz-executor.5/11817:
 #0: ffff888036fa8460
 (sb_writers#4
){.+.+}-{0:0}
, at: do_open fs/namei.c:3553 [inline]
, at: path_openat+0x19a4/0x2750 fs/namei.c:3715
 #1: ffff8880747ede48
 (&sb->s_type->i_mutex_key#8){++++}-{3:3}, at: inode_lock include/linux/fs.h:758 [inline]
 (&sb->s_type->i_mutex_key#8){++++}-{3:3}, at: do_truncate+0x131/0x200 fs/open.c:64
 #2: ffff8880747edfe8
 (mapping.invalidate_lock
){++++}-{3:3}
, at: filemap_invalidate_lock include/linux/fs.h:803 [inline]
, at: ext4_setattr+0x6f5/0x2870 fs/ext4/inode.c:5548
 #3: ffff8880747edcd0
 (&ei->i_data_sem
){++++}-{3:3}
, at: ext4_setattr+0x198b/0x2870 fs/ext4/inode.c:5588
 #4: ffff8880747edb10
 (&ei->xattr_sem
){++++}-{3:3}
, at: ext4_write_trylock_xattr fs/ext4/xattr.h:162 [inline]
, at: ext4_try_to_expand_extra_isize fs/ext4/inode.c:6000 [inline]
, at: __ext4_mark_inode_dirty+0x48f/0x800 fs/ext4/inode.c:6081

stack backtrace:
CPU: 0 PID: 11817 Comm: syz-executor.5 Not tainted 6.3.0-rc6-syzkaller-00034-ge62252bc55b6 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/30/2023
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xd9/0x150 lib/dump_stack.c:106
 check_noncircular+0x25f/0x2e0 kernel/locking/lockdep.c:2178
 check_prev_add kernel/locking/lockdep.c:3098 [inline]
 check_prevs_add kernel/locking/lockdep.c:3217 [inline]
 validate_chain kernel/locking/lockdep.c:3832 [inline]
 __lock_acquire+0x2ec7/0x5d40 kernel/locking/lockdep.c:5056
 lock_acquire kernel/locking/lockdep.c:5669 [inline]
 lock_acquire+0x1af/0x520 kernel/locking/lockdep.c:5634
 down_write+0x92/0x200 kernel/locking/rwsem.c:1573
 inode_lock include/linux/fs.h:758 [inline]
 ext4_xattr_inode_iget+0x2b8/0x660 fs/ext4/xattr.c:474
 ext4_xattr_inode_get+0x162/0x830 fs/ext4/xattr.c:551
 ext4_xattr_move_to_block fs/ext4/xattr.c:2641 [inline]
 ext4_xattr_make_inode_space fs/ext4/xattr.c:2743 [inline]
 ext4_expand_extra_isize_ea+0xf6d/0x1880 fs/ext4/xattr.c:2835
 __ext4_expand_extra_isize+0x33e/0x470 fs/ext4/inode.c:5960
 ext4_try_to_expand_extra_isize fs/ext4/inode.c:6003 [inline]
 __ext4_mark_inode_dirty+0x51b/0x800 fs/ext4/inode.c:6081
 ext4_setattr+0x1a05/0x2870 fs/ext4/inode.c:5591
 notify_change+0xb2c/0x1180 fs/attr.c:482
 do_truncate+0x143/0x200 fs/open.c:66
 handle_truncate fs/namei.c:3219 [inline]
 do_open fs/namei.c:3564 [inline]
 path_openat+0x2083/0x2750 fs/namei.c:3715
 do_filp_open+0x1ba/0x410 fs/namei.c:3742
 do_sys_openat2+0x16d/0x4c0 fs/open.c:1348
 do_sys_open fs/open.c:1364 [inline]
 __do_sys_open fs/open.c:1372 [inline]
 __se_sys_open fs/open.c:1368 [inline]
 __x64_sys_open+0x11d/0x1c0 fs/open.c:1368
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7f8af2c8c169
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 f1 19 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f8af3905168 EFLAGS: 00000246 ORIG_RAX: 0000000000000002
RAX: ffffffffffffffda RBX: 00007f8af2dabf80 RCX: 00007f8af2c8c169
RDX: 0000000000000000 RSI: 0000000000000281 RDI: 00000000200000c0
RBP: 00007f8af2ce7ca1 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 00007fffe992fe5f R14: 00007f8af3905300 R15: 0000000000022000
 </TASK>
