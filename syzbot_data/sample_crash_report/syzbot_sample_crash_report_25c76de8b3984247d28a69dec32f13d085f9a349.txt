======================================================
WARNING: possible circular locking dependency detected
6.3.0-rc7-syzkaller-00089-gcb0856346a60 #0 Not tainted
------------------------------------------------------
syz-executor.5/22220 is trying to acquire lock:
ffff88807bc352c8 (&ei->i_data_sem/1){+.+.}-{3:3}, at: ext4_move_extents+0x37d/0xe40 fs/ext4/move_extent.c:620

but task is already holding lock:
ffff88807753b4b0 (&ei->i_data_sem/2){++++}-{3:3}, at: ext4_double_down_write_data_sem+0x2c/0x50

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #3 (&ei->i_data_sem/2){++++}-{3:3}:
       lock_acquire+0x1e1/0x520 kernel/locking/lockdep.c:5669
       down_read+0x3d/0x50 kernel/locking/rwsem.c:1520
       ext4_map_blocks+0x38e/0x1cf0 fs/ext4/inode.c:574
       ext4_getblk+0x1ef/0x7c0 fs/ext4/inode.c:863
       ext4_bread+0x2e/0x180 fs/ext4/inode.c:919
       ext4_quota_write+0x222/0x580 fs/ext4/super.c:7135
       write_blk fs/quota/quota_tree.c:64 [inline]
       get_free_dqblk+0x336/0x690 fs/quota/quota_tree.c:130
       do_insert_tree+0x265/0x1a60 fs/quota/quota_tree.c:340
       do_insert_tree+0x70f/0x1a60 fs/quota/quota_tree.c:375
       do_insert_tree+0x70f/0x1a60 fs/quota/quota_tree.c:375
       do_insert_tree+0x70f/0x1a60 fs/quota/quota_tree.c:375
       dq_insert_tree fs/quota/quota_tree.c:401 [inline]
       qtree_write_dquot+0x3bd/0x530 fs/quota/quota_tree.c:420
       v2_write_dquot+0x120/0x190 fs/quota/quota_v2.c:358
       dquot_acquire+0x351/0x680 fs/quota/dquot.c:444
       ext4_acquire_dquot+0x2e6/0x400 fs/ext4/super.c:6770
       dqget+0x98f/0xdb0 fs/quota/dquot.c:914
       __dquot_initialize+0x2dd/0xe20 fs/quota/dquot.c:1492
       ext4_create+0xb5/0x550 fs/ext4/namei.c:2801
       lookup_open fs/namei.c:3416 [inline]
       open_last_lookups fs/namei.c:3484 [inline]
       path_openat+0x13df/0x3170 fs/namei.c:3712
       do_filp_open+0x234/0x490 fs/namei.c:3742
       do_sys_openat2+0x13f/0x500 fs/open.c:1348
       do_sys_open fs/open.c:1364 [inline]
       __do_sys_open fs/open.c:1372 [inline]
       __se_sys_open fs/open.c:1368 [inline]
       __x64_sys_open+0x225/0x270 fs/open.c:1368
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

-> #2 (&s->s_dquot.dqio_sem){++++}-{3:3}:
       lock_acquire+0x1e1/0x520 kernel/locking/lockdep.c:5669
       down_read+0x3d/0x50 kernel/locking/rwsem.c:1520
       v2_read_dquot+0x4e/0x110 fs/quota/quota_v2.c:332
       dquot_acquire+0x18c/0x680 fs/quota/dquot.c:435
       ext4_acquire_dquot+0x2e6/0x400 fs/ext4/super.c:6770
       dqget+0x98f/0xdb0 fs/quota/dquot.c:914
       __dquot_initialize+0x2dd/0xe20 fs/quota/dquot.c:1492
       ext4_process_orphan+0x57/0x2d0 fs/ext4/orphan.c:329
       ext4_orphan_cleanup+0xb21/0x13c0 fs/ext4/orphan.c:474
       __ext4_fill_super fs/ext4/super.c:5509 [inline]
       ext4_fill_super+0x8239/0x8990 fs/ext4/super.c:5637
       get_tree_bdev+0x402/0x620 fs/super.c:1303
       vfs_get_tree+0x8c/0x270 fs/super.c:1510
       do_new_mount+0x28f/0xae0 fs/namespace.c:3042
       do_mount fs/namespace.c:3385 [inline]
       __do_sys_mount fs/namespace.c:3594 [inline]
       __se_sys_mount+0x2d9/0x3c0 fs/namespace.c:3571
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

-> #1 (&dquot->dq_lock){+.+.}-{3:3}:
       lock_acquire+0x1e1/0x520 kernel/locking/lockdep.c:5669
       __mutex_lock_common+0x1d8/0x2530 kernel/locking/mutex.c:603
       __mutex_lock kernel/locking/mutex.c:747 [inline]
       mutex_lock_nested+0x1b/0x20 kernel/locking/mutex.c:799
       dquot_commit+0x5b/0x520 fs/quota/dquot.c:479
       ext4_write_dquot+0x1f2/0x2c0 fs/ext4/super.c:6754
       mark_dquot_dirty fs/quota/dquot.c:346 [inline]
       mark_all_dquot_dirty fs/quota/dquot.c:384 [inline]
       __dquot_alloc_space+0x54c/0xf50 fs/quota/dquot.c:1722
       dquot_alloc_space_nodirty include/linux/quotaops.h:300 [inline]
       dquot_alloc_space include/linux/quotaops.h:313 [inline]
       dquot_alloc_block include/linux/quotaops.h:337 [inline]
       ext4_mb_new_blocks+0x111a/0x45f0 fs/ext4/mballoc.c:5571
       ext4_new_meta_blocks+0x20a/0x4f0 fs/ext4/balloc.c:700
       ext4_ext_grow_indepth fs/ext4/extents.c:1329 [inline]
       ext4_ext_create_new_leaf fs/ext4/extents.c:1435 [inline]
       ext4_ext_insert_extent+0xf47/0x4e60 fs/ext4/extents.c:2102
       ext4_split_extent_at+0x812/0x1100 fs/ext4/extents.c:3253
       ext4_force_split_extent_at fs/ext4/extents.c:338 [inline]
       ext4_swap_extents+0x144e/0x2290 fs/ext4/extents.c:5722
       move_extent_per_page+0x1a06/0x3bf0 fs/ext4/move_extent.c:372
       ext4_move_extents+0x953/0xe40 fs/ext4/move_extent.c:682
       __ext4_ioctl fs/ext4/ioctl.c:1352 [inline]
       ext4_ioctl+0x3841/0x5b30 fs/ext4/ioctl.c:1608
       vfs_ioctl fs/ioctl.c:51 [inline]
       __do_sys_ioctl fs/ioctl.c:870 [inline]
       __se_sys_ioctl+0xf1/0x160 fs/ioctl.c:856
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

-> #0 (&ei->i_data_sem/1){+.+.}-{3:3}:
       check_prev_add kernel/locking/lockdep.c:3098 [inline]
       check_prevs_add kernel/locking/lockdep.c:3217 [inline]
       validate_chain+0x166b/0x58e0 kernel/locking/lockdep.c:3832
       __lock_acquire+0x125b/0x1f80 kernel/locking/lockdep.c:5056
       lock_acquire+0x1e1/0x520 kernel/locking/lockdep.c:5669
       down_write_nested+0x3d/0x50 kernel/locking/rwsem.c:1689
       ext4_move_extents+0x37d/0xe40 fs/ext4/move_extent.c:620
       __ext4_ioctl fs/ext4/ioctl.c:1352 [inline]
       ext4_ioctl+0x3841/0x5b30 fs/ext4/ioctl.c:1608
       vfs_ioctl fs/ioctl.c:51 [inline]
       __do_sys_ioctl fs/ioctl.c:870 [inline]
       __se_sys_ioctl+0xf1/0x160 fs/ioctl.c:856
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

other info that might help us debug this:

Chain exists of:
  &ei->i_data_sem/1 --> &s->s_dquot.dqio_sem --> &ei->i_data_sem/2

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(&ei->i_data_sem/2);
                               lock(&s->s_dquot.dqio_sem);
                               lock(&ei->i_data_sem/2);
  lock(&ei->i_data_sem/1);

 *** DEADLOCK ***

4 locks held by syz-executor.5/22220:
 #0: ffff8880295f4460 (sb_writers#4){.+.+}-{0:0}, at: mnt_want_write_file+0x5e/0x1f0 fs/namespace.c:438
 #1: ffff88807753b628 (&sb->s_type->i_mutex_key#7){++++}-{3:3}, at: inode_lock include/linux/fs.h:758 [inline]
 #1: ffff88807753b628 (&sb->s_type->i_mutex_key#7){++++}-{3:3}, at: lock_two_nondirectories+0xe2/0x140 fs/inode.c:1122
 #2: ffff88807bc35440 (&sb->s_type->i_mutex_key#7/4){+.+.}-{3:3}, at: ext4_move_extents+0x362/0xe40 fs/ext4/move_extent.c:613
 #3: ffff88807753b4b0 (&ei->i_data_sem/2){++++}-{3:3}, at: ext4_double_down_write_data_sem+0x2c/0x50

stack backtrace:
CPU: 0 PID: 22220 Comm: syz-executor.5 Not tainted 6.3.0-rc7-syzkaller-00089-gcb0856346a60 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/30/2023
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x1e7/0x2d0 lib/dump_stack.c:106
 check_noncircular+0x2fe/0x3b0 kernel/locking/lockdep.c:2178
 check_prev_add kernel/locking/lockdep.c:3098 [inline]
 check_prevs_add kernel/locking/lockdep.c:3217 [inline]
 validate_chain+0x166b/0x58e0 kernel/locking/lockdep.c:3832
 __lock_acquire+0x125b/0x1f80 kernel/locking/lockdep.c:5056
 lock_acquire+0x1e1/0x520 kernel/locking/lockdep.c:5669
 down_write_nested+0x3d/0x50 kernel/locking/rwsem.c:1689
 ext4_move_extents+0x37d/0xe40 fs/ext4/move_extent.c:620
 __ext4_ioctl fs/ext4/ioctl.c:1352 [inline]
 ext4_ioctl+0x3841/0x5b30 fs/ext4/ioctl.c:1608
 vfs_ioctl fs/ioctl.c:51 [inline]
 __do_sys_ioctl fs/ioctl.c:870 [inline]
 __se_sys_ioctl+0xf1/0x160 fs/ioctl.c:856
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7fd87ea8c169
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 f1 19 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fd87f887168 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
RAX: ffffffffffffffda RBX: 00007fd87ebabf80 RCX: 00007fd87ea8c169
RDX: 00000000200000c0 RSI: 00000000c028660f RDI: 0000000000000004
RBP: 00007fd87eae7ca1 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 00007ffef5b7e7cf R14: 00007fd87f887300 R15: 0000000000022000
 </TASK>
loop5: detected capacity change from 0 to 64
