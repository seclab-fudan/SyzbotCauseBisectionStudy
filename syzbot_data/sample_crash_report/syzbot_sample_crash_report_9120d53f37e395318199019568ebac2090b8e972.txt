general protection fault, probably for non-canonical address 0xe01ffbf11009d9a0: 0000 [#1] PREEMPT SMP KASAN
KASAN: maybe wild-memory-access in range [0x00ffff88804ecd00-0x00ffff88804ecd07]
CPU: 0 PID: 54 Comm: kworker/u4:3 Not tainted 5.16.0-rc4-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Workqueue: netns cleanup_net
RIP: 0010:__sock_release net/socket.c:644 [inline]
RIP: 0010:sock_release+0x23/0x1b0 net/socket.c:677
Code: e9 a2 f7 ff ff 66 90 41 55 41 54 55 53 48 89 fb e8 02 b8 55 fa 4c 8d 63 20 48 b8 00 00 00 00 00 fc ff df 4c 89 e2 48 c1 ea 03 <80> 3c 02 00 0f 85 2f 01 00 00 48 8b 6b 20 48 85 ed 0f 84 9f 00 00
RSP: 0018:ffffc90001a2fbb0 EFLAGS: 00010207
RAX: dffffc0000000000 RBX: 00ffff88804ecce6 RCX: 0000000000000000
RDX: 001ffff11009d9a0 RSI: ffffffff8721f2ee RDI: 00ffff88804ecce6
RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000
R10: ffffffff87eee82b R11: 0000000000000000 R12: 00ffff88804ecd06
R13: 0000607f45e13bf0 R14: ffff888024bb3480 R15: ffff88807e9dde41
FS:  0000000000000000(0000) GS:ffff8880b9c00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000001b2ee27000 CR3: 000000007af91000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 <TASK>
 inet_ctl_sock_destroy include/net/inet_common.h:65 [inline]
 icmpv6_sk_exit+0x14c/0x240 net/ipv6/icmp.c:1038
 ops_exit_list+0xb0/0x160 net/core/net_namespace.c:168
 cleanup_net+0x4ea/0xb00 net/core/net_namespace.c:593
 process_one_work+0x9b2/0x1690 kernel/workqueue.c:2298
 worker_thread+0x658/0x11f0 kernel/workqueue.c:2445
 kthread+0x405/0x4f0 kernel/kthread.c:327
 ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:295
 </TASK>
Modules linked in:
---[ end trace 6fa461bff4eb7739 ]---
RIP: 0010:__sock_release net/socket.c:644 [inline]
RIP: 0010:sock_release+0x23/0x1b0 net/socket.c:677
Code: e9 a2 f7 ff ff 66 90 41 55 41 54 55 53 48 89 fb e8 02 b8 55 fa 4c 8d 63 20 48 b8 00 00 00 00 00 fc ff df 4c 89 e2 48 c1 ea 03 <80> 3c 02 00 0f 85 2f 01 00 00 48 8b 6b 20 48 85 ed 0f 84 9f 00 00
RSP: 0018:ffffc90001a2fbb0 EFLAGS: 00010207
RAX: dffffc0000000000 RBX: 00ffff88804ecce6 RCX: 0000000000000000
RDX: 001ffff11009d9a0 RSI: ffffffff8721f2ee RDI: 00ffff88804ecce6
RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000
R10: ffffffff87eee82b R11: 0000000000000000 R12: 00ffff88804ecd06
R13: 0000607f45e13bf0 R14: ffff888024bb3480 R15: ffff88807e9dde41
FS:  0000000000000000(0000) GS:ffff8880b9c00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000001b33927000 CR3: 000000001b60a000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
----------------
Code disassembly (best guess):
   0:	e9 a2 f7 ff ff       	jmpq   0xfffff7a7
   5:	66 90                	xchg   %ax,%ax
   7:	41 55                	push   %r13
   9:	41 54                	push   %r12
   b:	55                   	push   %rbp
   c:	53                   	push   %rbx
   d:	48 89 fb             	mov    %rdi,%rbx
  10:	e8 02 b8 55 fa       	callq  0xfa55b817
  15:	4c 8d 63 20          	lea    0x20(%rbx),%r12
  19:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax
  20:	fc ff df
  23:	4c 89 e2             	mov    %r12,%rdx
  26:	48 c1 ea 03          	shr    $0x3,%rdx
* 2a:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1) <-- trapping instruction
  2e:	0f 85 2f 01 00 00    	jne    0x163
  34:	48 8b 6b 20          	mov    0x20(%rbx),%rbp
  38:	48 85 ed             	test   %rbp,%rbp
  3b:	0f                   	.byte 0xf
  3c:	84                   	.byte 0x84
  3d:	9f                   	lahf
