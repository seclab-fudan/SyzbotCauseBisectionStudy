======================================================
WARNING: possible circular locking dependency detected
6.3.0-rc4-syzkaller-00051-g8bb95a1662f8 #0 Not tainted
------------------------------------------------------
syz-executor196/5072 is trying to acquire lock:
ffffffff8c63d930 (cpu_hotplug_lock){++++}-{0:0}, at: static_key_slow_inc+0x13/0x30 kernel/jump_label.c:185

but task is already holding lock:
ffffffff8c7e4768 (freezer_mutex){+.+.}-{3:3}, at: freezer_change_state kernel/cgroup/legacy_freezer.c:387 [inline]
ffffffff8c7e4768 (freezer_mutex){+.+.}-{3:3}, at: freezer_write+0x9c/0xb40 kernel/cgroup/legacy_freezer.c:426

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #2 (freezer_mutex){+.+.}-{3:3}:
       __mutex_lock_common kernel/locking/mutex.c:603 [inline]
       __mutex_lock+0x12f/0x1350 kernel/locking/mutex.c:747
       freezer_attach+0x74/0x1f0 kernel/cgroup/legacy_freezer.c:163
       cgroup_migrate_execute+0xbec/0x1240 kernel/cgroup/cgroup.c:2621
       cgroup_attach_task+0x43d/0x790 kernel/cgroup/cgroup.c:2910
       __cgroup1_procs_write.constprop.0+0x3be/0x4b0 kernel/cgroup/cgroup-v1.c:523
       cgroup_file_write+0x1e2/0x7b0 kernel/cgroup/cgroup.c:4061
       kernfs_fop_write_iter+0x3f1/0x600 fs/kernfs/file.c:334
       call_write_iter include/linux/fs.h:1851 [inline]
       new_sync_write fs/read_write.c:491 [inline]
       vfs_write+0x9ed/0xe10 fs/read_write.c:584
       ksys_write+0x12b/0x250 fs/read_write.c:637
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

-> #1 (cgroup_threadgroup_rwsem){++++}-{0:0}:
       percpu_down_write+0x51/0x390 kernel/locking/percpu-rwsem.c:227
       cgroup_attach_lock kernel/cgroup/cgroup.c:2437 [inline]
       cgroup_procs_write_start+0x155/0x670 kernel/cgroup/cgroup.c:2939
       __cgroup_procs_write+0xd7/0x670 kernel/cgroup/cgroup.c:5139
       cgroup_procs_write+0x26/0x50 kernel/cgroup/cgroup.c:5175
       cgroup_file_write+0x1e2/0x7b0 kernel/cgroup/cgroup.c:4061
       kernfs_fop_write_iter+0x3f1/0x600 fs/kernfs/file.c:334
       call_write_iter include/linux/fs.h:1851 [inline]
       new_sync_write fs/read_write.c:491 [inline]
       vfs_write+0x9ed/0xe10 fs/read_write.c:584
       ksys_write+0x12b/0x250 fs/read_write.c:637
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

-> #0 (cpu_hotplug_lock){++++}-{0:0}:
       check_prev_add kernel/locking/lockdep.c:3098 [inline]
       check_prevs_add kernel/locking/lockdep.c:3217 [inline]
       validate_chain kernel/locking/lockdep.c:3832 [inline]
       __lock_acquire+0x2ec7/0x5d40 kernel/locking/lockdep.c:5056
       lock_acquire kernel/locking/lockdep.c:5669 [inline]
       lock_acquire+0x1af/0x520 kernel/locking/lockdep.c:5634
       percpu_down_read include/linux/percpu-rwsem.h:51 [inline]
       cpus_read_lock+0x42/0x160 kernel/cpu.c:310
       static_key_slow_inc+0x13/0x30 kernel/jump_label.c:185
       freezer_apply_state+0x1e1/0x260 kernel/cgroup/legacy_freezer.c:353
       freezer_change_state kernel/cgroup/legacy_freezer.c:398 [inline]
       freezer_write+0x5b2/0xb40 kernel/cgroup/legacy_freezer.c:426
       cgroup_file_write+0x1e2/0x7b0 kernel/cgroup/cgroup.c:4061
       kernfs_fop_write_iter+0x3f1/0x600 fs/kernfs/file.c:334
       call_write_iter include/linux/fs.h:1851 [inline]
       new_sync_write fs/read_write.c:491 [inline]
       vfs_write+0x9ed/0xe10 fs/read_write.c:584
       ksys_write+0x12b/0x250 fs/read_write.c:637
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

other info that might help us debug this:

Chain exists of:
  cpu_hotplug_lock --> cgroup_threadgroup_rwsem --> freezer_mutex

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(freezer_mutex);
                               lock(cgroup_threadgroup_rwsem);
                               lock(freezer_mutex);
  lock(cpu_hotplug_lock);

 *** DEADLOCK ***

4 locks held by syz-executor196/5072:
 #0: ffff88802ac44460 (sb_writers#11){.+.+}-{0:0}, at: ksys_write+0x12b/0x250 fs/read_write.c:637
 #1: ffff888017a09088 (&of->mutex){+.+.}-{3:3}, at: kernfs_fop_write_iter+0x285/0x600 fs/kernfs/file.c:325
 #2: ffff8880770abb28 (kn->active#56){.+.+}-{0:0}, at: kernfs_fop_write_iter+0x2a9/0x600 fs/kernfs/file.c:326
 #3: ffffffff8c7e4768 (freezer_mutex){+.+.}-{3:3}, at: freezer_change_state kernel/cgroup/legacy_freezer.c:387 [inline]
 #3: ffffffff8c7e4768 (freezer_mutex){+.+.}-{3:3}, at: freezer_write+0x9c/0xb40 kernel/cgroup/legacy_freezer.c:426

stack backtrace:
CPU: 0 PID: 5072 Comm: syz-executor196 Not tainted 6.3.0-rc4-syzkaller-00051-g8bb95a1662f8 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/02/2023
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xd9/0x150 lib/dump_stack.c:106
 check_noncircular+0x25f/0x2e0 kernel/locking/lockdep.c:2178
 check_prev_add kernel/locking/lockdep.c:3098 [inline]
 check_prevs_add kernel/locking/lockdep.c:3217 [inline]
 validate_chain kernel/locking/lockdep.c:3832 [inline]
 __lock_acquire+0x2ec7/0x5d40 kernel/locking/lockdep.c:5056
 lock_acquire kernel/locking/lockdep.c:5669 [inline]
 lock_acquire+0x1af/0x520 kernel/locking/lockdep.c:5634
 percpu_down_read include/linux/percpu-rwsem.h:51 [inline]
 cpus_read_lock+0x42/0x160 kernel/cpu.c:310
 static_key_slow_inc+0x13/0x30 kernel/jump_label.c:185
 freezer_apply_state+0x1e1/0x260 kernel/cgroup/legacy_freezer.c:353
 freezer_change_state kernel/cgroup/legacy_freezer.c:398 [inline]
 freezer_write+0x5b2/0xb40 kernel/cgroup/legacy_freezer.c:426
 cgroup_file_write+0x1e2/0x7b0 kernel/cgroup/cgroup.c:4061
 kernfs_fop_write_iter+0x3f1/0x600 fs/kernfs/file.c:334
 call_write_iter include/linux/fs.h:1851 [inline]
 new_sync_write fs/read_write.c:491 [inline]
 vfs_write+0x9ed/0xe10 fs/read_write.c:584
 ksys_write+0x12b/0x250 fs/read_write.c:637
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7f58164c2dd9
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 51 15 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007ffe9ce4d758 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007f58164c2dd9
RDX: 0000000000000007 RSI: 0000000020000040 RDI: 0000000000000004
RBP: 0000000000000000 R08: 00007ffe9ce4d780 R09: 00007ffe9ce4d780
R10: 00007ffe9ce4d780 R11: 0000000000000246 R12: 00007ffe9ce4d77c
R13: 00007ffe9ce4d790 R14: 00007ffe9ce4d7d0 R15: 0000000000000000
 </TASK>
