======================================================
WARNING: possible circular locking dependency detected
6.3.0-rc7-syzkaller-00043-gaf67688dca57 #0 Not tainted
------------------------------------------------------
kswapd0/83 is trying to acquire lock:
ffff888095c18100 (&rl->lock){++++}-{3:3}, at: __ntfs_clear_inode+0x32/0x1f0 fs/ntfs/inode.c:2189

but task is already holding lock:
ffffffff8cffdfe0 (fs_reclaim){+.+.}-{0:0}, at: 0x1

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #2 (fs_reclaim){+.+.}-{0:0}:
       lock_acquire+0x1e1/0x520 kernel/locking/lockdep.c:5669
       __fs_reclaim_acquire mm/page_alloc.c:4717 [inline]
       fs_reclaim_acquire+0x87/0x130 mm/page_alloc.c:4731
       might_alloc include/linux/sched/mm.h:271 [inline]
       prepare_alloc_pages+0x147/0x5b0 mm/page_alloc.c:5363
       __alloc_pages+0x165/0x670 mm/page_alloc.c:5581
       folio_alloc+0x1e/0x60 mm/mempolicy.c:2293
       filemap_alloc_folio+0xde/0x500 mm/filemap.c:976
       do_read_cache_folio+0x2a7/0x820 mm/filemap.c:3647
       do_read_cache_page+0x32/0x230 mm/filemap.c:3749
       read_mapping_page include/linux/pagemap.h:769 [inline]
       ntfs_map_page fs/ntfs/aops.h:75 [inline]
       map_mft_record_page fs/ntfs/mft.c:73 [inline]
       map_mft_record+0x1cd/0x630 fs/ntfs/mft.c:156
       ntfs_read_locked_inode+0x199/0x49c0 fs/ntfs/inode.c:550
       ntfs_iget+0x113/0x190 fs/ntfs/inode.c:177
       ntfs_lookup+0x28e/0xe00 fs/ntfs/namei.c:117
       lookup_open fs/namei.c:3394 [inline]
       open_last_lookups fs/namei.c:3484 [inline]
       path_openat+0x11e9/0x3170 fs/namei.c:3712
       do_filp_open+0x234/0x490 fs/namei.c:3742
       do_sys_openat2+0x13f/0x500 fs/open.c:1348
       do_sys_open fs/open.c:1364 [inline]
       __do_sys_openat fs/open.c:1380 [inline]
       __se_sys_openat fs/open.c:1375 [inline]
       __x64_sys_openat+0x247/0x290 fs/open.c:1375
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

-> #1 (&ni->mrec_lock){+.+.}-{3:3}:
       lock_acquire+0x1e1/0x520 kernel/locking/lockdep.c:5669
       __mutex_lock_common+0x1d8/0x2530 kernel/locking/mutex.c:603
       __mutex_lock kernel/locking/mutex.c:747 [inline]
       mutex_lock_nested+0x1b/0x20 kernel/locking/mutex.c:799
       map_mft_record+0x4c/0x630 fs/ntfs/mft.c:154
       ntfs_attr_extend_allocation+0x539/0x4340 fs/ntfs/attrib.c:2002
       ntfs_prepare_file_for_write fs/ntfs/file.c:391 [inline]
       ntfs_file_write_iter+0x3ad/0x1a00 fs/ntfs/file.c:1915
       call_write_iter include/linux/fs.h:1851 [inline]
       new_sync_write fs/read_write.c:491 [inline]
       vfs_write+0x7b2/0xbb0 fs/read_write.c:584
       ksys_write+0x1a0/0x2c0 fs/read_write.c:637
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

-> #0 (&rl->lock){++++}-{3:3}:
       check_prev_add kernel/locking/lockdep.c:3098 [inline]
       check_prevs_add kernel/locking/lockdep.c:3217 [inline]
       validate_chain+0x166b/0x58e0 kernel/locking/lockdep.c:3832
       __lock_acquire+0x125b/0x1f80 kernel/locking/lockdep.c:5056
       lock_acquire+0x1e1/0x520 kernel/locking/lockdep.c:5669
       down_write+0x3a/0x50 kernel/locking/rwsem.c:1573
       __ntfs_clear_inode+0x32/0x1f0 fs/ntfs/inode.c:2189
       ntfs_evict_big_inode+0x2b1/0x480 fs/ntfs/inode.c:2278
       evict+0x2a4/0x620 fs/inode.c:665
       dispose_list fs/inode.c:698 [inline]
       prune_icache_sb+0x239/0x2e0 fs/inode.c:897
       super_cache_scan+0x376/0x480 fs/super.c:106
       do_shrink_slab+0x544/0xdb0 mm/vmscan.c:853
       shrink_slab_memcg mm/vmscan.c:922 [inline]
       shrink_slab+0x578/0x8c0 mm/vmscan.c:1001
       shrink_node_memcgs mm/vmscan.c:6439 [inline]
       shrink_node+0x1143/0x2730 mm/vmscan.c:6473
       kswapd_shrink_node mm/vmscan.c:7262 [inline]
       balance_pgdat+0x12f8/0x21e0 mm/vmscan.c:7452
       kswapd+0x783/0xdc0 mm/vmscan.c:7712
       kthread+0x270/0x300 kernel/kthread.c:376
       ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:308

other info that might help us debug this:

Chain exists of:
  &rl->lock --> &ni->mrec_lock --> fs_reclaim

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(fs_reclaim);
                               lock(&ni->mrec_lock);
                               lock(fs_reclaim);
  lock(&rl->lock);

 *** DEADLOCK ***

3 locks held by kswapd0/83:
 #0: ffffffff8cffdfe0 (fs_reclaim){+.+.}-{0:0}, at: 0x1
 #1: ffffffff8cfd4610 (shrinker_rwsem){++++}-{3:3}, at: shrink_slab_memcg mm/vmscan.c:895 [inline]
 #1: ffffffff8cfd4610 (shrinker_rwsem){++++}-{3:3}, at: shrink_slab+0x2dc/0x8c0 mm/vmscan.c:1001
 #2: ffff8880401860e0 (&type->s_umount_key#62){++++}-{3:3}, at: trylock_super fs/super.c:414 [inline]
 #2: ffff8880401860e0 (&type->s_umount_key#62){++++}-{3:3}, at: super_cache_scan+0x77/0x480 fs/super.c:79

stack backtrace:
CPU: 1 PID: 83 Comm: kswapd0 Not tainted 6.3.0-rc7-syzkaller-00043-gaf67688dca57 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/30/2023
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x1e7/0x2d0 lib/dump_stack.c:106
 check_noncircular+0x2fe/0x3b0 kernel/locking/lockdep.c:2178
 check_prev_add kernel/locking/lockdep.c:3098 [inline]
 check_prevs_add kernel/locking/lockdep.c:3217 [inline]
 validate_chain+0x166b/0x58e0 kernel/locking/lockdep.c:3832
 __lock_acquire+0x125b/0x1f80 kernel/locking/lockdep.c:5056
 lock_acquire+0x1e1/0x520 kernel/locking/lockdep.c:5669
 down_write+0x3a/0x50 kernel/locking/rwsem.c:1573
 __ntfs_clear_inode+0x32/0x1f0 fs/ntfs/inode.c:2189
 ntfs_evict_big_inode+0x2b1/0x480 fs/ntfs/inode.c:2278
 evict+0x2a4/0x620 fs/inode.c:665
 dispose_list fs/inode.c:698 [inline]
 prune_icache_sb+0x239/0x2e0 fs/inode.c:897
 super_cache_scan+0x376/0x480 fs/super.c:106
 do_shrink_slab+0x544/0xdb0 mm/vmscan.c:853
 shrink_slab_memcg mm/vmscan.c:922 [inline]
 shrink_slab+0x578/0x8c0 mm/vmscan.c:1001
 shrink_node_memcgs mm/vmscan.c:6439 [inline]
 shrink_node+0x1143/0x2730 mm/vmscan.c:6473
 kswapd_shrink_node mm/vmscan.c:7262 [inline]
 balance_pgdat+0x12f8/0x21e0 mm/vmscan.c:7452
 kswapd+0x783/0xdc0 mm/vmscan.c:7712
 kthread+0x270/0x300 kernel/kthread.c:376
 ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:308
 </TASK>
