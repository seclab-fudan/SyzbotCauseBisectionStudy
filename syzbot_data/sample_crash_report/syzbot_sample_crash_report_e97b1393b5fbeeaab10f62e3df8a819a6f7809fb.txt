======================================================
WARNING: possible circular locking dependency detected
6.3.0-rc7-syzkaller-00060-g789b4a41c247 #0 Not tainted
------------------------------------------------------
syz-executor.3/28760 is trying to acquire lock:
ffff888033d082e0 (&type->i_mutex_dir_key#28/1){+.+.}-{3:3}, at: inode_lock_nested include/linux/fs.h:793 [inline]
ffff888033d082e0 (&type->i_mutex_dir_key#28/1){+.+.}-{3:3}, at: filename_create+0x25a/0x530 fs/namei.c:3808

but task is already holding lock:
ffff8881452ac460 (sb_writers#35){.+.+}-{0:0}, at: mnt_want_write+0x3f/0x90 fs/namespace.c:394

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #2 (sb_writers#35){.+.+}-{0:0}:
       lock_acquire+0x1e1/0x520 kernel/locking/lockdep.c:5669
       percpu_down_read include/linux/percpu-rwsem.h:51 [inline]
       __sb_start_write include/linux/fs.h:1477 [inline]
       sb_start_write+0x4d/0x1c0 include/linux/fs.h:1552
       mnt_want_write_file+0x5e/0x1f0 fs/namespace.c:438
       reiserfs_ioctl+0x174/0x340 fs/reiserfs/ioctl.c:103
       vfs_ioctl fs/ioctl.c:51 [inline]
       __do_sys_ioctl fs/ioctl.c:870 [inline]
       __se_sys_ioctl+0xf1/0x160 fs/ioctl.c:856
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

-> #1 (&sbi->lock){+.+.}-{3:3}:
       lock_acquire+0x1e1/0x520 kernel/locking/lockdep.c:5669
       __mutex_lock_common+0x1d8/0x2530 kernel/locking/mutex.c:603
       __mutex_lock kernel/locking/mutex.c:747 [inline]
       mutex_lock_nested+0x1b/0x20 kernel/locking/mutex.c:799
       reiserfs_write_lock+0x7a/0xd0 fs/reiserfs/lock.c:27
       reiserfs_lookup+0x160/0x4b0 fs/reiserfs/namei.c:364
       __lookup_hash+0x117/0x240 fs/namei.c:1602
       filename_create+0x291/0x530 fs/namei.c:3809
       do_mknodat+0x1ac/0x6e0 fs/namei.c:3953
       __do_sys_mknodat fs/namei.c:3994 [inline]
       __se_sys_mknodat fs/namei.c:3991 [inline]
       __x64_sys_mknodat+0xa9/0xc0 fs/namei.c:3991
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

-> #0 (&type->i_mutex_dir_key#28/1){+.+.}-{3:3}:
       check_prev_add kernel/locking/lockdep.c:3098 [inline]
       check_prevs_add kernel/locking/lockdep.c:3217 [inline]
       validate_chain+0x166b/0x58e0 kernel/locking/lockdep.c:3832
       __lock_acquire+0x125b/0x1f80 kernel/locking/lockdep.c:5056
       lock_acquire+0x1e1/0x520 kernel/locking/lockdep.c:5669
       down_write_nested+0x3d/0x50 kernel/locking/rwsem.c:1689
       inode_lock_nested include/linux/fs.h:793 [inline]
       filename_create+0x25a/0x530 fs/namei.c:3808
       do_mkdirat+0xb7/0x520 fs/namei.c:4053
       __do_sys_mkdir fs/namei.c:4081 [inline]
       __se_sys_mkdir fs/namei.c:4079 [inline]
       __x64_sys_mkdir+0x6e/0x80 fs/namei.c:4079
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

other info that might help us debug this:

Chain exists of:
  &type->i_mutex_dir_key#28/1 --> &sbi->lock --> sb_writers#35

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(sb_writers#35);
                               lock(&sbi->lock);
                               lock(sb_writers#35);
  lock(&type->i_mutex_dir_key#28/1);

 *** DEADLOCK ***

1 lock held by syz-executor.3/28760:
 #0: ffff8881452ac460 (sb_writers#35){.+.+}-{0:0}, at: mnt_want_write+0x3f/0x90 fs/namespace.c:394

stack backtrace:
CPU: 1 PID: 28760 Comm: syz-executor.3 Not tainted 6.3.0-rc7-syzkaller-00060-g789b4a41c247 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/30/2023
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x1e7/0x2d0 lib/dump_stack.c:106
 check_noncircular+0x2fe/0x3b0 kernel/locking/lockdep.c:2178
 check_prev_add kernel/locking/lockdep.c:3098 [inline]
 check_prevs_add kernel/locking/lockdep.c:3217 [inline]
 validate_chain+0x166b/0x58e0 kernel/locking/lockdep.c:3832
 __lock_acquire+0x125b/0x1f80 kernel/locking/lockdep.c:5056
 lock_acquire+0x1e1/0x520 kernel/locking/lockdep.c:5669
 down_write_nested+0x3d/0x50 kernel/locking/rwsem.c:1689
 inode_lock_nested include/linux/fs.h:793 [inline]
 filename_create+0x25a/0x530 fs/namei.c:3808
 do_mkdirat+0xb7/0x520 fs/namei.c:4053
 __do_sys_mkdir fs/namei.c:4081 [inline]
 __se_sys_mkdir fs/namei.c:4079 [inline]
 __x64_sys_mkdir+0x6e/0x80 fs/namei.c:4079
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7f8d5228c169
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 f1 19 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f8d53006168 EFLAGS: 00000246 ORIG_RAX: 0000000000000053
RAX: ffffffffffffffda RBX: 00007f8d523abf80 RCX: 00007f8d5228c169
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000020000300
RBP: 00007f8d522e7ca1 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 00007fff948da3cf R14: 00007f8d53006300 R15: 0000000000022000
 </TASK>
