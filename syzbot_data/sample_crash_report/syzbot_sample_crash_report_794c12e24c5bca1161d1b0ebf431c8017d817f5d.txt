INFO: trying to register non-static key.
The code is fine but needs lockdep annotation, or maybe
you didn't initialize this object before use?
turning off the locking correctness validator.
CPU: 1 PID: 5481 Comm: syz-executor.0 Not tainted 6.2.0-rc8-syzkaller-00019-g82eac0c830b7 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/21/2023
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xd1/0x138 lib/dump_stack.c:106
 assign_lock_key kernel/locking/lockdep.c:981 [inline]
 register_lock_class+0xf1b/0x1120 kernel/locking/lockdep.c:1294
 __lock_acquire+0x109/0x56d0 kernel/locking/lockdep.c:4934
 lock_acquire kernel/locking/lockdep.c:5668 [inline]
 lock_acquire+0x1e3/0x630 kernel/locking/lockdep.c:5633
 __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:110 [inline]
 _raw_spin_lock_irqsave+0x3d/0x60 kernel/locking/spinlock.c:162
 ref_tracker_dir_exit+0x54/0x3e0 lib/ref_tracker.c:24
 net_free net/core/net_namespace.c:442 [inline]
 net_free+0x98/0xd0 net/core/net_namespace.c:436
 copy_net_ns+0x4ee/0x6b0 net/core/net_namespace.c:493
 create_new_namespaces+0x3f6/0xb20 kernel/nsproxy.c:110
 unshare_nsproxy_namespaces+0xc5/0x1f0 kernel/nsproxy.c:228
 ksys_unshare+0x449/0x920 kernel/fork.c:3202
 __do_sys_unshare kernel/fork.c:3273 [inline]
 __se_sys_unshare kernel/fork.c:3271 [inline]
 __x64_sys_unshare+0x31/0x40 kernel/fork.c:3271
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7fc04368d6b7
Code: 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 b8 10 01 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007ffca67a9be8 EFLAGS: 00000206 ORIG_RAX: 0000000000000110
RAX: ffffffffffffffda RBX: 00007ffca67aa228 RCX: 00007fc04368d6b7
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000040000000
RBP: 00007ffca67a9cc8 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000206 R12: 00000000fffffff1
R13: 00007ffca67a9cc0 R14: 0000000000000000 R15: 0000000000000000
 </TASK>
general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN
KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]
CPU: 1 PID: 5481 Comm: syz-executor.0 Not tainted 6.2.0-rc8-syzkaller-00019-g82eac0c830b7 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/21/2023
RIP: 0010:ref_tracker_dir_exit+0x96/0x3e0 lib/ref_tracker.c:25
Code: fc ff df 48 c1 ea 03 80 3c 02 00 0f 85 4f 03 00 00 48 b8 00 00 00 00 00 fc ff df 4d 8b 74 24 60 4c 89 f2 4d 89 f7 48 c1 ea 03 <80> 3c 02 00 0f 85 1f 03 00 00 4c 39 34 24 49 8b 2e 0f 84 34 01 00
RSP: 0018:ffffc9000518fd00 EFLAGS: 00010056
RAX: dffffc0000000000 RBX: 0000000000000001 RCX: ffffffff816407b4
RDX: 0000000000000000 RSI: 0000000000000004 RDI: ffffc9000518fc70
RBP: ffff88807cef5640 R08: 0000000000000001 R09: 0000000000000003
R10: fffff52000a31f8e R11: 3e4b5341542f3c20 R12: ffff88807cef5800
R13: ffffffff8c660e60 R14: 0000000000000000 R15: 0000000000000000
FS:  0000555556252400(0000) GS:ffff8880b9900000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 000056210684c000 CR3: 000000002bd36000 CR4: 0000000000350ee0
Call Trace:
 <TASK>
 net_free net/core/net_namespace.c:442 [inline]
 net_free+0x98/0xd0 net/core/net_namespace.c:436
 copy_net_ns+0x4ee/0x6b0 net/core/net_namespace.c:493
 create_new_namespaces+0x3f6/0xb20 kernel/nsproxy.c:110
 unshare_nsproxy_namespaces+0xc5/0x1f0 kernel/nsproxy.c:228
 ksys_unshare+0x449/0x920 kernel/fork.c:3202
 __do_sys_unshare kernel/fork.c:3273 [inline]
 __se_sys_unshare kernel/fork.c:3271 [inline]
 __x64_sys_unshare+0x31/0x40 kernel/fork.c:3271
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7fc04368d6b7
Code: 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 b8 10 01 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007ffca67a9be8 EFLAGS: 00000206 ORIG_RAX: 0000000000000110
RAX: ffffffffffffffda RBX: 00007ffca67aa228 RCX: 00007fc04368d6b7
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000040000000
RBP: 00007ffca67a9cc8 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000206 R12: 00000000fffffff1
R13: 00007ffca67a9cc0 R14: 0000000000000000 R15: 0000000000000000
 </TASK>
Modules linked in:
---[ end trace 0000000000000000 ]---
RIP: 0010:ref_tracker_dir_exit+0x96/0x3e0 lib/ref_tracker.c:25
Code: fc ff df 48 c1 ea 03 80 3c 02 00 0f 85 4f 03 00 00 48 b8 00 00 00 00 00 fc ff df 4d 8b 74 24 60 4c 89 f2 4d 89 f7 48 c1 ea 03 <80> 3c 02 00 0f 85 1f 03 00 00 4c 39 34 24 49 8b 2e 0f 84 34 01 00
RSP: 0018:ffffc9000518fd00 EFLAGS: 00010056
RAX: dffffc0000000000 RBX: 0000000000000001 RCX: ffffffff816407b4
RDX: 0000000000000000 RSI: 0000000000000004 RDI: ffffc9000518fc70
RBP: ffff88807cef5640 R08: 0000000000000001 R09: 0000000000000003
R10: fffff52000a31f8e R11: 3e4b5341542f3c20 R12: ffff88807cef5800
R13: ffffffff8c660e60 R14: 0000000000000000 R15: 0000000000000000
FS:  0000555556252400(0000) GS:ffff8880b9900000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 000056210684c000 CR3: 000000002bd36000 CR4: 0000000000350ee0
----------------
Code disassembly (best guess), 3 bytes skipped:
   0:	48 c1 ea 03          	shr    $0x3,%rdx
   4:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
   8:	0f 85 4f 03 00 00    	jne    0x35d
   e:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax
  15:	fc ff df
  18:	4d 8b 74 24 60       	mov    0x60(%r12),%r14
  1d:	4c 89 f2             	mov    %r14,%rdx
  20:	4d 89 f7             	mov    %r14,%r15
  23:	48 c1 ea 03          	shr    $0x3,%rdx
* 27:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1) <-- trapping instruction
  2b:	0f 85 1f 03 00 00    	jne    0x350
  31:	4c 39 34 24          	cmp    %r14,(%rsp)
  35:	49 8b 2e             	mov    (%r14),%rbp
  38:	0f                   	.byte 0xf
  39:	84 34 01             	test   %dh,(%rcx,%rax,1)
