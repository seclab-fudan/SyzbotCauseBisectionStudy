======================================================
WARNING: possible circular locking dependency detected
5.1.0-rc6+ #88 Not tainted
------------------------------------------------------
syz-executor968/8248 is trying to acquire lock:
00000000c67275e3 (&acct->lock#2){+.+.}, at: acct_pin_kill+0x27/0x100 kernel/acct.c:173

but task is already holding lock:
0000000004ad978d (sb_writers#4){.+.+}, at: sb_start_write include/linux/fs.h:1621 [inline]
0000000004ad978d (sb_writers#4){.+.+}, at: mnt_want_write+0x3f/0xc0 fs/namespace.c:358

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #2 (sb_writers#4){.+.+}:
       lock_acquire+0x16f/0x3f0 kernel/locking/lockdep.c:4211
       percpu_down_read include/linux/percpu-rwsem.h:36 [inline]
       __sb_start_write+0x20b/0x360 fs/super.c:1613
       file_start_write include/linux/fs.h:2825 [inline]
       ovl_write_iter+0x91b/0xc20 fs/overlayfs/file.c:243
       call_write_iter include/linux/fs.h:1866 [inline]
       new_sync_write+0x4c7/0x760 fs/read_write.c:474
       __vfs_write+0xe4/0x110 fs/read_write.c:487
       __kernel_write+0x110/0x3b0 fs/read_write.c:506
       do_acct_process+0xd37/0x1150 kernel/acct.c:520
       slow_acct_process kernel/acct.c:579 [inline]
       acct_process+0x568/0x61e kernel/acct.c:605
       do_exit+0x17bd/0x2fa0 kernel/exit.c:866
       do_group_exit+0x135/0x370 kernel/exit.c:980
       get_signal+0x399/0x1d50 kernel/signal.c:2577
       do_signal+0x87/0x1940 arch/x86/kernel/signal.c:816
       exit_to_usermode_loop+0x244/0x2c0 arch/x86/entry/common.c:162
       prepare_exit_to_usermode arch/x86/entry/common.c:197 [inline]
       syscall_return_slowpath arch/x86/entry/common.c:268 [inline]
       do_syscall_64+0x52d/0x610 arch/x86/entry/common.c:293
       entry_SYSCALL_64_after_hwframe+0x49/0xbe

-> #1 (&ovl_i_mutex_key[depth]){+.+.}:
       lock_acquire+0x16f/0x3f0 kernel/locking/lockdep.c:4211
       down_write+0x38/0x90 kernel/locking/rwsem.c:70
       inode_lock include/linux/fs.h:772 [inline]
       ovl_write_iter+0x148/0xc20 fs/overlayfs/file.c:231
       call_write_iter include/linux/fs.h:1866 [inline]
       new_sync_write+0x4c7/0x760 fs/read_write.c:474
       __vfs_write+0xe4/0x110 fs/read_write.c:487
       __kernel_write+0x110/0x3b0 fs/read_write.c:506
       do_acct_process+0xd37/0x1150 kernel/acct.c:520
       slow_acct_process kernel/acct.c:579 [inline]
       acct_process+0x568/0x61e kernel/acct.c:605
       do_exit+0x17bd/0x2fa0 kernel/exit.c:866
       do_group_exit+0x135/0x370 kernel/exit.c:980
       get_signal+0x399/0x1d50 kernel/signal.c:2577
       do_signal+0x87/0x1940 arch/x86/kernel/signal.c:816
       exit_to_usermode_loop+0x244/0x2c0 arch/x86/entry/common.c:162
       prepare_exit_to_usermode arch/x86/entry/common.c:197 [inline]
       syscall_return_slowpath arch/x86/entry/common.c:268 [inline]
       do_syscall_64+0x52d/0x610 arch/x86/entry/common.c:293
       entry_SYSCALL_64_after_hwframe+0x49/0xbe

-> #0 (&acct->lock#2){+.+.}:
       check_prevs_add kernel/locking/lockdep.c:2333 [inline]
       validate_chain kernel/locking/lockdep.c:2714 [inline]
       __lock_acquire+0x239c/0x3fb0 kernel/locking/lockdep.c:3701
       lock_acquire+0x16f/0x3f0 kernel/locking/lockdep.c:4211
       __mutex_lock_common kernel/locking/mutex.c:925 [inline]
       __mutex_lock+0xf7/0x1310 kernel/locking/mutex.c:1072
       mutex_lock_nested+0x16/0x20 kernel/locking/mutex.c:1087
       acct_pin_kill+0x27/0x100 kernel/acct.c:173
       pin_kill+0x18f/0x860 fs/fs_pin.c:50
       acct_on+0x574/0x790 kernel/acct.c:254
       __do_sys_acct kernel/acct.c:286 [inline]
       __se_sys_acct kernel/acct.c:273 [inline]
       __x64_sys_acct+0xae/0x200 kernel/acct.c:273
       do_syscall_64+0x103/0x610 arch/x86/entry/common.c:290
       entry_SYSCALL_64_after_hwframe+0x49/0xbe

other info that might help us debug this:

Chain exists of:
  &acct->lock#2 --> &ovl_i_mutex_key[depth] --> sb_writers#4

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(sb_writers#4);
                               lock(&ovl_i_mutex_key[depth]);
                               lock(sb_writers#4);
  lock(&acct->lock#2);

 *** DEADLOCK ***

2 locks held by syz-executor968/8248:
 #0: 000000001559d3a8 (acct_on_mutex){+.+.}, at: __do_sys_acct kernel/acct.c:285 [inline]
 #0: 000000001559d3a8 (acct_on_mutex){+.+.}, at: __se_sys_acct kernel/acct.c:273 [inline]
 #0: 000000001559d3a8 (acct_on_mutex){+.+.}, at: __x64_sys_acct+0xa6/0x200 kernel/acct.c:273
 #1: 0000000004ad978d (sb_writers#4){.+.+}, at: sb_start_write include/linux/fs.h:1621 [inline]
 #1: 0000000004ad978d (sb_writers#4){.+.+}, at: mnt_want_write+0x3f/0xc0 fs/namespace.c:358

stack backtrace:
CPU: 0 PID: 8248 Comm: syz-executor968 Not tainted 5.1.0-rc6+ #88
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Call Trace:
 __dump_stack lib/dump_stack.c:77 [inline]
 dump_stack+0x172/0x1f0 lib/dump_stack.c:113
 print_circular_bug.isra.0.cold+0x1cc/0x28f kernel/locking/lockdep.c:1571
 check_prev_add.constprop.0+0xf11/0x23c0 kernel/locking/lockdep.c:2220
 check_prevs_add kernel/locking/lockdep.c:2333 [inline]
 validate_chain kernel/locking/lockdep.c:2714 [inline]
 __lock_acquire+0x239c/0x3fb0 kernel/locking/lockdep.c:3701
 lock_acquire+0x16f/0x3f0 kernel/locking/lockdep.c:4211
 __mutex_lock_common kernel/locking/mutex.c:925 [inline]
 __mutex_lock+0xf7/0x1310 kernel/locking/mutex.c:1072
 mutex_lock_nested+0x16/0x20 kernel/locking/mutex.c:1087
 acct_pin_kill+0x27/0x100 kernel/acct.c:173
 pin_kill+0x18f/0x860 fs/fs_pin.c:50
 acct_on+0x574/0x790 kernel/acct.c:254
 __do_sys_acct kernel/acct.c:286 [inline]
 __se_sys_acct kernel/acct.c:273 [inline]
 __x64_sys_acct+0xae/0x200 kernel/acct.c:273
 do_syscall_64+0x103/0x610 arch/x86/entry/common.c:290
 entry_SYSCALL_64_after_hwframe+0x49/0xbe
RIP: 0033:0x446819
Code: e8 5c b3 02 00 48 83 c4 18 c3 0f 1f 80 00 00 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 0f 83 0b 08 fc ff c3 66 2e 0f 1f 84 00 00 00 00
RSP: 002b:00007f536ce50db8 EFLAGS: 00000246 ORIG_RAX: 00000000000000a3
RAX: ffffffffffffffda RBX: 00000000006dbc28 RCX: 0000000000446819
RDX: 0000000000446819 RSI: 0000000000000000 RDI: 0000000020000000
RBP: 00000000006dbc20 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 00000000006dbc2c
R13: 00007ffe54efe82f R14: 00007f536ce519c0 R15: 20c49ba5e353f7cf
