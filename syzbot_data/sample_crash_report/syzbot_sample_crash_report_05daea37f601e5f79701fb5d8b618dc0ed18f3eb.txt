======================================================
WARNING: possible circular locking dependency detected
6.2.0-rc3-syzkaller-00008-g1fe4fd6f5cad #0 Not tainted
------------------------------------------------------
syz-executor702/5055 is trying to acquire lock:
ffff88814b99c170 (&journal->j_barrier){+.+.}-{3:3}, at: jbd2_journal_lock_updates+0x162/0x310 fs/jbd2/transaction.c:904

but task is already holding lock:
ffff888029ef2b98 (&sbi->s_writepages_rwsem){++++}-{0:0}, at: ext4_change_inode_journal_flag+0x180/0x550 fs/ext4/inode.c:6157

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #4 (&sbi->s_writepages_rwsem){++++}-{0:0}:
       percpu_down_write+0x53/0x390 kernel/locking/percpu-rwsem.c:227
       ext4_change_inode_journal_flag+0x180/0x550 fs/ext4/inode.c:6157
       ext4_ioctl_setflags fs/ext4/ioctl.c:687 [inline]
       ext4_fileattr_set+0xe78/0x1a50 fs/ext4/ioctl.c:1004
       vfs_fileattr_set+0x7f9/0xbe0 fs/ioctl.c:696
       ioctl_fssetxattr fs/ioctl.c:758 [inline]
       do_vfs_ioctl+0xf8d/0x15b0 fs/ioctl.c:845
       __do_sys_ioctl fs/ioctl.c:868 [inline]
       __se_sys_ioctl fs/ioctl.c:856 [inline]
       __x64_sys_ioctl+0x10c/0x210 fs/ioctl.c:856
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

-> #3 (mapping.invalidate_lock){++++}-{3:3}:
       down_write+0x94/0x220 kernel/locking/rwsem.c:1562
       filemap_invalidate_lock include/linux/fs.h:801 [inline]
       ext4_setattr+0x75a/0x2be0 fs/ext4/inode.c:5545
       notify_change+0xca7/0x1420 fs/attr.c:482
       do_truncate+0x143/0x200 fs/open.c:65
       do_sys_ftruncate+0x51f/0x710 fs/open.c:193
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

-> #2 (&sb->s_type->i_mutex_key#7){++++}-{3:3}:
       down_read+0x9c/0x450 kernel/locking/rwsem.c:1509
       inode_lock_shared include/linux/fs.h:766 [inline]
       ext4_bmap+0x52/0x470 fs/ext4/inode.c:3243
       bmap+0xae/0x120 fs/inode.c:1798
       jbd2_journal_bmap+0xac/0x180 fs/jbd2/journal.c:977
       __jbd2_journal_erase fs/jbd2/journal.c:1789 [inline]
       jbd2_journal_flush+0x853/0xc00 fs/jbd2/journal.c:2492
       ext4_ioctl_checkpoint fs/ext4/ioctl.c:1082 [inline]
       __ext4_ioctl+0xb01/0x4b60 fs/ext4/ioctl.c:1590
       vfs_ioctl fs/ioctl.c:51 [inline]
       __do_sys_ioctl fs/ioctl.c:870 [inline]
       __se_sys_ioctl fs/ioctl.c:856 [inline]
       __x64_sys_ioctl+0x197/0x210 fs/ioctl.c:856
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

-> #1 (&journal->j_checkpoint_mutex){+.+.}-{3:3}:
       __mutex_lock_common kernel/locking/mutex.c:603 [inline]
       mutex_lock_io_nested+0x143/0x11a0 kernel/locking/mutex.c:833
       jbd2_journal_flush+0x19e/0xc00 fs/jbd2/journal.c:2464
       ext4_ioctl_checkpoint fs/ext4/ioctl.c:1082 [inline]
       __ext4_ioctl+0xb01/0x4b60 fs/ext4/ioctl.c:1590
       vfs_ioctl fs/ioctl.c:51 [inline]
       __do_sys_ioctl fs/ioctl.c:870 [inline]
       __se_sys_ioctl fs/ioctl.c:856 [inline]
       __x64_sys_ioctl+0x197/0x210 fs/ioctl.c:856
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

-> #0 (&journal->j_barrier){+.+.}-{3:3}:
       check_prev_add kernel/locking/lockdep.c:3097 [inline]
       check_prevs_add kernel/locking/lockdep.c:3216 [inline]
       validate_chain kernel/locking/lockdep.c:3831 [inline]
       __lock_acquire+0x2a43/0x56d0 kernel/locking/lockdep.c:5055
       lock_acquire kernel/locking/lockdep.c:5668 [inline]
       lock_acquire+0x1e3/0x630 kernel/locking/lockdep.c:5633
       __mutex_lock_common kernel/locking/mutex.c:603 [inline]
       __mutex_lock+0x12f/0x1360 kernel/locking/mutex.c:747
       jbd2_journal_lock_updates+0x162/0x310 fs/jbd2/transaction.c:904
       ext4_change_inode_journal_flag+0x188/0x550 fs/ext4/inode.c:6158
       ext4_ioctl_setflags fs/ext4/ioctl.c:687 [inline]
       ext4_fileattr_set+0xe78/0x1a50 fs/ext4/ioctl.c:1004
       vfs_fileattr_set+0x7f9/0xbe0 fs/ioctl.c:696
       ioctl_fssetxattr fs/ioctl.c:758 [inline]
       do_vfs_ioctl+0xf8d/0x15b0 fs/ioctl.c:845
       __do_sys_ioctl fs/ioctl.c:868 [inline]
       __se_sys_ioctl fs/ioctl.c:856 [inline]
       __x64_sys_ioctl+0x10c/0x210 fs/ioctl.c:856
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

other info that might help us debug this:

Chain exists of:
  &journal->j_barrier --> mapping.invalidate_lock --> &sbi->s_writepages_rwsem

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(&sbi->s_writepages_rwsem);
                               lock(mapping.invalidate_lock);
                               lock(&sbi->s_writepages_rwsem);
  lock(&journal->j_barrier);

 *** DEADLOCK ***

4 locks held by syz-executor702/5055:
 #0: ffff888029eba460 (sb_writers#5){.+.+}-{0:0}, at: ioctl_setflags fs/ioctl.c:725 [inline]
 #0: ffff888029eba460 (sb_writers#5){.+.+}-{0:0}, at: do_vfs_ioctl+0xf52/0x15b0 fs/ioctl.c:839
 #1: ffff88806fa364c0 (&sb->s_type->i_mutex_key#7){++++}-{3:3}, at: inode_lock include/linux/fs.h:756 [inline]
 #1: ffff88806fa364c0 (&sb->s_type->i_mutex_key#7){++++}-{3:3}, at: vfs_fileattr_set+0x14c/0xbe0 fs/ioctl.c:681
 #2: ffff88806fa36660 (mapping.invalidate_lock){++++}-{3:3}, at: filemap_invalidate_lock include/linux/fs.h:801 [inline]
 #2: ffff88806fa36660 (mapping.invalidate_lock){++++}-{3:3}, at: ext4_change_inode_journal_flag+0x127/0x550 fs/ext4/inode.c:6149
 #3: ffff888029ef2b98 (&sbi->s_writepages_rwsem){++++}-{0:0}, at: ext4_change_inode_journal_flag+0x180/0x550 fs/ext4/inode.c:6157

stack backtrace:
CPU: 1 PID: 5055 Comm: syz-executor702 Not tainted 6.2.0-rc3-syzkaller-00008-g1fe4fd6f5cad #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/26/2022
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xd1/0x138 lib/dump_stack.c:106
 check_noncircular+0x25f/0x2e0 kernel/locking/lockdep.c:2177
 check_prev_add kernel/locking/lockdep.c:3097 [inline]
 check_prevs_add kernel/locking/lockdep.c:3216 [inline]
 validate_chain kernel/locking/lockdep.c:3831 [inline]
 __lock_acquire+0x2a43/0x56d0 kernel/locking/lockdep.c:5055
 lock_acquire kernel/locking/lockdep.c:5668 [inline]
 lock_acquire+0x1e3/0x630 kernel/locking/lockdep.c:5633
 __mutex_lock_common kernel/locking/mutex.c:603 [inline]
 __mutex_lock+0x12f/0x1360 kernel/locking/mutex.c:747
 jbd2_journal_lock_updates+0x162/0x310 fs/jbd2/transaction.c:904
 ext4_change_inode_journal_flag+0x188/0x550 fs/ext4/inode.c:6158
 ext4_ioctl_setflags fs/ext4/ioctl.c:687 [inline]
 ext4_fileattr_set+0xe78/0x1a50 fs/ext4/ioctl.c:1004
 vfs_fileattr_set+0x7f9/0xbe0 fs/ioctl.c:696
 ioctl_fssetxattr fs/ioctl.c:758 [inline]
 do_vfs_ioctl+0xf8d/0x15b0 fs/ioctl.c:845
 __do_sys_ioctl fs/ioctl.c:868 [inline]
 __se_sys_ioctl fs/ioctl.c:856 [inline]
 __x64_sys_ioctl+0x10c/0x210 fs/ioctl.c:856
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7f070a643be9
Code: 28 c3 e8 2a 14 00 00 66 2e 0f 1f 84 00 00 00 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007ffff55c0628 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f070a643be9
RDX: 0000000020000080 RSI: 0000000040086602 RDI: 0000000000000004
RBP: 00007f070a607d90 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 00007f07
