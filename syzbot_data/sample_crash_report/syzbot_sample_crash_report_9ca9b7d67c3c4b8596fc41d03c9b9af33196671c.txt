================================
WARNING: inconsistent lock state
5.19.0-syzkaller-02972-g200e340f2196 #0 Not tainted
--------------------------------
inconsistent {HARDIRQ-ON-W} -> {IN-HARDIRQ-W} usage.
syz-executor243/3609 [HC1[1]:SC0[0]:HE0:SE1] takes:
ffffffff8c94cb58 (sync_timeline_list_lock){?.+.}-{2:2}, at: sync_timeline_debug_remove+0x25/0x190 drivers/dma-buf/sync_debug.c:31
{HARDIRQ-ON-W} state was registered at:
  __trace_hardirqs_on_caller kernel/locking/lockdep.c:4252 [inline]
  lockdep_hardirqs_on_prepare kernel/locking/lockdep.c:4319 [inline]
  lockdep_hardirqs_on_prepare+0x135/0x400 kernel/locking/lockdep.c:4271
  trace_hardirqs_on+0x2d/0x120 kernel/trace/trace_preemptirq.c:49
  __raw_spin_unlock_irq include/linux/spinlock_api_smp.h:159 [inline]
  _raw_spin_unlock_irq+0x1f/0x40 kernel/locking/spinlock.c:202
  spin_unlock_irq include/linux/spinlock.h:399 [inline]
  sync_print_obj drivers/dma-buf/sync_debug.c:118 [inline]
  sync_info_debugfs_show+0xeb/0x200 drivers/dma-buf/sync_debug.c:153
  seq_read_iter+0x4f5/0x1280 fs/seq_file.c:230
  seq_read+0x2c7/0x420 fs/seq_file.c:162
  vfs_read+0x1ef/0x5d0 fs/read_write.c:469
  ksys_read+0x127/0x250 fs/read_write.c:609
  do_syscall_x64 arch/x86/entry/common.c:50 [inline]
  do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
  entry_SYSCALL_64_after_hwframe+0x63/0xcd
irq event stamp: 9828
hardirqs last  enabled at (9827): [<ffffffff897ad67f>] __raw_spin_unlock_irq include/linux/spinlock_api_smp.h:159 [inline]
hardirqs last  enabled at (9827): [<ffffffff897ad67f>] _raw_spin_unlock_irq+0x1f/0x40 kernel/locking/spinlock.c:202
hardirqs last disabled at (9828): [<ffffffff89777ceb>] sysvec_irq_work+0xb/0xc0 arch/x86/kernel/irq_work.c:17
softirqs last  enabled at (9282): [<ffffffff8147b4e3>] invoke_softirq kernel/softirq.c:445 [inline]
softirqs last  enabled at (9282): [<ffffffff8147b4e3>] __irq_exit_rcu+0x123/0x180 kernel/softirq.c:650
softirqs last disabled at (9255): [<ffffffff8147b4e3>] invoke_softirq kernel/softirq.c:445 [inline]
softirqs last disabled at (9255): [<ffffffff8147b4e3>] __irq_exit_rcu+0x123/0x180 kernel/softirq.c:650

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(sync_timeline_list_lock);
  <Interrupt>
    lock(sync_timeline_list_lock);

 *** DEADLOCK ***

no locks held by syz-executor243/3609.

stack backtrace:
CPU: 0 PID: 3609 Comm: syz-executor243 Not tainted 5.19.0-syzkaller-02972-g200e340f2196 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 07/22/2022
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106
 print_usage_bug kernel/locking/lockdep.c:3961 [inline]
 valid_state kernel/locking/lockdep.c:3973 [inline]
 mark_lock_irq kernel/locking/lockdep.c:4176 [inline]
 mark_lock.part.0.cold+0x18/0xd8 kernel/locking/lockdep.c:4632
 mark_lock kernel/locking/lockdep.c:4596 [inline]
 mark_usage kernel/locking/lockdep.c:4524 [inline]
 __lock_acquire+0x14ad/0x5660 kernel/locking/lockdep.c:5007
 lock_acquire kernel/locking/lockdep.c:5666 [inline]
 lock_acquire+0x1ab/0x570 kernel/locking/lockdep.c:5631
 __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:110 [inline]
 _raw_spin_lock_irqsave+0x39/0x50 kernel/locking/spinlock.c:162
 sync_timeline_debug_remove+0x25/0x190 drivers/dma-buf/sync_debug.c:31
 sync_timeline_free drivers/dma-buf/sw_sync.c:104 [inline]
 kref_put include/linux/kref.h:65 [inline]
 sync_timeline_put drivers/dma-buf/sw_sync.c:116 [inline]
 timeline_fence_release+0x263/0x340 drivers/dma-buf/sw_sync.c:144
 dma_fence_release+0x2ee/0x590 drivers/dma-buf/dma-fence.c:549
 kref_put include/linux/kref.h:65 [inline]
 dma_fence_put include/linux/dma-fence.h:276 [inline]
 dma_fence_array_release+0x1f6/0x2d0 drivers/dma-buf/dma-fence-array.c:120
 dma_fence_release+0x2ee/0x590 drivers/dma-buf/dma-fence.c:549
 kref_put include/linux/kref.h:65 [inline]
 dma_fence_put include/linux/dma-fence.h:276 [inline]
 irq_dma_fence_array_work+0xa5/0xd0 drivers/dma-buf/dma-fence-array.c:52
 irq_work_single+0x120/0x250 kernel/irq_work.c:211
 irq_work_run_list kernel/irq_work.c:242 [inline]
 irq_work_run_list+0x91/0xc0 kernel/irq_work.c:225
 irq_work_run+0x54/0xd0 kernel/irq_work.c:251
 __sysvec_irq_work+0x95/0x3d0 arch/x86/kernel/irq_work.c:22
 sysvec_irq_work+0x8e/0xc0 arch/x86/kernel/irq_work.c:17
 </IRQ>
 <TASK>
 asm_sysvec_irq_work+0x16/0x20 arch/x86/include/asm/idtentry.h:675
RIP: 0010:__raw_spin_unlock_irq include/linux/spinlock_api_smp.h:160 [inline]
RIP: 0010:_raw_spin_unlock_irq+0x25/0x40 kernel/locking/spinlock.c:202
Code: 0f 1f 44 00 00 55 48 8b 74 24 08 48 89 fd 48 83 c7 18 e8 be ed e2 f7 48 89 ef e8 56 6f e3 f7 e8 41 84 05 f8 fb bf 01 00 00 00 <e8> 46 71 d6 f7 65 8b 05 af 98 87 76 85 c0 74 02 5d c3 e8 fb 6e 85
RSP: 0018:ffffc900030d7d18 EFLAGS: 00000206
RAX: 0000000000002663 RBX: 00000000ffffffff RCX: 1ffffffff1b76681
RDX: 0000000000000000 RSI: 0000000000000001 RDI: 0000000000000001
RBP: ffff888017021f50 R08: 0000000000000001 R09: 0000000000000001
R10: ffffed1002e043ea R11: 0000000000000001 R12: ffff888017021f00
R13: dffffc0000000000 R14: ffff888017021f00 R15: ffff888017021f50
 spin_unlock_irq include/linux/spinlock.h:399 [inline]
 sw_sync_debugfs_release+0x160/0x240 drivers/dma-buf/sw_sync.c:321
 __fput+0x277/0x9d0 fs/file_table.c:319
 task_work_run+0xdd/0x1a0 kernel/task_work.c:177
 exit_task_work include/linux/task_work.h:38 [inline]
 do_exit+0xade/0x29d0 kernel/exit.c:795
 do_group_exit+0xd2/0x2f0 kernel/exit.c:925
 __do_sys_exit_group kernel/exit.c:936 [inline]
 __se_sys_exit_group kernel/exit.c:934 [inline]
 __x64_sys_exit_group+0x3a/0x50 kernel/exit.c:934
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7f6248b83969
Code: Unable to access opcode bytes at RIP 0x7f6248b8393f.
RSP: 002b:00007fff6c63ca88
----------------
Code disassembly (best guess):
   0:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   5:	55                   	push   %rbp
   6:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   b:	48 89 fd             	mov    %rdi,%rbp
   e:	48 83 c7 18          	add    $0x18,%rdi
  12:	e8 be ed e2 f7       	callq  0xf7e2edd5
  17:	48 89 ef             	mov    %rbp,%rdi
  1a:	e8 56 6f e3 f7       	callq  0xf7e36f75
  1f:	e8 41 84 05 f8       	callq  0xf8058465
  24:	fb                   	sti
  25:	bf 01 00 00 00       	mov    $0x1,%edi
* 2a:	e8 46 71 d6 f7       	callq  0xf7d67175 <-- trapping instruction
  2f:	65 8b 05 af 98 87 76 	mov    %gs:0x768798af(%rip),%eax        # 0x768798e5
  36:	85 c0                	test   %eax,%eax
  38:	74 02                	je     0x3c
  3a:	5d                   	pop    %rbp
  3b:	c3                   	retq
  3c:	e8                   	.byte 0xe8
  3d:	fb                   	sti
  3e:	6e                   	outsb  %ds:(%rsi),(%dx)
  3f:	85                   	.byte 0x85
