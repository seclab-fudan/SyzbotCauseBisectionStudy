BUG: unable to handle page fault for address: ffffdc0000000000
#PF: supervisor read access in kernel mode
#PF: error_code(0x0000) - not-present page
PGD 11826067 P4D 11826067 PUD 0 
Oops: 0000 [#1] PREEMPT SMP KASAN
CPU: 0 PID: 2977 Comm: udevd Not tainted 6.0.0-rc1-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 07/22/2022
RIP: 0010:strlen+0x1a/0x90 lib/string.c:487
Code: e8 3b 0b a5 fd 48 8b 74 24 08 48 8b 3c 24 eb c0 48 b8 00 00 00 00 00 fc ff df 48 89 fa 55 48 89 fd 48 c1 ea 03 53 48 83 ec 08 <0f> b6 04 02 48 89 fa 83 e2 07 38 d0 7f 04 84 c0 75 48 80 7d 00 00
RSP: 0018:ffffc90003137b28 EFLAGS: 00010296
RAX: dffffc0000000000 RBX: 0000000000000008 RCX: 0000000000000000
RDX: 1fffe00000000000 RSI: ffffffff83c57dd5 RDI: ffff000000000000
RBP: ffff000000000000 R08: 0000000000000001 R09: 0000000000000009
R10: 0000000000000008 R11: 000000000008c07c R12: ffffc90003137c50
R13: 00000000fffffff4 R14: ffffc90003137be0 R15: 0000000000000001
FS:  00007fb147fa5840(0000) GS:ffff8880b9a00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: ffffdc0000000000 CR3: 000000001f125000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 <TASK>
 __fortify_strlen include/linux/fortify-string.h:141 [inline]
 tomoyo_encode+0x1d/0x50 security/tomoyo/realpath.c:80
 tomoyo_path_perm+0x368/0x400 security/tomoyo/file.c:831
 tomoyo_path_symlink+0x94/0xe0 security/tomoyo/tomoyo.c:199
 security_path_symlink+0xdf/0x150 security/security.c:1182
 do_symlinkat+0x106/0x2e0 fs/namei.c:4402
 __do_sys_symlink fs/namei.c:4429 [inline]
 __se_sys_symlink fs/namei.c:4427 [inline]
 __x64_sys_symlink+0x75/0x90 fs/namei.c:4427
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7fb147b27217
Code: f0 ff ff 73 01 c3 48 8b 0d 5e dc 0c 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 b8 58 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 31 dc 0c 00 f7 d8 64 89 01 48
RSP: 002b:00007ffc18eeb108 EFLAGS: 00000206 ORIG_RAX: 0000000000000058
RAX: ffffffffffffffda RBX: 00007ffc18eeb1b8 RCX: 00007fb147b27217
RDX: 0000000000000001 RSI: 00007ffc18eebad8 RDI: 00007ffc18eeb1b8
RBP: 00007ffc18eebad8 R08: 0000000000000007 R09: 000055e4f590fdb0
R10: 0000000000000000 R11: 0000000000000206 R12: 0000000000000005
R13: 000055e4f59487c0 R14: 000055e4f5940a90 R15: 00007ffc18eebaea
 </TASK>
Modules linked in:
CR2: ffffdc0000000000
---[ end trace 0000000000000000 ]---
RIP: 0010:strlen+0x1a/0x90 lib/string.c:487
Code: e8 3b 0b a5 fd 48 8b 74 24 08 48 8b 3c 24 eb c0 48 b8 00 00 00 00 00 fc ff df 48 89 fa 55 48 89 fd 48 c1 ea 03 53 48 83 ec 08 <0f> b6 04 02 48 89 fa 83 e2 07 38 d0 7f 04 84 c0 75 48 80 7d 00 00
RSP: 0018:ffffc90003137b28 EFLAGS: 00010296
RAX: dffffc0000000000 RBX: 0000000000000008 RCX: 0000000000000000
RDX: 1fffe00000000000 RSI: ffffffff83c57dd5 RDI: ffff000000000000
RBP: ffff000000000000 R08: 0000000000000001 R09: 0000000000000009
R10: 0000000000000008 R11: 000000000008c07c R12: ffffc90003137c50
R13: 00000000fffffff4 R14: ffffc90003137be0 R15: 0000000000000001
FS:  00007fb147fa5840(0000) GS:ffff8880b9a00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: ffffdc0000000000 CR3: 000000001f125000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
----------------
Code disassembly (best guess):
   0:	e8 3b 0b a5 fd       	callq  0xfda50b40
   5:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   a:	48 8b 3c 24          	mov    (%rsp),%rdi
   e:	eb c0                	jmp    0xffffffd0
  10:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax
  17:	fc ff df
  1a:	48 89 fa             	mov    %rdi,%rdx
  1d:	55                   	push   %rbp
  1e:	48 89 fd             	mov    %rdi,%rbp
  21:	48 c1 ea 03          	shr    $0x3,%rdx
  25:	53                   	push   %rbx
  26:	48 83 ec 08          	sub    $0x8,%rsp
* 2a:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax <-- trapping instruction
  2e:	48 89 fa             	mov    %rdi,%rdx
  31:	83 e2 07             	and    $0x7,%edx
  34:	38 d0                	cmp    %dl,%al
  36:	7f 04                	jg     0x3c
  38:	84 c0                	test   %al,%al
  3a:	75 48                	jne    0x84
  3c:	80 7d 00 00          	cmpb   $0x0,0x0(%rbp)
