loop0: detected capacity change from 0 to 64
general protection fault, probably for non-canonical address 0xdffffc0000000008: 0000 [#1] PREEMPT SMP KASAN
KASAN: null-ptr-deref in range [0x0000000000000040-0x0000000000000047]
CPU: 0 PID: 5067 Comm: syz-executor265 Not tainted 6.1.0-syzkaller-13031-g77856d911a8c #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/26/2022
RIP: 0010:hfs_find_init+0x6e/0x1e0 fs/hfs/bfind.c:21
Code: d8 48 c1 e8 03 42 80 3c 28 00 74 08 48 89 df e8 f8 b6 7f ff 48 c7 03 00 00 00 00 48 89 2c 24 4c 8d 75 40 4d 89 f7 49 c1 ef 03 <43> 8a 04 2f 84 c0 0f 85 0a 01 00 00 41 8b 06 8d 7c 00 04 be c0 0c
RSP: 0018:ffffc90003caf2e0 EFLAGS: 00010202
RAX: 1ffff92000795e7f RBX: ffffc90003caf3f8 RCX: ffff8880795d0000
RDX: 0000000000000000 RSI: ffffc90003caf3e0 RDI: ffffc90003caf3f0
RBP: 0000000000000000 R08: ffffffff8262ead7 R09: fffffbfff1d2c9e6
R10: fffffbfff1d2c9e6 R11: 1ffffffff1d2c9e5 R12: ffffc90003caf3e0
R13: dffffc0000000000 R14: 0000000000000040 R15: 0000000000000008
FS:  0000555557423300(0000) GS:ffff8880b9800000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00000000005fdeb8 CR3: 00000000721f3000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 <TASK>
 hfs_ext_read_extent fs/hfs/extent.c:200 [inline]
 hfs_get_block+0x519/0xbb0 fs/hfs/extent.c:366
 block_read_full_folio+0x3b3/0xfa0 fs/buffer.c:2271
 filemap_read_folio+0x187/0x7d0 mm/filemap.c:2426
 do_read_cache_folio+0x2d3/0x790 mm/filemap.c:3553
 do_read_cache_page mm/filemap.c:3595 [inline]
 read_cache_page+0x56/0x270 mm/filemap.c:3604
 read_mapping_page include/linux/pagemap.h:755 [inline]
 hfs_btree_open+0x50c/0xf20 fs/hfs/btree.c:78
 hfs_mdb_get+0x1404/0x21a0 fs/hfs/mdb.c:199
 hfs_fill_super+0xfc7/0x1690 fs/hfs/super.c:406
 mount_bdev+0x26c/0x3a0 fs/super.c:1359
 legacy_get_tree+0xea/0x180 fs/fs_context.c:610
 vfs_get_tree+0x88/0x270 fs/super.c:1489
 do_new_mount+0x289/0xad0 fs/namespace.c:3145
 do_mount fs/namespace.c:3488 [inline]
 __do_sys_mount fs/namespace.c:3697 [inline]
 __se_sys_mount+0x2d3/0x3c0 fs/namespace.c:3674
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7efef4f81ada
Code: 83 c4 08 5b 5d c3 66 2e 0f 1f 84 00 00 00 00 00 c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 49 89 ca b8 a5 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007ffee28090a8 EFLAGS: 00000286 ORIG_RAX: 00000000000000a5
RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007efef4f81ada
RDX: 0000000020000240 RSI: 0000000020000000 RDI: 00007ffee28090c0
RBP: 00007ffee28090c0 R08: 00007ffee2809100 R09: 0000000000000248
R10: 0000000000000000 R11: 0000000000000286 R12: 0000000000000004
R13: 00005555574232c0 R14: 0000000000000000 R15: 00007ffee2809100
 </TASK>
Modules linked in:
---[ end trace 0000000000000000 ]---
RIP: 0010:hfs_find_init+0x6e/0x1e0 fs/hfs/bfind.c:21
Code: d8 48 c1 e8 03 42 80 3c 28 00 74 08 48 89 df e8 f8 b6 7f ff 48 c7 03 00 00 00 00 48 89 2c 24 4c 8d 75 40 4d 89 f7 49 c1 ef 03 <43> 8a 04 2f 84 c0 0f 85 0a 01 00 00 41 8b 06 8d 7c 00 04 be c0 0c
RSP: 0018:ffffc90003caf2e0 EFLAGS: 00010202
RAX: 1ffff92000795e7f RBX: ffffc90003caf3f8 RCX: ffff8880795d0000
RDX: 0000000000000000 RSI: ffffc90003caf3e0 RDI: ffffc90003caf3f0
RBP: 0000000000000000 R08: ffffffff8262ead7 R09: fffffbfff1d2c9e6
R10: fffffbfff1d2c9e6 R11: 1ffffffff1d2c9e5 R12: ffffc90003caf3e0
R13: dffffc0000000000 R14: 0000000000000040 R15: 0000000000000008
FS:  0000555557423300(0000) GS:ffff8880b9800000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00000000005fdeb8 CR3: 00000000721f3000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
----------------
Code disassembly (best guess):
   0:	d8 48 c1             	fmuls  -0x3f(%rax)
   3:	e8 03 42 80 3c       	callq  0x3c80420b
   8:	28 00                	sub    %al,(%rax)
   a:	74 08                	je     0x14
   c:	48 89 df             	mov    %rbx,%rdi
   f:	e8 f8 b6 7f ff       	callq  0xff7fb70c
  14:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
  1b:	48 89 2c 24          	mov    %rbp,(%rsp)
  1f:	4c 8d 75 40          	lea    0x40(%rbp),%r14
  23:	4d 89 f7             	mov    %r14,%r15
  26:	49 c1 ef 03          	shr    $0x3,%r15
* 2a:	43 8a 04 2f          	mov    (%r15,%r13,1),%al <-- trapping instruction
  2e:	84 c0                	test   %al,%al
  30:	0f 85 0a 01 00 00    	jne    0x140
  36:	41 8b 06             	mov    (%r14),%eax
  39:	8d 7c 00 04          	lea    0x4(%rax,%rax,1),%edi
  3d:	be                   	.byte 0xbe
  3e:	c0                   	.byte 0xc0
  3f:	0c                   	.byte 0xc
