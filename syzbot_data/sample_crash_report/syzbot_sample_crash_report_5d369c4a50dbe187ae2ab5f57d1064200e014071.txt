INFO: task syz-executor241:3599 blocked for more than 143 seconds.
      Not tainted 5.18.0-rc7-syzkaller #0
"echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
task:syz-executor241 state:D stack:25592 pid: 3599 ppid:  3598 flags:0x00004004
Call Trace:
 <TASK>
 context_switch kernel/sched/core.c:5073 [inline]
 __schedule+0xa9a/0x4cc0 kernel/sched/core.c:6388
 schedule+0xd2/0x1f0 kernel/sched/core.c:6460
 schedule_timeout+0x1db/0x2a0 kernel/time/timer.c:1860
 do_wait_for_common kernel/sched/completion.c:85 [inline]
 __wait_for_common+0x373/0x530 kernel/sched/completion.c:106
 xfs_buf_iowait+0xd5/0x5f0 fs/xfs/xfs_buf.c:1577
 __xfs_buf_submit+0x4b5/0x840 fs/xfs/xfs_buf.c:1657
 xfs_buf_submit fs/xfs/xfs_buf.c:59 [inline]
 xfs_buf_read_uncached+0x20d/0x380 fs/xfs/xfs_buf.c:891
 xfs_readsb+0x318/0x630 fs/xfs/xfs_mount.c:179
 xfs_fs_fill_super+0x72e/0x1d90 fs/xfs/xfs_super.c:1491
 get_tree_bdev+0x440/0x760 fs/super.c:1292
 vfs_get_tree+0x89/0x2f0 fs/super.c:1497
 do_new_mount fs/namespace.c:3040 [inline]
 path_mount+0x1320/0x1fa0 fs/namespace.c:3370
 do_mount fs/namespace.c:3383 [inline]
 __do_sys_mount fs/namespace.c:3591 [inline]
 __se_sys_mount fs/namespace.c:3568 [inline]
 __x64_sys_mount+0x27f/0x300 fs/namespace.c:3568
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x44/0xae
RIP: 0033:0x7fd2b9b2c3c9
RSP: 002b:00007ffc252ce848 EFLAGS: 00000246 ORIG_RAX: 00000000000000a5
RAX: ffffffffffffffda RBX: 0030656c69662f2e RCX: 00007fd2b9b2c3c9
RDX: 0000000020000140 RSI: 0000000020000000 RDI: 00000000200000c0
RBP: 0000000000000000 R08: 0000000000000000 R09: 00007ffc252ce9e8
R10: 0000000000008002 R11: 0000000000000246 R12: 00007fd2b9aeb6e0
R13: 431bde82d7b634db R14: 0000000000000000 R15: 0000000000000000
 </TASK>

Showing all locks held in the system:
1 lock held by khungtaskd/28:
 #0: ffffffff8bd7f5e0 (rcu_read_lock){....}-{1:2}, at: debug_show_all_locks+0x53/0x260 kernel/locking/lockdep.c:6467
2 locks held by getty/3278:
 #0: ffff88807faec098 (&tty->ldisc_sem){++++}-{0:0}, at: tty_ldisc_ref_wait+0x22/0x80 drivers/tty/tty_ldisc.c:244
 #1: ffffc900013e82e8 (&ldata->atomic_read_lock){+.+.}-{3:3}, at: n_tty_read+0xcea/0x1230 drivers/tty/n_tty.c:2075
1 lock held by syz-executor241/3599:
 #0: ffff88807e2560e0 (&type->s_umount_key#59/1){+.+.}-{3:3}, at: alloc_super+0x1dd/0xa80 fs/super.c:228

=============================================

NMI backtrace for cpu 0
CPU: 0 PID: 28 Comm: khungtaskd Not tainted 5.18.0-rc7-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106
 nmi_cpu_backtrace.cold+0x47/0x144 lib/nmi_backtrace.c:111
 nmi_trigger_cpumask_backtrace+0x1e6/0x230 lib/nmi_backtrace.c:62
 trigger_all_cpu_backtrace include/linux/nmi.h:146 [inline]
 check_hung_uninterruptible_tasks kernel/hung_task.c:212 [inline]
 watchdog+0xc1d/0xf50 kernel/hung_task.c:369
 kthread+0x2e9/0x3a0 kernel/kthread.c:376
 ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:298
 </TASK>
Sending NMI from CPU 0 to CPUs 1:
NMI backtrace for cpu 1
CPU: 1 PID: 1227 Comm: kworker/u4:5 Not tainted 5.18.0-rc7-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
Workqueue: events_unbound toggle_allocation_gate
RIP: 0010:__lock_is_held kernel/locking/lockdep.c:5382 [inline]
RIP: 0010:lock_is_held_type+0x93/0x140 kernel/locking/lockdep.c:5684
Code: 00 00 4d 8d ac 24 60 0a 00 00 65 ff 05 fe 44 95 76 85 c0 7f 12 e9 8a 00 00 00 83 c3 01 41 3b 9c 24 58 0a 00 00 7d 7d 48 63 c3 <48> 89 ee 48 8d 04 80 4d 8d 7c c5 00 4c 89 ff e8 99 fe ff ff 85 c0
RSP: 0018:ffffc9000524f8c8 EFLAGS: 00000093
RAX: 0000000000000002 RBX: 0000000000000002 RCX: 0000000000000001
RDX: 0000000000000000 RSI: ffffffff8bd7f520 RDI: ffff88801e9cccc8
RBP: ffffffff8bd7f520 R08: 0000000000000000 R09: ffffffff8db8e757
R10: fffffbfff1b71cea R11: 0000000000000000 R12: ffff88801e9cc240
R13: ffff88801e9ccca0 R14: 00000000ffffffff R15: ffff88801e9cccc8
FS:  0000000000000000(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 000055a4f2ba8680 CR3: 000000000ba8e000 CR4: 00000000003506e0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 <TASK>
 lock_is_held include/linux/lockdep.h:283 [inline]
 rcu_read_lock_sched_held+0x3a/0x70 kernel/rcu/update.c:125
 trace_lock_acquire include/trace/events/lock.h:13 [inline]
 lock_acquire+0x442/0x510 kernel/locking/lockdep.c:5612
 __mutex_lock_common kernel/locking/mutex.c:600 [inline]
 __mutex_lock+0x12f/0x12f0 kernel/locking/mutex.c:733
 arch_jump_label_transform_queue+0x58/0x100 arch/x86/kernel/jump_label.c:136
 __jump_label_update+0x12e/0x400 kernel/jump_label.c:451
 jump_label_update+0x32f/0x410 kernel/jump_label.c:830
 static_key_disable_cpuslocked+0x152/0x1b0 kernel/jump_label.c:207
 static_key_disable+0x16/0x20 kernel/jump_label.c:215
 toggle_allocation_gate mm/kfence/core.c:788 [inline]
 toggle_allocation_gate+0x183/0x390 mm/kfence/core.c:766
 process_one_work+0x996/0x1610 kernel/workqueue.c:2289
 worker_thread+0x665/0x1080 kernel/workqueue.c:2436
 kthread+0x2e9/0x3a0 kernel/kthread.c:376
 ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:298
 </TASK>
INFO: NMI handler (nmi_cpu_backtrace_handler) took too long to run: 1.047 msecs
----------------
Code disassembly (best guess):
   0:	00 00                	add    %al,(%rax)
   2:	4d 8d ac 24 60 0a 00 	lea    0xa60(%r12),%r13
   9:	00
   a:	65 ff 05 fe 44 95 76 	incl   %gs:0x769544fe(%rip)        # 0x7695450f
  11:	85 c0                	test   %eax,%eax
  13:	7f 12                	jg     0x27
  15:	e9 8a 00 00 00       	jmpq   0xa4
  1a:	83 c3 01             	add    $0x1,%ebx
  1d:	41 3b 9c 24 58 0a 00 	cmp    0xa58(%r12),%ebx
  24:	00
  25:	7d 7d                	jge    0xa4
  27:	48 63 c3             	movslq %ebx,%rax
* 2a:	48 89 ee             	mov    %rbp,%rsi <-- trapping instruction
  2d:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  31:	4d 8d 7c c5 00       	lea    0x0(%r13,%rax,8),%r15
  36:	4c 89 ff             	mov    %r15,%rdi
  39:	e8 99 fe ff ff       	callq  0xfffffed7
  3e:	85 c0                	test   %eax,%eax
