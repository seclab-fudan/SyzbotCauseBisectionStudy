======================================================
WARNING: possible circular locking dependency detected
6.3.0-rc3-syzkaller-00012-g17214b70a159 #0 Not tainted
------------------------------------------------------
syz-executor392/5082 is trying to acquire lock:
ffff88814b9b0460 (sb_writers#4){.+.+}-{0:0}, at: mnt_want_write+0x3f/0x90 fs/namespace.c:394

but task is already holding lock:
ffff88801fe5ace0 (&iint->mutex){+.+.}-{3:3}, at: process_measurement+0x7c0/0x1ce0 security/integrity/ima/ima_main.c:262

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #1 (&iint->mutex){+.+.}-{3:3}:
       lock_acquire+0x1e1/0x520 kernel/locking/lockdep.c:5669
       __mutex_lock_common+0x1d8/0x2530 kernel/locking/mutex.c:603
       __mutex_lock kernel/locking/mutex.c:747 [inline]
       mutex_lock_nested+0x1b/0x20 kernel/locking/mutex.c:799
       process_measurement+0x7c0/0x1ce0 security/integrity/ima/ima_main.c:262
       ima_file_check+0xf1/0x170 security/integrity/ima/ima_main.c:539
       do_open fs/namei.c:3562 [inline]
       path_openat+0x280a/0x3170 fs/namei.c:3715
       do_filp_open+0x234/0x490 fs/namei.c:3742
       do_sys_openat2+0x13f/0x500 fs/open.c:1348
       do_sys_open fs/open.c:1364 [inline]
       __do_sys_openat fs/open.c:1380 [inline]
       __se_sys_openat fs/open.c:1375 [inline]
       __x64_sys_openat+0x247/0x290 fs/open.c:1375
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

-> #0 (sb_writers#4){.+.+}-{0:0}:
       check_prev_add kernel/locking/lockdep.c:3098 [inline]
       check_prevs_add kernel/locking/lockdep.c:3217 [inline]
       validate_chain+0x166b/0x58e0 kernel/locking/lockdep.c:3832
       __lock_acquire+0x125b/0x1f80 kernel/locking/lockdep.c:5056
       lock_acquire+0x1e1/0x520 kernel/locking/lockdep.c:5669
       percpu_down_read include/linux/percpu-rwsem.h:51 [inline]
       __sb_start_write include/linux/fs.h:1477 [inline]
       sb_start_write+0x4d/0x1c0 include/linux/fs.h:1552
       mnt_want_write+0x3f/0x90 fs/namespace.c:394
       ovl_maybe_copy_up+0x115/0x180 fs/overlayfs/copy_up.c:1125
       ovl_open+0x10c/0x2b0 fs/overlayfs/file.c:153
       do_dentry_open+0x7f9/0x10f0 fs/open.c:920
       vfs_open fs/open.c:1051 [inline]
       dentry_open+0xc5/0x120 fs/open.c:1067
       ima_calc_file_hash+0x15d/0x1c00 security/integrity/ima/ima_crypto.c:558
       ima_collect_measurement+0x3a7/0x880 security/integrity/ima/ima_api.c:293
       process_measurement+0xfdb/0x1ce0 security/integrity/ima/ima_main.c:341
       ima_file_check+0xf1/0x170 security/integrity/ima/ima_main.c:539
       do_open fs/namei.c:3562 [inline]
       path_openat+0x280a/0x3170 fs/namei.c:3715
       do_filp_open+0x234/0x490 fs/namei.c:3742
       do_sys_openat2+0x13f/0x500 fs/open.c:1348
       do_sys_open fs/open.c:1364 [inline]
       __do_sys_openat fs/open.c:1380 [inline]
       __se_sys_openat fs/open.c:1375 [inline]
       __x64_sys_openat+0x247/0x290 fs/open.c:1375
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

other info that might help us debug this:

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(&iint->mutex);
                               lock(sb_writers#4);
                               lock(&iint->mutex);
  lock(sb_writers#4);

 *** DEADLOCK ***

1 lock held by syz-executor392/5082:
 #0: ffff88801fe5ace0 (&iint->mutex){+.+.}-{3:3}, at: process_measurement+0x7c0/0x1ce0 security/integrity/ima/ima_main.c:262

stack backtrace:
CPU: 1 PID: 5082 Comm: syz-executor392 Not tainted 6.3.0-rc3-syzkaller-00012-g17214b70a159 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/02/2023
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x1e7/0x2d0 lib/dump_stack.c:106
 check_noncircular+0x2fe/0x3b0 kernel/locking/lockdep.c:2178
 check_prev_add kernel/locking/lockdep.c:3098 [inline]
 check_prevs_add kernel/locking/lockdep.c:3217 [inline]
 validate_chain+0x166b/0x58e0 kernel/locking/lockdep.c:3832
 __lock_acquire+0x125b/0x1f80 kernel/locking/lockdep.c:5056
 lock_acquire+0x1e1/0x520 kernel/locking/lockdep.c:5669
 percpu_down_read include/linux/percpu-rwsem.h:51 [inline]
 __sb_start_write include/linux/fs.h:1477 [inline]
 sb_start_write+0x4d/0x1c0 include/linux/fs.h:1552
 mnt_want_write+0x3f/0x90 fs/namespace.c:394
 ovl_maybe_copy_up+0x115/0x180 fs/overlayfs/copy_up.c:1125
 ovl_open+0x10c/0x2b0 fs/overlayfs/file.c:153
 do_dentry_open+0x7f9/0x10f0 fs/open.c:920
 vfs_open fs/open.c:1051 [inline]
 dentry_open+0xc5/0x120 fs/open.c:1067
 ima_calc_file_hash+0x15d/0x1c00 security/integrity/ima/ima_crypto.c:558
 ima_collect_measurement+0x3a7/0x880 security/integrity/ima/ima_api.c:293
 process_measurement+0xfdb/0x1ce0 security/integrity/ima/ima_main.c:341
 ima_file_check+0xf1/0x170 security/integrity/ima/ima_main.c:539
 do_open fs/namei.c:3562 [inline]
 path_openat+0x280a/0x3170 fs/namei.c:3715
 do_filp_open+0x234/0x490 fs/namei.c:3742
 do_sys_openat2+0x13f/0x500 fs/open.c:1348
 do_sys_open fs/open.c:1364 [inline]
 __do_sys_openat fs/open.c:1380 [inline]
 __se_sys_openat fs/open.c:1375 [inline]
 __x64_sys_openat+0x247/0x290 fs/open.c:1375
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7fc31b6b8d29
Code: 28 c3 e8 2a 14 00 00 66 2e 0f 1f 84 00 00 00 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007ffcecef4908 EFLAGS: 00000246 ORIG_RAX: 0000000000000101
RAX: ffffffffffffffda RBX: 003065
