REISERFS (device loop0): Created .reiserfs_priv - reserved for xattr storage.
divide error: 0000 [#1] PREEMPT SMP KASAN
CPU: 0 PID: 5074 Comm: syz-executor667 Not tainted 6.3.0-rc4-syzkaller-00025-g3a93e40326c8 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/17/2023
RIP: 0010:do_journal_end+0x167d/0x4af0 fs/reiserfs/journal.c:4091
Code: c6 41 84 f0 0f 85 16 2b 00 00 83 e2 07 38 d1 40 0f 9e c6 84 c9 0f 95 c2 40 84 d6 0f 85 ff 2a 00 00 8b 4b 14 48 8d 7d 18 31 d2 <48> f7 f1 4a 8d 34 2a 48 89 fa 48 b8 00 00 00 00 00 fc ff df 48 c1
RSP: 0018:ffffc90003f6f9c8 EFLAGS: 00010246
RAX: 0000000000000003 RBX: ffff88807430d000 RCX: 0000000000000000
RDX: 0000000000000000 RSI: 0000000000000001 RDI: ffff888017dec018
RBP: ffff888017dec000 R08: 0000000000000001 R09: ffff8880214d0000
R10: 0000000000000001 R11: 0000000000000004 R12: 0000000000001000
R13: 0000000000000000 R14: ffffc90003f6fbb8 R15: ffff888073c980e8
FS:  0000000000000000(0000) GS:ffff8880b9800000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00005629c68e9c38 CR3: 000000002a9fb000 CR4: 0000000000350ef0
Call Trace:
 <TASK>
 reiserfs_sync_fs+0xfc/0x130 fs/reiserfs/super.c:78
 sync_filesystem.part.0+0x75/0x1d0 fs/sync.c:56
 sync_filesystem+0x8f/0xc0 fs/sync.c:43
 generic_shutdown_super+0x74/0x480 fs/super.c:473
 kill_block_super+0x9b/0xf0 fs/super.c:1407
 deactivate_locked_super+0x98/0x160 fs/super.c:331
 deactivate_super+0xb1/0xd0 fs/super.c:362
 cleanup_mnt+0x2ae/0x3d0 fs/namespace.c:1177
 task_work_run+0x16f/0x270 kernel/task_work.c:179
 exit_task_work include/linux/task_work.h:38 [inline]
 do_exit+0xad3/0x2960 kernel/exit.c:869
 do_group_exit+0xd4/0x2a0 kernel/exit.c:1019
 __do_sys_exit_group kernel/exit.c:1030 [inline]
 __se_sys_exit_group kernel/exit.c:1028 [inline]
 __x64_sys_exit_group+0x3e/0x50 kernel/exit.c:1028
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7fdb7219dad9
Code: Unable to access opcode bytes at 0x7fdb7219daaf.
RSP: 002b:00007ffc05e0ff48 EFLAGS: 00000246 ORIG_RAX: 00000000000000e7
RAX: ffffffffffffffda RBX: 00007fdb72213350 RCX: 00007fdb7219dad9
RDX: 000000000000003c RSI: 00000000000000e7 RDI: 0000000000000001
RBP: 0000000000000001 R08: ffffffffffffffc0 R09: 00007fdb7220de40
R10: 000000000001ff01 R11: 0000000000000246 R12: 00007fdb72213350
R13: 0000000000000001 R14: 0000000000000000 R15: 0000000000000001
 </TASK>
Modules linked in:
---[ end trace 0000000000000000 ]---
RIP: 0010:do_journal_end+0x167d/0x4af0 fs/reiserfs/journal.c:4091
Code: c6 41 84 f0 0f 85 16 2b 00 00 83 e2 07 38 d1 40 0f 9e c6 84 c9 0f 95 c2 40 84 d6 0f 85 ff 2a 00 00 8b 4b 14 48 8d 7d 18 31 d2 <48> f7 f1 4a 8d 34 2a 48 89 fa 48 b8 00 00 00 00 00 fc ff df 48 c1
RSP: 0018:ffffc90003f6f9c8 EFLAGS: 00010246
RAX: 0000000000000003 RBX: ffff88807430d000 RCX: 0000000000000000
RDX: 0000000000000000 RSI: 0000000000000001 RDI: ffff888017dec018
RBP: ffff888017dec000 R08: 0000000000000001 R09: ffff8880214d0000
R10: 0000000000000001 R11: 0000000000000004 R12: 0000000000001000
R13: 0000000000000000 R14: ffffc90003f6fbb8 R15: ffff888073c980e8
FS:  0000000000000000(0000) GS:ffff8880b9900000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007fff24dccfc8 CR3: 000000000c571000 CR4: 0000000000350ee0
----------------
Code disassembly (best guess):
   0:	c6 41 84 f0          	movb   $0xf0,-0x7c(%rcx)
   4:	0f 85 16 2b 00 00    	jne    0x2b20
   a:	83 e2 07             	and    $0x7,%edx
   d:	38 d1                	cmp    %dl,%cl
   f:	40 0f 9e c6          	setle  %sil
  13:	84 c9                	test   %cl,%cl
  15:	0f 95 c2             	setne  %dl
  18:	40 84 d6             	test   %dl,%sil
  1b:	0f 85 ff 2a 00 00    	jne    0x2b20
  21:	8b 4b 14             	mov    0x14(%rbx),%ecx
  24:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
  28:	31 d2                	xor    %edx,%edx
* 2a:	48 f7 f1             	div    %rcx <-- trapping instruction
  2d:	4a 8d 34 2a          	lea    (%rdx,%r13,1),%rsi
  31:	48 89 fa             	mov    %rdi,%rdx
  34:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax
  3b:	fc ff df
  3e:	48                   	rex.W
  3f:	c1                   	.byte 0xc1
