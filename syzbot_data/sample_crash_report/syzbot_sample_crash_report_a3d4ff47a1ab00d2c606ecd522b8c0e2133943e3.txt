nci: __nci_request: wait_for_completion_interruptible_timeout failed 0
======================================================
WARNING: possible circular locking dependency detected
6.1.0-syzkaller-03225-g764822972d64 #0 Not tainted
------------------------------------------------------
syz-executor164/3633 is trying to acquire lock:
ffffffff8dbab6a8 (nci_mutex){+.+.}-{3:3}, at: virtual_nci_close+0x13/0x40 drivers/nfc/virtual_ncidev.c:44

but task is already holding lock:
ffff88801fc07350 (&ndev->req_lock){+.+.}-{3:3}, at: nci_close_device+0xfe/0x5e0 net/nfc/nci/core.c:560

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #3 (&ndev->req_lock){+.+.}-{3:3}:
       lock_acquire+0x1a7/0x400 kernel/locking/lockdep.c:5668
       __mutex_lock_common+0x1de/0x26c0 kernel/locking/mutex.c:603
       __mutex_lock kernel/locking/mutex.c:747 [inline]
       mutex_lock_nested+0x17/0x20 kernel/locking/mutex.c:799
       nci_request net/nfc/nci/core.c:148 [inline]
       nci_set_local_general_bytes net/nfc/nci/core.c:774 [inline]
       nci_start_poll+0x57a/0xef0 net/nfc/nci/core.c:838
       nfc_start_poll+0x185/0x2f0 net/nfc/core.c:225
       nfc_genl_start_poll+0x1df/0x340 net/nfc/netlink.c:828
       genl_family_rcv_msg_doit net/netlink/genetlink.c:756 [inline]
       genl_family_rcv_msg net/netlink/genetlink.c:833 [inline]
       genl_rcv_msg+0xc02/0xf60 net/netlink/genetlink.c:850
       netlink_rcv_skb+0x1f0/0x460 net/netlink/af_netlink.c:2540
       genl_rcv+0x24/0x40 net/netlink/genetlink.c:861
       netlink_unicast_kernel net/netlink/af_netlink.c:1319 [inline]
       netlink_unicast+0x7e7/0x9c0 net/netlink/af_netlink.c:1345
       netlink_sendmsg+0x9b3/0xcd0 net/netlink/af_netlink.c:1921
       sock_sendmsg_nosec net/socket.c:714 [inline]
       sock_sendmsg net/socket.c:734 [inline]
       ____sys_sendmsg+0x597/0x8e0 net/socket.c:2482
       ___sys_sendmsg net/socket.c:2536 [inline]
       __sys_sendmsg+0x28e/0x390 net/socket.c:2565
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x2b/0x70 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

-> #2 (&genl_data->genl_data_mutex){+.+.}-{3:3}:
       lock_acquire+0x1a7/0x400 kernel/locking/lockdep.c:5668
       __mutex_lock_common+0x1de/0x26c0 kernel/locking/mutex.c:603
       __mutex_lock kernel/locking/mutex.c:747 [inline]
       mutex_lock_nested+0x17/0x20 kernel/locking/mutex.c:799
       nfc_urelease_event_work+0x10a/0x300 net/nfc/netlink.c:1811
       process_one_work+0x81c/0xd10 kernel/workqueue.c:2289
       worker_thread+0xb14/0x1330 kernel/workqueue.c:2436
       kthread+0x266/0x300 kernel/kthread.c:376
       ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:306

-> #1 (nfc_devlist_mutex){+.+.}-{3:3}:
       lock_acquire+0x1a7/0x400 kernel/locking/lockdep.c:5668
       __mutex_lock_common+0x1de/0x26c0 kernel/locking/mutex.c:603
       __mutex_lock kernel/locking/mutex.c:747 [inline]
       mutex_lock_nested+0x17/0x20 kernel/locking/mutex.c:799
       nfc_register_device+0x33/0x320 net/nfc/core.c:1116
       nci_register_device+0x7c7/0x900 net/nfc/nci/core.c:1256
       virtual_ncidev_open+0x55/0xc0 drivers/nfc/virtual_ncidev.c:146
       misc_open+0x346/0x3c0 drivers/char/misc.c:143
       chrdev_open+0x5fb/0x680 fs/char_dev.c:414
       do_dentry_open+0x85f/0x11b0 fs/open.c:882
       do_open fs/namei.c:3557 [inline]
       path_openat+0x25d1/0x2de0 fs/namei.c:3714
       do_filp_open+0x275/0x500 fs/namei.c:3741
       do_sys_openat2+0x13b/0x500 fs/open.c:1310
       do_sys_open fs/open.c:1326 [inline]
       __do_sys_openat fs/open.c:1342 [inline]
       __se_sys_openat fs/open.c:1337 [inline]
       __x64_sys_openat+0x243/0x290 fs/open.c:1337
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x2b/0x70 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

-> #0 (nci_mutex){+.+.}-{3:3}:
       check_prev_add kernel/locking/lockdep.c:3097 [inline]
       check_prevs_add kernel/locking/lockdep.c:3216 [inline]
       validate_chain+0x184a/0x6470 kernel/locking/lockdep.c:3831
       __lock_acquire+0x1292/0x1f60 kernel/locking/lockdep.c:5055
       lock_acquire+0x1a7/0x400 kernel/locking/lockdep.c:5668
       __mutex_lock_common+0x1de/0x26c0 kernel/locking/mutex.c:603
       __mutex_lock kernel/locking/mutex.c:747 [inline]
       mutex_lock_nested+0x17/0x20 kernel/locking/mutex.c:799
       virtual_nci_close+0x13/0x40 drivers/nfc/virtual_ncidev.c:44
       nci_close_device+0x389/0x5e0 net/nfc/nci/core.c:592
       nci_unregister_device+0x3c/0x250 net/nfc/nci/core.c:1291
       virtual_ncidev_close+0x55/0x90 drivers/nfc/virtual_ncidev.c:166
       __fput+0x3ba/0x880 fs/file_table.c:320
       task_work_run+0x243/0x300 kernel/task_work.c:179
       exit_task_work include/linux/task_work.h:38 [inline]
       do_exit+0x664/0x2070 kernel/exit.c:820
       do_group_exit+0x1fd/0x2b0 kernel/exit.c:950
       get_signal+0x1743/0x1810 kernel/signal.c:2858
       arch_do_signal_or_restart+0x8d/0x5f0 arch/x86/kernel/signal.c:306
       exit_to_user_mode_loop+0x74/0x160 kernel/entry/common.c:168
       exit_to_user_mode_prepare+0xad/0x110 kernel/entry/common.c:203
       __syscall_exit_to_user_mode_work kernel/entry/common.c:285 [inline]
       syscall_exit_to_user_mode+0x2e/0x60 kernel/entry/common.c:296
       entry_SYSCALL_64_after_hwframe+0x63/0xcd

other info that might help us debug this:

Chain exists of:
  nci_mutex --> &genl_data->genl_data_mutex --> &ndev->req_lock

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(&ndev->req_lock);
                               lock(&genl_data->genl_data_mutex);
                               lock(&ndev->req_lock);
  lock(nci_mutex);

 *** DEADLOCK ***

1 lock held by syz-executor164/3633:
 #0: ffff88801fc07350 (&ndev->req_lock){+.+.}-{3:3}, at: nci_close_device+0xfe/0x5e0 net/nfc/nci/core.c:560

stack backtrace:
CPU: 0 PID: 3633 Comm: syz-executor164 Not tainted 6.1.0-syzkaller-03225-g764822972d64 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/26/2022
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x1e3/0x2cb lib/dump_stack.c:106
 check_noncircular+0x2f9/0x3b0 kernel/locking/lockdep.c:2177
 check_prev_add kernel/locking/lockdep.c:3097 [inline]
 check_prevs_add kernel/locking/lockdep.c:3216 [inline]
 validate_chain+0x184a/0x6470 kernel/locking/lockdep.c:3831
 __lock_acquire+0x1292/0x1f60 kernel/locking/lockdep.c:5055
 lock_acquire+0x1a7/0x400 kernel/locking/lockdep.c:5668
 __mutex_lock_common+0x1de/0x26c0 kernel/locking/mutex.c:603
 __mutex_lock kernel/locking/mutex.c:747 [inline]
 mutex_lock_nested+0x17/0x20 kernel/locking/mutex.c:799
 virtual_nci_close+0x13/0x40 drivers/nfc/virtual_ncidev.c:44
 nci_close_device+0x389/0x5e0 net/nfc/nci/core.c:592
 nci_unregister_device+0x3c/0x250 net/nfc/nci/core.c:1291
 virtual_ncidev_close+0x55/0x90 drivers/nfc/virtual_ncidev.c:166
 __fput+0x3ba/0x880 fs/file_table.c:320
 task_work_run+0x243/0x300 kernel/task_work.c:179
 exit_task_work include/linux/task_work.h:38 [inline]
 do_exit+0x664/0x2070 kernel/exit.c:820
 do_group_exit+0x1fd/0x2b0 kernel/exit.c:950
 get_signal+0x1743/0x1810 kernel/signal.c:2858
 arch_do_signal_or_restart+0x8d/0x5f0 arch/x86/kernel/signal.c:306
 exit_to_user_mode_loop+0x74/0x160 kernel/entry/common.c:168
 exit_to_user_mode_prepare+0xad/0x110 kernel/entry/common.c:203
 __syscall_exit_to_user_mode_work kernel/entry/common.c:285 [inline]
 syscall_exit_to_user_mode+0x2e/0x60 kernel/entry/common.c:296
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7f49c6e17639
Code: Unable to access opcode bytes at 0x7f49c6e1760f.
RSP: 002b:00007f49c6dc8318 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
RAX: 0000000000000024 RBX: 00007f49c6e9f428 RCX: 00007f49c6e17639
RDX: 0000000000000000 RSI: 0000000020000440 RDI: 0000000000000004
RBP: 00007f49c6e9f420 R08: 0000000000000003 R09: 0000000000000000
R10: 0000000000000008 R11: 0000000000000246 R12: 00007f49c6e6d064
R13: 00007ffe3eb9521f R14: 00007f49c6dc8400 R15: 0000000000022000
 </TASK>
